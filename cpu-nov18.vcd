$date
	Fri Nov 18 22:53:22 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mux2to1 $end
$var wire 1 ! input1 $end
$var wire 1 " input2 $end
$var wire 1 # select $end
$var reg 1 $ out $end
$upscope $end
$scope module quicktestCPU $end
$var reg 1 % clk $end
$scope module CPU $end
$var wire 5 & A1 [4:0] $end
$var wire 5 ' A2 [4:0] $end
$var wire 3 ( ALUop [2:0] $end
$var wire 32 ) ALUresult [31:0] $end
$var wire 1 * ALUsrc $end
$var wire 32 + ALUsrcB [31:0] $end
$var wire 32 , Dataout [31:0] $end
$var wire 6 - Funct [5:0] $end
$var wire 16 . Imm [15:0] $end
$var wire 32 / InstrOut [31:0] $end
$var wire 1 0 JALselect $end
$var wire 26 1 JumpAddr [25:0] $end
$var wire 1 2 JumpSelect $end
$var wire 1 3 MemWrite $end
$var wire 1 4 MemtoReg $end
$var wire 6 5 Op [5:0] $end
$var wire 32 6 PCaddr [31:0] $end
$var wire 1 7 PCenable $end
$var wire 32 8 PCin [31:0] $end
$var wire 1 9 PCsrc $end
$var wire 5 : Rd [4:0] $end
$var wire 32 ; ReadData1 [31:0] $end
$var wire 32 < ReadData2 [31:0] $end
$var wire 1 = RegDst $end
$var wire 1 > RegWrite $end
$var wire 5 ? Rt [4:0] $end
$var wire 32 @ WriteData [31:0] $end
$var wire 5 A WriteReg [4:0] $end
$var wire 1 B branch $end
$var wire 1 C carryout $end
$var wire 1 D clk $end
$var wire 32 E jumpAddrforpc [31:0] $end
$var wire 32 F nextPC [31:0] $end
$var wire 1 G overflow $end
$var wire 32 H pcbtwnmux [31:0] $end
$var wire 5 I rtrdout [4:0] $end
$var wire 32 J seImm [31:0] $end
$var wire 1 K selectRegorJump $end
$var wire 1 L slower $end
$var wire 1 M startPC $end
$var wire 1 N zero $end
$scope module ctrlunit $end
$var wire 6 O Funct [5:0] $end
$var wire 6 P Op [5:0] $end
$var wire 1 D clk $end
$var wire 1 M selstart $end
$var reg 3 Q ALUOp [2:0] $end
$var reg 1 R ALUSrc $end
$var reg 1 S Branch $end
$var reg 1 T JALselect $end
$var reg 1 U Jump $end
$var reg 1 V MemWrite $end
$var reg 1 W MemtoReg $end
$var reg 1 X PCenable $end
$var reg 1 Y RegDst $end
$var reg 1 Z RegWrite $end
$var reg 1 [ selectRegorJump $end
$upscope $end
$scope module slow $end
$var wire 1 D clk $end
$var reg 4 \ counter [3:0] $end
$var reg 1 ] slowclk $end
$upscope $end
$scope module peecee $end
$var wire 1 L clk $end
$var wire 1 7 enable $end
$var wire 32 ^ pcinput [31:0] $end
$var reg 32 _ addr [31:0] $end
$var reg 32 ` nextaddr [31:0] $end
$upscope $end
$scope module iMem $end
$var wire 32 a Addr [31:0] $end
$var wire 32 b DataOut [31:0] $end
$upscope $end
$scope module iFetch $end
$var wire 32 c instr [31:0] $end
$var reg 5 d A1 [4:0] $end
$var reg 5 e A2 [4:0] $end
$var reg 6 f Funct [5:0] $end
$var reg 16 g Imm [15:0] $end
$var reg 26 h Jumpaddr [25:0] $end
$var reg 6 i Op [5:0] $end
$var reg 5 j RdE [4:0] $end
$var reg 5 k RtE [4:0] $end
$upscope $end
$scope module muxrtrd $end
$var wire 5 l input1 [4:0] $end
$var wire 5 m input2 [4:0] $end
$var wire 1 = select $end
$var reg 5 n out [4:0] $end
$upscope $end
$scope module muxrtrd31 $end
$var wire 5 o input1 [4:0] $end
$var wire 5 p input2 [4:0] $end
$var wire 1 0 select $end
$var reg 5 q out [4:0] $end
$upscope $end
$scope module reggie $end
$var wire 1 D Clk $end
$var wire 32 r ReadData1 [31:0] $end
$var wire 32 s ReadData2 [31:0] $end
$var wire 5 t ReadRegister1 [4:0] $end
$var wire 5 u ReadRegister2 [4:0] $end
$var wire 1 > RegWrite $end
$var wire 32 v WriteData [31:0] $end
$var wire 5 w WriteRegister [4:0] $end
$var wire 32 x decoder_out [31:0] $end
$var wire 32 y register0 [31:0] $end
$var wire 32 z register1 [31:0] $end
$var wire 32 { register10 [31:0] $end
$var wire 32 | register11 [31:0] $end
$var wire 32 } register12 [31:0] $end
$var wire 32 ~ register13 [31:0] $end
$var wire 32 !" register14 [31:0] $end
$var wire 32 "" register15 [31:0] $end
$var wire 32 #" register16 [31:0] $end
$var wire 32 $" register17 [31:0] $end
$var wire 32 %" register18 [31:0] $end
$var wire 32 &" register19 [31:0] $end
$var wire 32 '" register2 [31:0] $end
$var wire 32 (" register20 [31:0] $end
$var wire 32 )" register21 [31:0] $end
$var wire 32 *" register22 [31:0] $end
$var wire 32 +" register23 [31:0] $end
$var wire 32 ," register24 [31:0] $end
$var wire 32 -" register25 [31:0] $end
$var wire 32 ." register26 [31:0] $end
$var wire 32 /" register27 [31:0] $end
$var wire 32 0" register28 [31:0] $end
$var wire 32 1" register29 [31:0] $end
$var wire 32 2" register3 [31:0] $end
$var wire 32 3" register30 [31:0] $end
$var wire 32 4" register31 [31:0] $end
$var wire 32 5" register4 [31:0] $end
$var wire 32 6" register5 [31:0] $end
$var wire 32 7" register6 [31:0] $end
$var wire 32 8" register7 [31:0] $end
$var wire 32 9" register8 [31:0] $end
$var wire 32 :" register9 [31:0] $end
$scope module decoder $end
$var wire 5 ;" address [4:0] $end
$var wire 1 > enable $end
$var wire 32 <" out [31:0] $end
$upscope $end
$scope module reg0 $end
$var wire 1 D clk $end
$var wire 32 =" d [31:0] $end
$var wire 1 >" wrenable $end
$var reg 32 ?" q [31:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 D clk $end
$var wire 32 @" d [31:0] $end
$var wire 1 A" wrenable $end
$var reg 32 B" q [31:0] $end
$upscope $end
$scope module reg2 $end
$var wire 1 D clk $end
$var wire 32 C" d [31:0] $end
$var wire 1 D" wrenable $end
$var reg 32 E" q [31:0] $end
$upscope $end
$scope module reg3 $end
$var wire 1 D clk $end
$var wire 32 F" d [31:0] $end
$var wire 1 G" wrenable $end
$var reg 32 H" q [31:0] $end
$upscope $end
$scope module reg4 $end
$var wire 1 D clk $end
$var wire 32 I" d [31:0] $end
$var wire 1 J" wrenable $end
$var reg 32 K" q [31:0] $end
$upscope $end
$scope module reg5 $end
$var wire 1 D clk $end
$var wire 32 L" d [31:0] $end
$var wire 1 M" wrenable $end
$var reg 32 N" q [31:0] $end
$upscope $end
$scope module reg6 $end
$var wire 1 D clk $end
$var wire 32 O" d [31:0] $end
$var wire 1 P" wrenable $end
$var reg 32 Q" q [31:0] $end
$upscope $end
$scope module reg7 $end
$var wire 1 D clk $end
$var wire 32 R" d [31:0] $end
$var wire 1 S" wrenable $end
$var reg 32 T" q [31:0] $end
$upscope $end
$scope module reg8 $end
$var wire 1 D clk $end
$var wire 32 U" d [31:0] $end
$var wire 1 V" wrenable $end
$var reg 32 W" q [31:0] $end
$upscope $end
$scope module reg9 $end
$var wire 1 D clk $end
$var wire 32 X" d [31:0] $end
$var wire 1 Y" wrenable $end
$var reg 32 Z" q [31:0] $end
$upscope $end
$scope module reg10 $end
$var wire 1 D clk $end
$var wire 32 [" d [31:0] $end
$var wire 1 \" wrenable $end
$var reg 32 ]" q [31:0] $end
$upscope $end
$scope module reg11 $end
$var wire 1 D clk $end
$var wire 32 ^" d [31:0] $end
$var wire 1 _" wrenable $end
$var reg 32 `" q [31:0] $end
$upscope $end
$scope module reg12 $end
$var wire 1 D clk $end
$var wire 32 a" d [31:0] $end
$var wire 1 b" wrenable $end
$var reg 32 c" q [31:0] $end
$upscope $end
$scope module reg13 $end
$var wire 1 D clk $end
$var wire 32 d" d [31:0] $end
$var wire 1 e" wrenable $end
$var reg 32 f" q [31:0] $end
$upscope $end
$scope module reg14 $end
$var wire 1 D clk $end
$var wire 32 g" d [31:0] $end
$var wire 1 h" wrenable $end
$var reg 32 i" q [31:0] $end
$upscope $end
$scope module reg15 $end
$var wire 1 D clk $end
$var wire 32 j" d [31:0] $end
$var wire 1 k" wrenable $end
$var reg 32 l" q [31:0] $end
$upscope $end
$scope module reg16 $end
$var wire 1 D clk $end
$var wire 32 m" d [31:0] $end
$var wire 1 n" wrenable $end
$var reg 32 o" q [31:0] $end
$upscope $end
$scope module reg17 $end
$var wire 1 D clk $end
$var wire 32 p" d [31:0] $end
$var wire 1 q" wrenable $end
$var reg 32 r" q [31:0] $end
$upscope $end
$scope module reg18 $end
$var wire 1 D clk $end
$var wire 32 s" d [31:0] $end
$var wire 1 t" wrenable $end
$var reg 32 u" q [31:0] $end
$upscope $end
$scope module reg19 $end
$var wire 1 D clk $end
$var wire 32 v" d [31:0] $end
$var wire 1 w" wrenable $end
$var reg 32 x" q [31:0] $end
$upscope $end
$scope module reg20 $end
$var wire 1 D clk $end
$var wire 32 y" d [31:0] $end
$var wire 1 z" wrenable $end
$var reg 32 {" q [31:0] $end
$upscope $end
$scope module reg21 $end
$var wire 1 D clk $end
$var wire 32 |" d [31:0] $end
$var wire 1 }" wrenable $end
$var reg 32 ~" q [31:0] $end
$upscope $end
$scope module reg22 $end
$var wire 1 D clk $end
$var wire 32 !# d [31:0] $end
$var wire 1 "# wrenable $end
$var reg 32 ## q [31:0] $end
$upscope $end
$scope module reg23 $end
$var wire 1 D clk $end
$var wire 32 $# d [31:0] $end
$var wire 1 %# wrenable $end
$var reg 32 &# q [31:0] $end
$upscope $end
$scope module reg24 $end
$var wire 1 D clk $end
$var wire 32 '# d [31:0] $end
$var wire 1 (# wrenable $end
$var reg 32 )# q [31:0] $end
$upscope $end
$scope module reg25 $end
$var wire 1 D clk $end
$var wire 32 *# d [31:0] $end
$var wire 1 +# wrenable $end
$var reg 32 ,# q [31:0] $end
$upscope $end
$scope module reg26 $end
$var wire 1 D clk $end
$var wire 32 -# d [31:0] $end
$var wire 1 .# wrenable $end
$var reg 32 /# q [31:0] $end
$upscope $end
$scope module reg27 $end
$var wire 1 D clk $end
$var wire 32 0# d [31:0] $end
$var wire 1 1# wrenable $end
$var reg 32 2# q [31:0] $end
$upscope $end
$scope module reg28 $end
$var wire 1 D clk $end
$var wire 32 3# d [31:0] $end
$var wire 1 4# wrenable $end
$var reg 32 5# q [31:0] $end
$upscope $end
$scope module reg29 $end
$var wire 1 D clk $end
$var wire 32 6# d [31:0] $end
$var wire 1 7# wrenable $end
$var reg 32 8# q [31:0] $end
$upscope $end
$scope module reg30 $end
$var wire 1 D clk $end
$var wire 32 9# d [31:0] $end
$var wire 1 :# wrenable $end
$var reg 32 ;# q [31:0] $end
$upscope $end
$scope module reg31 $end
$var wire 1 D clk $end
$var wire 32 <# d [31:0] $end
$var wire 1 =# wrenable $end
$var reg 32 ># q [31:0] $end
$upscope $end
$scope module mux1 $end
$var wire 5 ?# address [4:0] $end
$var wire 32 @# input0 [31:0] $end
$var wire 32 A# input1 [31:0] $end
$var wire 32 B# input10 [31:0] $end
$var wire 32 C# input11 [31:0] $end
$var wire 32 D# input12 [31:0] $end
$var wire 32 E# input13 [31:0] $end
$var wire 32 F# input14 [31:0] $end
$var wire 32 G# input15 [31:0] $end
$var wire 32 H# input16 [31:0] $end
$var wire 32 I# input17 [31:0] $end
$var wire 32 J# input18 [31:0] $end
$var wire 32 K# input19 [31:0] $end
$var wire 32 L# input2 [31:0] $end
$var wire 32 M# input20 [31:0] $end
$var wire 32 N# input21 [31:0] $end
$var wire 32 O# input22 [31:0] $end
$var wire 32 P# input23 [31:0] $end
$var wire 32 Q# input24 [31:0] $end
$var wire 32 R# input25 [31:0] $end
$var wire 32 S# input26 [31:0] $end
$var wire 32 T# input27 [31:0] $end
$var wire 32 U# input28 [31:0] $end
$var wire 32 V# input29 [31:0] $end
$var wire 32 W# input3 [31:0] $end
$var wire 32 X# input30 [31:0] $end
$var wire 32 Y# input31 [31:0] $end
$var wire 32 Z# input4 [31:0] $end
$var wire 32 [# input5 [31:0] $end
$var wire 32 \# input6 [31:0] $end
$var wire 32 ]# input7 [31:0] $end
$var wire 32 ^# input8 [31:0] $end
$var wire 32 _# input9 [31:0] $end
$var wire 32 `# out [31:0] $end
$upscope $end
$scope module mux2 $end
$var wire 5 a# address [4:0] $end
$var wire 32 b# input0 [31:0] $end
$var wire 32 c# input1 [31:0] $end
$var wire 32 d# input10 [31:0] $end
$var wire 32 e# input11 [31:0] $end
$var wire 32 f# input12 [31:0] $end
$var wire 32 g# input13 [31:0] $end
$var wire 32 h# input14 [31:0] $end
$var wire 32 i# input15 [31:0] $end
$var wire 32 j# input16 [31:0] $end
$var wire 32 k# input17 [31:0] $end
$var wire 32 l# input18 [31:0] $end
$var wire 32 m# input19 [31:0] $end
$var wire 32 n# input2 [31:0] $end
$var wire 32 o# input20 [31:0] $end
$var wire 32 p# input21 [31:0] $end
$var wire 32 q# input22 [31:0] $end
$var wire 32 r# input23 [31:0] $end
$var wire 32 s# input24 [31:0] $end
$var wire 32 t# input25 [31:0] $end
$var wire 32 u# input26 [31:0] $end
$var wire 32 v# input27 [31:0] $end
$var wire 32 w# input28 [31:0] $end
$var wire 32 x# input29 [31:0] $end
$var wire 32 y# input3 [31:0] $end
$var wire 32 z# input30 [31:0] $end
$var wire 32 {# input31 [31:0] $end
$var wire 32 |# input4 [31:0] $end
$var wire 32 }# input5 [31:0] $end
$var wire 32 ~# input6 [31:0] $end
$var wire 32 !$ input7 [31:0] $end
$var wire 32 "$ input8 [31:0] $end
$var wire 32 #$ input9 [31:0] $end
$var wire 32 $$ out [31:0] $end
$upscope $end
$upscope $end
$scope module se $end
$var wire 16 %$ imm [15:0] $end
$var reg 32 &$ seImm [31:0] $end
$upscope $end
$scope module muxrd2seImm $end
$var wire 32 '$ input1 [31:0] $end
$var wire 32 ($ input2 [31:0] $end
$var wire 1 * select $end
$var reg 32 )$ out [31:0] $end
$upscope $end
$scope module alu $end
$var wire 32 *$ a [31:0] $end
$var wire 32 +$ b [31:0] $end
$var wire 1 C carryout $end
$var wire 1 ,$ carryoutadd $end
$var wire 8 -$ carryouts [7:0] $end
$var wire 1 .$ carryoutsub $end
$var wire 3 /$ command [2:0] $end
$var wire 1 0$ nS0 $end
$var wire 1 1$ nS1 $end
$var wire 1 2$ nS2 $end
$var wire 32 3$ out0 [31:0] $end
$var wire 32 4$ out1 [31:0] $end
$var wire 32 5$ out2 [31:0] $end
$var wire 32 6$ out3 [31:0] $end
$var wire 32 7$ out4 [31:0] $end
$var wire 32 8$ out5 [31:0] $end
$var wire 32 9$ out6 [31:0] $end
$var wire 32 :$ out7 [31:0] $end
$var wire 1 N overflow $end
$var wire 1 ;$ overflowadd $end
$var wire 8 <$ overflows [7:0] $end
$var wire 1 =$ overflowsub $end
$var wire 32 >$ result [31:0] $end
$var wire 32 ?$ resultadd [31:0] $end
$var wire 32 @$ resultand [31:0] $end
$var wire 32 A$ resultnand [31:0] $end
$var wire 32 B$ resultnor [31:0] $end
$var wire 32 C$ resultor [31:0] $end
$var wire 32 D$ resultslt [31:0] $end
$var wire 32 E$ resultsub [31:0] $end
$var wire 32 F$ resultxor [31:0] $end
$var wire 1 G zero $end
$scope module adder $end
$var wire 32 G$ a [31:0] $end
$var wire 32 H$ b [31:0] $end
$var wire 1 I$ carryin $end
$var wire 1 ,$ carryout $end
$var wire 32 J$ carryoutarray [31:0] $end
$var wire 1 ;$ overflow $end
$var wire 1 K$ subtract $end
$var wire 32 L$ sum [31:0] $end
$scope module singleadder $end
$var wire 1 M$ AandB $end
$var wire 1 N$ AxorB $end
$var wire 1 O$ AxorBandCin $end
$var wire 1 P$ a $end
$var wire 1 Q$ b $end
$var wire 1 R$ bos0 $end
$var wire 1 K$ carryin $end
$var wire 1 S$ carryout $end
$var wire 1 K$ subtract $end
$var wire 1 T$ sum $end
$upscope $end
$scope begin bitadder[1] $end
$scope module singleadder $end
$var wire 1 U$ AandB $end
$var wire 1 V$ AxorB $end
$var wire 1 W$ AxorBandCin $end
$var wire 1 X$ a $end
$var wire 1 Y$ b $end
$var wire 1 Z$ bos0 $end
$var wire 1 [$ carryin $end
$var wire 1 \$ carryout $end
$var wire 1 K$ subtract $end
$var wire 1 ]$ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[2] $end
$scope module singleadder $end
$var wire 1 ^$ AandB $end
$var wire 1 _$ AxorB $end
$var wire 1 `$ AxorBandCin $end
$var wire 1 a$ a $end
$var wire 1 b$ b $end
$var wire 1 c$ bos0 $end
$var wire 1 d$ carryin $end
$var wire 1 e$ carryout $end
$var wire 1 K$ subtract $end
$var wire 1 f$ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[3] $end
$scope module singleadder $end
$var wire 1 g$ AandB $end
$var wire 1 h$ AxorB $end
$var wire 1 i$ AxorBandCin $end
$var wire 1 j$ a $end
$var wire 1 k$ b $end
$var wire 1 l$ bos0 $end
$var wire 1 m$ carryin $end
$var wire 1 n$ carryout $end
$var wire 1 K$ subtract $end
$var wire 1 o$ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[4] $end
$scope module singleadder $end
$var wire 1 p$ AandB $end
$var wire 1 q$ AxorB $end
$var wire 1 r$ AxorBandCin $end
$var wire 1 s$ a $end
$var wire 1 t$ b $end
$var wire 1 u$ bos0 $end
$var wire 1 v$ carryin $end
$var wire 1 w$ carryout $end
$var wire 1 K$ subtract $end
$var wire 1 x$ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[5] $end
$scope module singleadder $end
$var wire 1 y$ AandB $end
$var wire 1 z$ AxorB $end
$var wire 1 {$ AxorBandCin $end
$var wire 1 |$ a $end
$var wire 1 }$ b $end
$var wire 1 ~$ bos0 $end
$var wire 1 !% carryin $end
$var wire 1 "% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 #% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[6] $end
$scope module singleadder $end
$var wire 1 $% AandB $end
$var wire 1 %% AxorB $end
$var wire 1 &% AxorBandCin $end
$var wire 1 '% a $end
$var wire 1 (% b $end
$var wire 1 )% bos0 $end
$var wire 1 *% carryin $end
$var wire 1 +% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 ,% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[7] $end
$scope module singleadder $end
$var wire 1 -% AandB $end
$var wire 1 .% AxorB $end
$var wire 1 /% AxorBandCin $end
$var wire 1 0% a $end
$var wire 1 1% b $end
$var wire 1 2% bos0 $end
$var wire 1 3% carryin $end
$var wire 1 4% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 5% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[8] $end
$scope module singleadder $end
$var wire 1 6% AandB $end
$var wire 1 7% AxorB $end
$var wire 1 8% AxorBandCin $end
$var wire 1 9% a $end
$var wire 1 :% b $end
$var wire 1 ;% bos0 $end
$var wire 1 <% carryin $end
$var wire 1 =% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 >% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[9] $end
$scope module singleadder $end
$var wire 1 ?% AandB $end
$var wire 1 @% AxorB $end
$var wire 1 A% AxorBandCin $end
$var wire 1 B% a $end
$var wire 1 C% b $end
$var wire 1 D% bos0 $end
$var wire 1 E% carryin $end
$var wire 1 F% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 G% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[10] $end
$scope module singleadder $end
$var wire 1 H% AandB $end
$var wire 1 I% AxorB $end
$var wire 1 J% AxorBandCin $end
$var wire 1 K% a $end
$var wire 1 L% b $end
$var wire 1 M% bos0 $end
$var wire 1 N% carryin $end
$var wire 1 O% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 P% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[11] $end
$scope module singleadder $end
$var wire 1 Q% AandB $end
$var wire 1 R% AxorB $end
$var wire 1 S% AxorBandCin $end
$var wire 1 T% a $end
$var wire 1 U% b $end
$var wire 1 V% bos0 $end
$var wire 1 W% carryin $end
$var wire 1 X% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 Y% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[12] $end
$scope module singleadder $end
$var wire 1 Z% AandB $end
$var wire 1 [% AxorB $end
$var wire 1 \% AxorBandCin $end
$var wire 1 ]% a $end
$var wire 1 ^% b $end
$var wire 1 _% bos0 $end
$var wire 1 `% carryin $end
$var wire 1 a% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 b% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[13] $end
$scope module singleadder $end
$var wire 1 c% AandB $end
$var wire 1 d% AxorB $end
$var wire 1 e% AxorBandCin $end
$var wire 1 f% a $end
$var wire 1 g% b $end
$var wire 1 h% bos0 $end
$var wire 1 i% carryin $end
$var wire 1 j% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 k% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[14] $end
$scope module singleadder $end
$var wire 1 l% AandB $end
$var wire 1 m% AxorB $end
$var wire 1 n% AxorBandCin $end
$var wire 1 o% a $end
$var wire 1 p% b $end
$var wire 1 q% bos0 $end
$var wire 1 r% carryin $end
$var wire 1 s% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 t% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[15] $end
$scope module singleadder $end
$var wire 1 u% AandB $end
$var wire 1 v% AxorB $end
$var wire 1 w% AxorBandCin $end
$var wire 1 x% a $end
$var wire 1 y% b $end
$var wire 1 z% bos0 $end
$var wire 1 {% carryin $end
$var wire 1 |% carryout $end
$var wire 1 K$ subtract $end
$var wire 1 }% sum $end
$upscope $end
$upscope $end
$scope begin bitadder[16] $end
$scope module singleadder $end
$var wire 1 ~% AandB $end
$var wire 1 !& AxorB $end
$var wire 1 "& AxorBandCin $end
$var wire 1 #& a $end
$var wire 1 $& b $end
$var wire 1 %& bos0 $end
$var wire 1 && carryin $end
$var wire 1 '& carryout $end
$var wire 1 K$ subtract $end
$var wire 1 (& sum $end
$upscope $end
$upscope $end
$scope begin bitadder[17] $end
$scope module singleadder $end
$var wire 1 )& AandB $end
$var wire 1 *& AxorB $end
$var wire 1 +& AxorBandCin $end
$var wire 1 ,& a $end
$var wire 1 -& b $end
$var wire 1 .& bos0 $end
$var wire 1 /& carryin $end
$var wire 1 0& carryout $end
$var wire 1 K$ subtract $end
$var wire 1 1& sum $end
$upscope $end
$upscope $end
$scope begin bitadder[18] $end
$scope module singleadder $end
$var wire 1 2& AandB $end
$var wire 1 3& AxorB $end
$var wire 1 4& AxorBandCin $end
$var wire 1 5& a $end
$var wire 1 6& b $end
$var wire 1 7& bos0 $end
$var wire 1 8& carryin $end
$var wire 1 9& carryout $end
$var wire 1 K$ subtract $end
$var wire 1 :& sum $end
$upscope $end
$upscope $end
$scope begin bitadder[19] $end
$scope module singleadder $end
$var wire 1 ;& AandB $end
$var wire 1 <& AxorB $end
$var wire 1 =& AxorBandCin $end
$var wire 1 >& a $end
$var wire 1 ?& b $end
$var wire 1 @& bos0 $end
$var wire 1 A& carryin $end
$var wire 1 B& carryout $end
$var wire 1 K$ subtract $end
$var wire 1 C& sum $end
$upscope $end
$upscope $end
$scope begin bitadder[20] $end
$scope module singleadder $end
$var wire 1 D& AandB $end
$var wire 1 E& AxorB $end
$var wire 1 F& AxorBandCin $end
$var wire 1 G& a $end
$var wire 1 H& b $end
$var wire 1 I& bos0 $end
$var wire 1 J& carryin $end
$var wire 1 K& carryout $end
$var wire 1 K$ subtract $end
$var wire 1 L& sum $end
$upscope $end
$upscope $end
$scope begin bitadder[21] $end
$scope module singleadder $end
$var wire 1 M& AandB $end
$var wire 1 N& AxorB $end
$var wire 1 O& AxorBandCin $end
$var wire 1 P& a $end
$var wire 1 Q& b $end
$var wire 1 R& bos0 $end
$var wire 1 S& carryin $end
$var wire 1 T& carryout $end
$var wire 1 K$ subtract $end
$var wire 1 U& sum $end
$upscope $end
$upscope $end
$scope begin bitadder[22] $end
$scope module singleadder $end
$var wire 1 V& AandB $end
$var wire 1 W& AxorB $end
$var wire 1 X& AxorBandCin $end
$var wire 1 Y& a $end
$var wire 1 Z& b $end
$var wire 1 [& bos0 $end
$var wire 1 \& carryin $end
$var wire 1 ]& carryout $end
$var wire 1 K$ subtract $end
$var wire 1 ^& sum $end
$upscope $end
$upscope $end
$scope begin bitadder[23] $end
$scope module singleadder $end
$var wire 1 _& AandB $end
$var wire 1 `& AxorB $end
$var wire 1 a& AxorBandCin $end
$var wire 1 b& a $end
$var wire 1 c& b $end
$var wire 1 d& bos0 $end
$var wire 1 e& carryin $end
$var wire 1 f& carryout $end
$var wire 1 K$ subtract $end
$var wire 1 g& sum $end
$upscope $end
$upscope $end
$scope begin bitadder[24] $end
$scope module singleadder $end
$var wire 1 h& AandB $end
$var wire 1 i& AxorB $end
$var wire 1 j& AxorBandCin $end
$var wire 1 k& a $end
$var wire 1 l& b $end
$var wire 1 m& bos0 $end
$var wire 1 n& carryin $end
$var wire 1 o& carryout $end
$var wire 1 K$ subtract $end
$var wire 1 p& sum $end
$upscope $end
$upscope $end
$scope begin bitadder[25] $end
$scope module singleadder $end
$var wire 1 q& AandB $end
$var wire 1 r& AxorB $end
$var wire 1 s& AxorBandCin $end
$var wire 1 t& a $end
$var wire 1 u& b $end
$var wire 1 v& bos0 $end
$var wire 1 w& carryin $end
$var wire 1 x& carryout $end
$var wire 1 K$ subtract $end
$var wire 1 y& sum $end
$upscope $end
$upscope $end
$scope begin bitadder[26] $end
$scope module singleadder $end
$var wire 1 z& AandB $end
$var wire 1 {& AxorB $end
$var wire 1 |& AxorBandCin $end
$var wire 1 }& a $end
$var wire 1 ~& b $end
$var wire 1 !' bos0 $end
$var wire 1 "' carryin $end
$var wire 1 #' carryout $end
$var wire 1 K$ subtract $end
$var wire 1 $' sum $end
$upscope $end
$upscope $end
$scope begin bitadder[27] $end
$scope module singleadder $end
$var wire 1 %' AandB $end
$var wire 1 &' AxorB $end
$var wire 1 '' AxorBandCin $end
$var wire 1 (' a $end
$var wire 1 )' b $end
$var wire 1 *' bos0 $end
$var wire 1 +' carryin $end
$var wire 1 ,' carryout $end
$var wire 1 K$ subtract $end
$var wire 1 -' sum $end
$upscope $end
$upscope $end
$scope begin bitadder[28] $end
$scope module singleadder $end
$var wire 1 .' AandB $end
$var wire 1 /' AxorB $end
$var wire 1 0' AxorBandCin $end
$var wire 1 1' a $end
$var wire 1 2' b $end
$var wire 1 3' bos0 $end
$var wire 1 4' carryin $end
$var wire 1 5' carryout $end
$var wire 1 K$ subtract $end
$var wire 1 6' sum $end
$upscope $end
$upscope $end
$scope begin bitadder[29] $end
$scope module singleadder $end
$var wire 1 7' AandB $end
$var wire 1 8' AxorB $end
$var wire 1 9' AxorBandCin $end
$var wire 1 :' a $end
$var wire 1 ;' b $end
$var wire 1 <' bos0 $end
$var wire 1 =' carryin $end
$var wire 1 >' carryout $end
$var wire 1 K$ subtract $end
$var wire 1 ?' sum $end
$upscope $end
$upscope $end
$scope begin bitadder[30] $end
$scope module singleadder $end
$var wire 1 @' AandB $end
$var wire 1 A' AxorB $end
$var wire 1 B' AxorBandCin $end
$var wire 1 C' a $end
$var wire 1 D' b $end
$var wire 1 E' bos0 $end
$var wire 1 F' carryin $end
$var wire 1 G' carryout $end
$var wire 1 K$ subtract $end
$var wire 1 H' sum $end
$upscope $end
$upscope $end
$scope begin bitadder[31] $end
$scope module singleadder $end
$var wire 1 I' AandB $end
$var wire 1 J' AxorB $end
$var wire 1 K' AxorBandCin $end
$var wire 1 L' a $end
$var wire 1 M' b $end
$var wire 1 N' bos0 $end
$var wire 1 O' carryin $end
$var wire 1 P' carryout $end
$var wire 1 K$ subtract $end
$var wire 1 Q' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module subtractor $end
$var wire 32 R' a [31:0] $end
$var wire 32 S' b [31:0] $end
$var wire 1 T' carryin $end
$var wire 1 .$ carryout $end
$var wire 32 U' carryoutarray [31:0] $end
$var wire 1 =$ overflow $end
$var wire 1 V' subtract $end
$var wire 32 W' sum [31:0] $end
$scope module singleadder $end
$var wire 1 X' AandB $end
$var wire 1 Y' AxorB $end
$var wire 1 Z' AxorBandCin $end
$var wire 1 [' a $end
$var wire 1 \' b $end
$var wire 1 ]' bos0 $end
$var wire 1 V' carryin $end
$var wire 1 ^' carryout $end
$var wire 1 V' subtract $end
$var wire 1 _' sum $end
$upscope $end
$scope begin bitadder[1] $end
$scope module singleadder $end
$var wire 1 `' AandB $end
$var wire 1 a' AxorB $end
$var wire 1 b' AxorBandCin $end
$var wire 1 c' a $end
$var wire 1 d' b $end
$var wire 1 e' bos0 $end
$var wire 1 f' carryin $end
$var wire 1 g' carryout $end
$var wire 1 V' subtract $end
$var wire 1 h' sum $end
$upscope $end
$upscope $end
$scope begin bitadder[2] $end
$scope module singleadder $end
$var wire 1 i' AandB $end
$var wire 1 j' AxorB $end
$var wire 1 k' AxorBandCin $end
$var wire 1 l' a $end
$var wire 1 m' b $end
$var wire 1 n' bos0 $end
$var wire 1 o' carryin $end
$var wire 1 p' carryout $end
$var wire 1 V' subtract $end
$var wire 1 q' sum $end
$upscope $end
$upscope $end
$scope begin bitadder[3] $end
$scope module singleadder $end
$var wire 1 r' AandB $end
$var wire 1 s' AxorB $end
$var wire 1 t' AxorBandCin $end
$var wire 1 u' a $end
$var wire 1 v' b $end
$var wire 1 w' bos0 $end
$var wire 1 x' carryin $end
$var wire 1 y' carryout $end
$var wire 1 V' subtract $end
$var wire 1 z' sum $end
$upscope $end
$upscope $end
$scope begin bitadder[4] $end
$scope module singleadder $end
$var wire 1 {' AandB $end
$var wire 1 |' AxorB $end
$var wire 1 }' AxorBandCin $end
$var wire 1 ~' a $end
$var wire 1 !( b $end
$var wire 1 "( bos0 $end
$var wire 1 #( carryin $end
$var wire 1 $( carryout $end
$var wire 1 V' subtract $end
$var wire 1 %( sum $end
$upscope $end
$upscope $end
$scope begin bitadder[5] $end
$scope module singleadder $end
$var wire 1 &( AandB $end
$var wire 1 '( AxorB $end
$var wire 1 (( AxorBandCin $end
$var wire 1 )( a $end
$var wire 1 *( b $end
$var wire 1 +( bos0 $end
$var wire 1 ,( carryin $end
$var wire 1 -( carryout $end
$var wire 1 V' subtract $end
$var wire 1 .( sum $end
$upscope $end
$upscope $end
$scope begin bitadder[6] $end
$scope module singleadder $end
$var wire 1 /( AandB $end
$var wire 1 0( AxorB $end
$var wire 1 1( AxorBandCin $end
$var wire 1 2( a $end
$var wire 1 3( b $end
$var wire 1 4( bos0 $end
$var wire 1 5( carryin $end
$var wire 1 6( carryout $end
$var wire 1 V' subtract $end
$var wire 1 7( sum $end
$upscope $end
$upscope $end
$scope begin bitadder[7] $end
$scope module singleadder $end
$var wire 1 8( AandB $end
$var wire 1 9( AxorB $end
$var wire 1 :( AxorBandCin $end
$var wire 1 ;( a $end
$var wire 1 <( b $end
$var wire 1 =( bos0 $end
$var wire 1 >( carryin $end
$var wire 1 ?( carryout $end
$var wire 1 V' subtract $end
$var wire 1 @( sum $end
$upscope $end
$upscope $end
$scope begin bitadder[8] $end
$scope module singleadder $end
$var wire 1 A( AandB $end
$var wire 1 B( AxorB $end
$var wire 1 C( AxorBandCin $end
$var wire 1 D( a $end
$var wire 1 E( b $end
$var wire 1 F( bos0 $end
$var wire 1 G( carryin $end
$var wire 1 H( carryout $end
$var wire 1 V' subtract $end
$var wire 1 I( sum $end
$upscope $end
$upscope $end
$scope begin bitadder[9] $end
$scope module singleadder $end
$var wire 1 J( AandB $end
$var wire 1 K( AxorB $end
$var wire 1 L( AxorBandCin $end
$var wire 1 M( a $end
$var wire 1 N( b $end
$var wire 1 O( bos0 $end
$var wire 1 P( carryin $end
$var wire 1 Q( carryout $end
$var wire 1 V' subtract $end
$var wire 1 R( sum $end
$upscope $end
$upscope $end
$scope begin bitadder[10] $end
$scope module singleadder $end
$var wire 1 S( AandB $end
$var wire 1 T( AxorB $end
$var wire 1 U( AxorBandCin $end
$var wire 1 V( a $end
$var wire 1 W( b $end
$var wire 1 X( bos0 $end
$var wire 1 Y( carryin $end
$var wire 1 Z( carryout $end
$var wire 1 V' subtract $end
$var wire 1 [( sum $end
$upscope $end
$upscope $end
$scope begin bitadder[11] $end
$scope module singleadder $end
$var wire 1 \( AandB $end
$var wire 1 ]( AxorB $end
$var wire 1 ^( AxorBandCin $end
$var wire 1 _( a $end
$var wire 1 `( b $end
$var wire 1 a( bos0 $end
$var wire 1 b( carryin $end
$var wire 1 c( carryout $end
$var wire 1 V' subtract $end
$var wire 1 d( sum $end
$upscope $end
$upscope $end
$scope begin bitadder[12] $end
$scope module singleadder $end
$var wire 1 e( AandB $end
$var wire 1 f( AxorB $end
$var wire 1 g( AxorBandCin $end
$var wire 1 h( a $end
$var wire 1 i( b $end
$var wire 1 j( bos0 $end
$var wire 1 k( carryin $end
$var wire 1 l( carryout $end
$var wire 1 V' subtract $end
$var wire 1 m( sum $end
$upscope $end
$upscope $end
$scope begin bitadder[13] $end
$scope module singleadder $end
$var wire 1 n( AandB $end
$var wire 1 o( AxorB $end
$var wire 1 p( AxorBandCin $end
$var wire 1 q( a $end
$var wire 1 r( b $end
$var wire 1 s( bos0 $end
$var wire 1 t( carryin $end
$var wire 1 u( carryout $end
$var wire 1 V' subtract $end
$var wire 1 v( sum $end
$upscope $end
$upscope $end
$scope begin bitadder[14] $end
$scope module singleadder $end
$var wire 1 w( AandB $end
$var wire 1 x( AxorB $end
$var wire 1 y( AxorBandCin $end
$var wire 1 z( a $end
$var wire 1 {( b $end
$var wire 1 |( bos0 $end
$var wire 1 }( carryin $end
$var wire 1 ~( carryout $end
$var wire 1 V' subtract $end
$var wire 1 !) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[15] $end
$scope module singleadder $end
$var wire 1 ") AandB $end
$var wire 1 #) AxorB $end
$var wire 1 $) AxorBandCin $end
$var wire 1 %) a $end
$var wire 1 &) b $end
$var wire 1 ') bos0 $end
$var wire 1 () carryin $end
$var wire 1 )) carryout $end
$var wire 1 V' subtract $end
$var wire 1 *) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[16] $end
$scope module singleadder $end
$var wire 1 +) AandB $end
$var wire 1 ,) AxorB $end
$var wire 1 -) AxorBandCin $end
$var wire 1 .) a $end
$var wire 1 /) b $end
$var wire 1 0) bos0 $end
$var wire 1 1) carryin $end
$var wire 1 2) carryout $end
$var wire 1 V' subtract $end
$var wire 1 3) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[17] $end
$scope module singleadder $end
$var wire 1 4) AandB $end
$var wire 1 5) AxorB $end
$var wire 1 6) AxorBandCin $end
$var wire 1 7) a $end
$var wire 1 8) b $end
$var wire 1 9) bos0 $end
$var wire 1 :) carryin $end
$var wire 1 ;) carryout $end
$var wire 1 V' subtract $end
$var wire 1 <) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[18] $end
$scope module singleadder $end
$var wire 1 =) AandB $end
$var wire 1 >) AxorB $end
$var wire 1 ?) AxorBandCin $end
$var wire 1 @) a $end
$var wire 1 A) b $end
$var wire 1 B) bos0 $end
$var wire 1 C) carryin $end
$var wire 1 D) carryout $end
$var wire 1 V' subtract $end
$var wire 1 E) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[19] $end
$scope module singleadder $end
$var wire 1 F) AandB $end
$var wire 1 G) AxorB $end
$var wire 1 H) AxorBandCin $end
$var wire 1 I) a $end
$var wire 1 J) b $end
$var wire 1 K) bos0 $end
$var wire 1 L) carryin $end
$var wire 1 M) carryout $end
$var wire 1 V' subtract $end
$var wire 1 N) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[20] $end
$scope module singleadder $end
$var wire 1 O) AandB $end
$var wire 1 P) AxorB $end
$var wire 1 Q) AxorBandCin $end
$var wire 1 R) a $end
$var wire 1 S) b $end
$var wire 1 T) bos0 $end
$var wire 1 U) carryin $end
$var wire 1 V) carryout $end
$var wire 1 V' subtract $end
$var wire 1 W) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[21] $end
$scope module singleadder $end
$var wire 1 X) AandB $end
$var wire 1 Y) AxorB $end
$var wire 1 Z) AxorBandCin $end
$var wire 1 [) a $end
$var wire 1 \) b $end
$var wire 1 ]) bos0 $end
$var wire 1 ^) carryin $end
$var wire 1 _) carryout $end
$var wire 1 V' subtract $end
$var wire 1 `) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[22] $end
$scope module singleadder $end
$var wire 1 a) AandB $end
$var wire 1 b) AxorB $end
$var wire 1 c) AxorBandCin $end
$var wire 1 d) a $end
$var wire 1 e) b $end
$var wire 1 f) bos0 $end
$var wire 1 g) carryin $end
$var wire 1 h) carryout $end
$var wire 1 V' subtract $end
$var wire 1 i) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[23] $end
$scope module singleadder $end
$var wire 1 j) AandB $end
$var wire 1 k) AxorB $end
$var wire 1 l) AxorBandCin $end
$var wire 1 m) a $end
$var wire 1 n) b $end
$var wire 1 o) bos0 $end
$var wire 1 p) carryin $end
$var wire 1 q) carryout $end
$var wire 1 V' subtract $end
$var wire 1 r) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[24] $end
$scope module singleadder $end
$var wire 1 s) AandB $end
$var wire 1 t) AxorB $end
$var wire 1 u) AxorBandCin $end
$var wire 1 v) a $end
$var wire 1 w) b $end
$var wire 1 x) bos0 $end
$var wire 1 y) carryin $end
$var wire 1 z) carryout $end
$var wire 1 V' subtract $end
$var wire 1 {) sum $end
$upscope $end
$upscope $end
$scope begin bitadder[25] $end
$scope module singleadder $end
$var wire 1 |) AandB $end
$var wire 1 }) AxorB $end
$var wire 1 ~) AxorBandCin $end
$var wire 1 !* a $end
$var wire 1 "* b $end
$var wire 1 #* bos0 $end
$var wire 1 $* carryin $end
$var wire 1 %* carryout $end
$var wire 1 V' subtract $end
$var wire 1 &* sum $end
$upscope $end
$upscope $end
$scope begin bitadder[26] $end
$scope module singleadder $end
$var wire 1 '* AandB $end
$var wire 1 (* AxorB $end
$var wire 1 )* AxorBandCin $end
$var wire 1 ** a $end
$var wire 1 +* b $end
$var wire 1 ,* bos0 $end
$var wire 1 -* carryin $end
$var wire 1 .* carryout $end
$var wire 1 V' subtract $end
$var wire 1 /* sum $end
$upscope $end
$upscope $end
$scope begin bitadder[27] $end
$scope module singleadder $end
$var wire 1 0* AandB $end
$var wire 1 1* AxorB $end
$var wire 1 2* AxorBandCin $end
$var wire 1 3* a $end
$var wire 1 4* b $end
$var wire 1 5* bos0 $end
$var wire 1 6* carryin $end
$var wire 1 7* carryout $end
$var wire 1 V' subtract $end
$var wire 1 8* sum $end
$upscope $end
$upscope $end
$scope begin bitadder[28] $end
$scope module singleadder $end
$var wire 1 9* AandB $end
$var wire 1 :* AxorB $end
$var wire 1 ;* AxorBandCin $end
$var wire 1 <* a $end
$var wire 1 =* b $end
$var wire 1 >* bos0 $end
$var wire 1 ?* carryin $end
$var wire 1 @* carryout $end
$var wire 1 V' subtract $end
$var wire 1 A* sum $end
$upscope $end
$upscope $end
$scope begin bitadder[29] $end
$scope module singleadder $end
$var wire 1 B* AandB $end
$var wire 1 C* AxorB $end
$var wire 1 D* AxorBandCin $end
$var wire 1 E* a $end
$var wire 1 F* b $end
$var wire 1 G* bos0 $end
$var wire 1 H* carryin $end
$var wire 1 I* carryout $end
$var wire 1 V' subtract $end
$var wire 1 J* sum $end
$upscope $end
$upscope $end
$scope begin bitadder[30] $end
$scope module singleadder $end
$var wire 1 K* AandB $end
$var wire 1 L* AxorB $end
$var wire 1 M* AxorBandCin $end
$var wire 1 N* a $end
$var wire 1 O* b $end
$var wire 1 P* bos0 $end
$var wire 1 Q* carryin $end
$var wire 1 R* carryout $end
$var wire 1 V' subtract $end
$var wire 1 S* sum $end
$upscope $end
$upscope $end
$scope begin bitadder[31] $end
$scope module singleadder $end
$var wire 1 T* AandB $end
$var wire 1 U* AxorB $end
$var wire 1 V* AxorBandCin $end
$var wire 1 W* a $end
$var wire 1 X* b $end
$var wire 1 Y* bos0 $end
$var wire 1 Z* carryin $end
$var wire 1 [* carryout $end
$var wire 1 V' subtract $end
$var wire 1 \* sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module xorer $end
$var wire 32 ]* a [31:0] $end
$var wire 32 ^* b [31:0] $end
$var wire 32 _* result [31:0] $end
$scope begin XOR[0] $end
$upscope $end
$scope begin XOR[1] $end
$upscope $end
$scope begin XOR[2] $end
$upscope $end
$scope begin XOR[3] $end
$upscope $end
$scope begin XOR[4] $end
$upscope $end
$scope begin XOR[5] $end
$upscope $end
$scope begin XOR[6] $end
$upscope $end
$scope begin XOR[7] $end
$upscope $end
$scope begin XOR[8] $end
$upscope $end
$scope begin XOR[9] $end
$upscope $end
$scope begin XOR[10] $end
$upscope $end
$scope begin XOR[11] $end
$upscope $end
$scope begin XOR[12] $end
$upscope $end
$scope begin XOR[13] $end
$upscope $end
$scope begin XOR[14] $end
$upscope $end
$scope begin XOR[15] $end
$upscope $end
$scope begin XOR[16] $end
$upscope $end
$scope begin XOR[17] $end
$upscope $end
$scope begin XOR[18] $end
$upscope $end
$scope begin XOR[19] $end
$upscope $end
$scope begin XOR[20] $end
$upscope $end
$scope begin XOR[21] $end
$upscope $end
$scope begin XOR[22] $end
$upscope $end
$scope begin XOR[23] $end
$upscope $end
$scope begin XOR[24] $end
$upscope $end
$scope begin XOR[25] $end
$upscope $end
$scope begin XOR[26] $end
$upscope $end
$scope begin XOR[27] $end
$upscope $end
$scope begin XOR[28] $end
$upscope $end
$scope begin XOR[29] $end
$upscope $end
$scope begin XOR[30] $end
$upscope $end
$scope begin XOR[31] $end
$upscope $end
$upscope $end
$scope module slter $end
$var wire 32 `* a [31:0] $end
$var wire 32 a* b [31:0] $end
$var wire 1 b* carryout $end
$var wire 1 c* overflow $end
$var wire 32 d* result [31:0] $end
$var wire 32 e* resultsub [31:0] $end
$scope module intermediateadder $end
$var wire 32 f* a [31:0] $end
$var wire 32 g* b [31:0] $end
$var wire 1 h* carryin $end
$var wire 1 b* carryout $end
$var wire 32 i* carryoutarray [31:0] $end
$var wire 1 c* overflow $end
$var wire 1 j* subtract $end
$var wire 32 k* sum [31:0] $end
$scope module singleadder $end
$var wire 1 l* AandB $end
$var wire 1 m* AxorB $end
$var wire 1 n* AxorBandCin $end
$var wire 1 o* a $end
$var wire 1 p* b $end
$var wire 1 q* bos0 $end
$var wire 1 j* carryin $end
$var wire 1 r* carryout $end
$var wire 1 j* subtract $end
$var wire 1 s* sum $end
$upscope $end
$scope begin bitadder[1] $end
$scope module singleadder $end
$var wire 1 t* AandB $end
$var wire 1 u* AxorB $end
$var wire 1 v* AxorBandCin $end
$var wire 1 w* a $end
$var wire 1 x* b $end
$var wire 1 y* bos0 $end
$var wire 1 z* carryin $end
$var wire 1 {* carryout $end
$var wire 1 j* subtract $end
$var wire 1 |* sum $end
$upscope $end
$upscope $end
$scope begin bitadder[2] $end
$scope module singleadder $end
$var wire 1 }* AandB $end
$var wire 1 ~* AxorB $end
$var wire 1 !+ AxorBandCin $end
$var wire 1 "+ a $end
$var wire 1 #+ b $end
$var wire 1 $+ bos0 $end
$var wire 1 %+ carryin $end
$var wire 1 &+ carryout $end
$var wire 1 j* subtract $end
$var wire 1 '+ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[3] $end
$scope module singleadder $end
$var wire 1 (+ AandB $end
$var wire 1 )+ AxorB $end
$var wire 1 *+ AxorBandCin $end
$var wire 1 ++ a $end
$var wire 1 ,+ b $end
$var wire 1 -+ bos0 $end
$var wire 1 .+ carryin $end
$var wire 1 /+ carryout $end
$var wire 1 j* subtract $end
$var wire 1 0+ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[4] $end
$scope module singleadder $end
$var wire 1 1+ AandB $end
$var wire 1 2+ AxorB $end
$var wire 1 3+ AxorBandCin $end
$var wire 1 4+ a $end
$var wire 1 5+ b $end
$var wire 1 6+ bos0 $end
$var wire 1 7+ carryin $end
$var wire 1 8+ carryout $end
$var wire 1 j* subtract $end
$var wire 1 9+ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[5] $end
$scope module singleadder $end
$var wire 1 :+ AandB $end
$var wire 1 ;+ AxorB $end
$var wire 1 <+ AxorBandCin $end
$var wire 1 =+ a $end
$var wire 1 >+ b $end
$var wire 1 ?+ bos0 $end
$var wire 1 @+ carryin $end
$var wire 1 A+ carryout $end
$var wire 1 j* subtract $end
$var wire 1 B+ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[6] $end
$scope module singleadder $end
$var wire 1 C+ AandB $end
$var wire 1 D+ AxorB $end
$var wire 1 E+ AxorBandCin $end
$var wire 1 F+ a $end
$var wire 1 G+ b $end
$var wire 1 H+ bos0 $end
$var wire 1 I+ carryin $end
$var wire 1 J+ carryout $end
$var wire 1 j* subtract $end
$var wire 1 K+ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[7] $end
$scope module singleadder $end
$var wire 1 L+ AandB $end
$var wire 1 M+ AxorB $end
$var wire 1 N+ AxorBandCin $end
$var wire 1 O+ a $end
$var wire 1 P+ b $end
$var wire 1 Q+ bos0 $end
$var wire 1 R+ carryin $end
$var wire 1 S+ carryout $end
$var wire 1 j* subtract $end
$var wire 1 T+ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[8] $end
$scope module singleadder $end
$var wire 1 U+ AandB $end
$var wire 1 V+ AxorB $end
$var wire 1 W+ AxorBandCin $end
$var wire 1 X+ a $end
$var wire 1 Y+ b $end
$var wire 1 Z+ bos0 $end
$var wire 1 [+ carryin $end
$var wire 1 \+ carryout $end
$var wire 1 j* subtract $end
$var wire 1 ]+ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[9] $end
$scope module singleadder $end
$var wire 1 ^+ AandB $end
$var wire 1 _+ AxorB $end
$var wire 1 `+ AxorBandCin $end
$var wire 1 a+ a $end
$var wire 1 b+ b $end
$var wire 1 c+ bos0 $end
$var wire 1 d+ carryin $end
$var wire 1 e+ carryout $end
$var wire 1 j* subtract $end
$var wire 1 f+ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[10] $end
$scope module singleadder $end
$var wire 1 g+ AandB $end
$var wire 1 h+ AxorB $end
$var wire 1 i+ AxorBandCin $end
$var wire 1 j+ a $end
$var wire 1 k+ b $end
$var wire 1 l+ bos0 $end
$var wire 1 m+ carryin $end
$var wire 1 n+ carryout $end
$var wire 1 j* subtract $end
$var wire 1 o+ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[11] $end
$scope module singleadder $end
$var wire 1 p+ AandB $end
$var wire 1 q+ AxorB $end
$var wire 1 r+ AxorBandCin $end
$var wire 1 s+ a $end
$var wire 1 t+ b $end
$var wire 1 u+ bos0 $end
$var wire 1 v+ carryin $end
$var wire 1 w+ carryout $end
$var wire 1 j* subtract $end
$var wire 1 x+ sum $end
$upscope $end
$upscope $end
$scope begin bitadder[12] $end
$scope module singleadder $end
$var wire 1 y+ AandB $end
$var wire 1 z+ AxorB $end
$var wire 1 {+ AxorBandCin $end
$var wire 1 |+ a $end
$var wire 1 }+ b $end
$var wire 1 ~+ bos0 $end
$var wire 1 !, carryin $end
$var wire 1 ", carryout $end
$var wire 1 j* subtract $end
$var wire 1 #, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[13] $end
$scope module singleadder $end
$var wire 1 $, AandB $end
$var wire 1 %, AxorB $end
$var wire 1 &, AxorBandCin $end
$var wire 1 ', a $end
$var wire 1 (, b $end
$var wire 1 ), bos0 $end
$var wire 1 *, carryin $end
$var wire 1 +, carryout $end
$var wire 1 j* subtract $end
$var wire 1 ,, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[14] $end
$scope module singleadder $end
$var wire 1 -, AandB $end
$var wire 1 ., AxorB $end
$var wire 1 /, AxorBandCin $end
$var wire 1 0, a $end
$var wire 1 1, b $end
$var wire 1 2, bos0 $end
$var wire 1 3, carryin $end
$var wire 1 4, carryout $end
$var wire 1 j* subtract $end
$var wire 1 5, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[15] $end
$scope module singleadder $end
$var wire 1 6, AandB $end
$var wire 1 7, AxorB $end
$var wire 1 8, AxorBandCin $end
$var wire 1 9, a $end
$var wire 1 :, b $end
$var wire 1 ;, bos0 $end
$var wire 1 <, carryin $end
$var wire 1 =, carryout $end
$var wire 1 j* subtract $end
$var wire 1 >, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[16] $end
$scope module singleadder $end
$var wire 1 ?, AandB $end
$var wire 1 @, AxorB $end
$var wire 1 A, AxorBandCin $end
$var wire 1 B, a $end
$var wire 1 C, b $end
$var wire 1 D, bos0 $end
$var wire 1 E, carryin $end
$var wire 1 F, carryout $end
$var wire 1 j* subtract $end
$var wire 1 G, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[17] $end
$scope module singleadder $end
$var wire 1 H, AandB $end
$var wire 1 I, AxorB $end
$var wire 1 J, AxorBandCin $end
$var wire 1 K, a $end
$var wire 1 L, b $end
$var wire 1 M, bos0 $end
$var wire 1 N, carryin $end
$var wire 1 O, carryout $end
$var wire 1 j* subtract $end
$var wire 1 P, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[18] $end
$scope module singleadder $end
$var wire 1 Q, AandB $end
$var wire 1 R, AxorB $end
$var wire 1 S, AxorBandCin $end
$var wire 1 T, a $end
$var wire 1 U, b $end
$var wire 1 V, bos0 $end
$var wire 1 W, carryin $end
$var wire 1 X, carryout $end
$var wire 1 j* subtract $end
$var wire 1 Y, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[19] $end
$scope module singleadder $end
$var wire 1 Z, AandB $end
$var wire 1 [, AxorB $end
$var wire 1 \, AxorBandCin $end
$var wire 1 ], a $end
$var wire 1 ^, b $end
$var wire 1 _, bos0 $end
$var wire 1 `, carryin $end
$var wire 1 a, carryout $end
$var wire 1 j* subtract $end
$var wire 1 b, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[20] $end
$scope module singleadder $end
$var wire 1 c, AandB $end
$var wire 1 d, AxorB $end
$var wire 1 e, AxorBandCin $end
$var wire 1 f, a $end
$var wire 1 g, b $end
$var wire 1 h, bos0 $end
$var wire 1 i, carryin $end
$var wire 1 j, carryout $end
$var wire 1 j* subtract $end
$var wire 1 k, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[21] $end
$scope module singleadder $end
$var wire 1 l, AandB $end
$var wire 1 m, AxorB $end
$var wire 1 n, AxorBandCin $end
$var wire 1 o, a $end
$var wire 1 p, b $end
$var wire 1 q, bos0 $end
$var wire 1 r, carryin $end
$var wire 1 s, carryout $end
$var wire 1 j* subtract $end
$var wire 1 t, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[22] $end
$scope module singleadder $end
$var wire 1 u, AandB $end
$var wire 1 v, AxorB $end
$var wire 1 w, AxorBandCin $end
$var wire 1 x, a $end
$var wire 1 y, b $end
$var wire 1 z, bos0 $end
$var wire 1 {, carryin $end
$var wire 1 |, carryout $end
$var wire 1 j* subtract $end
$var wire 1 }, sum $end
$upscope $end
$upscope $end
$scope begin bitadder[23] $end
$scope module singleadder $end
$var wire 1 ~, AandB $end
$var wire 1 !- AxorB $end
$var wire 1 "- AxorBandCin $end
$var wire 1 #- a $end
$var wire 1 $- b $end
$var wire 1 %- bos0 $end
$var wire 1 &- carryin $end
$var wire 1 '- carryout $end
$var wire 1 j* subtract $end
$var wire 1 (- sum $end
$upscope $end
$upscope $end
$scope begin bitadder[24] $end
$scope module singleadder $end
$var wire 1 )- AandB $end
$var wire 1 *- AxorB $end
$var wire 1 +- AxorBandCin $end
$var wire 1 ,- a $end
$var wire 1 -- b $end
$var wire 1 .- bos0 $end
$var wire 1 /- carryin $end
$var wire 1 0- carryout $end
$var wire 1 j* subtract $end
$var wire 1 1- sum $end
$upscope $end
$upscope $end
$scope begin bitadder[25] $end
$scope module singleadder $end
$var wire 1 2- AandB $end
$var wire 1 3- AxorB $end
$var wire 1 4- AxorBandCin $end
$var wire 1 5- a $end
$var wire 1 6- b $end
$var wire 1 7- bos0 $end
$var wire 1 8- carryin $end
$var wire 1 9- carryout $end
$var wire 1 j* subtract $end
$var wire 1 :- sum $end
$upscope $end
$upscope $end
$scope begin bitadder[26] $end
$scope module singleadder $end
$var wire 1 ;- AandB $end
$var wire 1 <- AxorB $end
$var wire 1 =- AxorBandCin $end
$var wire 1 >- a $end
$var wire 1 ?- b $end
$var wire 1 @- bos0 $end
$var wire 1 A- carryin $end
$var wire 1 B- carryout $end
$var wire 1 j* subtract $end
$var wire 1 C- sum $end
$upscope $end
$upscope $end
$scope begin bitadder[27] $end
$scope module singleadder $end
$var wire 1 D- AandB $end
$var wire 1 E- AxorB $end
$var wire 1 F- AxorBandCin $end
$var wire 1 G- a $end
$var wire 1 H- b $end
$var wire 1 I- bos0 $end
$var wire 1 J- carryin $end
$var wire 1 K- carryout $end
$var wire 1 j* subtract $end
$var wire 1 L- sum $end
$upscope $end
$upscope $end
$scope begin bitadder[28] $end
$scope module singleadder $end
$var wire 1 M- AandB $end
$var wire 1 N- AxorB $end
$var wire 1 O- AxorBandCin $end
$var wire 1 P- a $end
$var wire 1 Q- b $end
$var wire 1 R- bos0 $end
$var wire 1 S- carryin $end
$var wire 1 T- carryout $end
$var wire 1 j* subtract $end
$var wire 1 U- sum $end
$upscope $end
$upscope $end
$scope begin bitadder[29] $end
$scope module singleadder $end
$var wire 1 V- AandB $end
$var wire 1 W- AxorB $end
$var wire 1 X- AxorBandCin $end
$var wire 1 Y- a $end
$var wire 1 Z- b $end
$var wire 1 [- bos0 $end
$var wire 1 \- carryin $end
$var wire 1 ]- carryout $end
$var wire 1 j* subtract $end
$var wire 1 ^- sum $end
$upscope $end
$upscope $end
$scope begin bitadder[30] $end
$scope module singleadder $end
$var wire 1 _- AandB $end
$var wire 1 `- AxorB $end
$var wire 1 a- AxorBandCin $end
$var wire 1 b- a $end
$var wire 1 c- b $end
$var wire 1 d- bos0 $end
$var wire 1 e- carryin $end
$var wire 1 f- carryout $end
$var wire 1 j* subtract $end
$var wire 1 g- sum $end
$upscope $end
$upscope $end
$scope begin bitadder[31] $end
$scope module singleadder $end
$var wire 1 h- AandB $end
$var wire 1 i- AxorB $end
$var wire 1 j- AxorBandCin $end
$var wire 1 k- a $end
$var wire 1 l- b $end
$var wire 1 m- bos0 $end
$var wire 1 n- carryin $end
$var wire 1 o- carryout $end
$var wire 1 j* subtract $end
$var wire 1 p- sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin NOTgate[1] $end
$upscope $end
$scope begin NOTgate[2] $end
$upscope $end
$scope begin NOTgate[3] $end
$upscope $end
$scope begin NOTgate[4] $end
$upscope $end
$scope begin NOTgate[5] $end
$upscope $end
$scope begin NOTgate[6] $end
$upscope $end
$scope begin NOTgate[7] $end
$upscope $end
$scope begin NOTgate[8] $end
$upscope $end
$scope begin NOTgate[9] $end
$upscope $end
$scope begin NOTgate[10] $end
$upscope $end
$scope begin NOTgate[11] $end
$upscope $end
$scope begin NOTgate[12] $end
$upscope $end
$scope begin NOTgate[13] $end
$upscope $end
$scope begin NOTgate[14] $end
$upscope $end
$scope begin NOTgate[15] $end
$upscope $end
$scope begin NOTgate[16] $end
$upscope $end
$scope begin NOTgate[17] $end
$upscope $end
$scope begin NOTgate[18] $end
$upscope $end
$scope begin NOTgate[19] $end
$upscope $end
$scope begin NOTgate[20] $end
$upscope $end
$scope begin NOTgate[21] $end
$upscope $end
$scope begin NOTgate[22] $end
$upscope $end
$scope begin NOTgate[23] $end
$upscope $end
$scope begin NOTgate[24] $end
$upscope $end
$scope begin NOTgate[25] $end
$upscope $end
$scope begin NOTgate[26] $end
$upscope $end
$scope begin NOTgate[27] $end
$upscope $end
$scope begin NOTgate[28] $end
$upscope $end
$scope begin NOTgate[29] $end
$upscope $end
$scope begin NOTgate[30] $end
$upscope $end
$scope begin NOTgate[31] $end
$upscope $end
$upscope $end
$scope module ander $end
$var wire 32 q- a [31:0] $end
$var wire 32 r- b [31:0] $end
$var wire 32 s- result [31:0] $end
$scope begin AND32[0] $end
$upscope $end
$scope begin AND32[1] $end
$upscope $end
$scope begin AND32[2] $end
$upscope $end
$scope begin AND32[3] $end
$upscope $end
$scope begin AND32[4] $end
$upscope $end
$scope begin AND32[5] $end
$upscope $end
$scope begin AND32[6] $end
$upscope $end
$scope begin AND32[7] $end
$upscope $end
$scope begin AND32[8] $end
$upscope $end
$scope begin AND32[9] $end
$upscope $end
$scope begin AND32[10] $end
$upscope $end
$scope begin AND32[11] $end
$upscope $end
$scope begin AND32[12] $end
$upscope $end
$scope begin AND32[13] $end
$upscope $end
$scope begin AND32[14] $end
$upscope $end
$scope begin AND32[15] $end
$upscope $end
$scope begin AND32[16] $end
$upscope $end
$scope begin AND32[17] $end
$upscope $end
$scope begin AND32[18] $end
$upscope $end
$scope begin AND32[19] $end
$upscope $end
$scope begin AND32[20] $end
$upscope $end
$scope begin AND32[21] $end
$upscope $end
$scope begin AND32[22] $end
$upscope $end
$scope begin AND32[23] $end
$upscope $end
$scope begin AND32[24] $end
$upscope $end
$scope begin AND32[25] $end
$upscope $end
$scope begin AND32[26] $end
$upscope $end
$scope begin AND32[27] $end
$upscope $end
$scope begin AND32[28] $end
$upscope $end
$scope begin AND32[29] $end
$upscope $end
$scope begin AND32[30] $end
$upscope $end
$scope begin AND32[31] $end
$upscope $end
$upscope $end
$scope module nander $end
$var wire 32 t- a [31:0] $end
$var wire 32 u- b [31:0] $end
$var wire 32 v- result [31:0] $end
$scope begin NAND32[0] $end
$upscope $end
$scope begin NAND32[1] $end
$upscope $end
$scope begin NAND32[2] $end
$upscope $end
$scope begin NAND32[3] $end
$upscope $end
$scope begin NAND32[4] $end
$upscope $end
$scope begin NAND32[5] $end
$upscope $end
$scope begin NAND32[6] $end
$upscope $end
$scope begin NAND32[7] $end
$upscope $end
$scope begin NAND32[8] $end
$upscope $end
$scope begin NAND32[9] $end
$upscope $end
$scope begin NAND32[10] $end
$upscope $end
$scope begin NAND32[11] $end
$upscope $end
$scope begin NAND32[12] $end
$upscope $end
$scope begin NAND32[13] $end
$upscope $end
$scope begin NAND32[14] $end
$upscope $end
$scope begin NAND32[15] $end
$upscope $end
$scope begin NAND32[16] $end
$upscope $end
$scope begin NAND32[17] $end
$upscope $end
$scope begin NAND32[18] $end
$upscope $end
$scope begin NAND32[19] $end
$upscope $end
$scope begin NAND32[20] $end
$upscope $end
$scope begin NAND32[21] $end
$upscope $end
$scope begin NAND32[22] $end
$upscope $end
$scope begin NAND32[23] $end
$upscope $end
$scope begin NAND32[24] $end
$upscope $end
$scope begin NAND32[25] $end
$upscope $end
$scope begin NAND32[26] $end
$upscope $end
$scope begin NAND32[27] $end
$upscope $end
$scope begin NAND32[28] $end
$upscope $end
$scope begin NAND32[29] $end
$upscope $end
$scope begin NAND32[30] $end
$upscope $end
$scope begin NAND32[31] $end
$upscope $end
$upscope $end
$scope module norer $end
$var wire 32 w- a [31:0] $end
$var wire 32 x- b [31:0] $end
$var wire 32 y- result [31:0] $end
$scope begin NOR32gate[0] $end
$upscope $end
$scope begin NOR32gate[1] $end
$upscope $end
$scope begin NOR32gate[2] $end
$upscope $end
$scope begin NOR32gate[3] $end
$upscope $end
$scope begin NOR32gate[4] $end
$upscope $end
$scope begin NOR32gate[5] $end
$upscope $end
$scope begin NOR32gate[6] $end
$upscope $end
$scope begin NOR32gate[7] $end
$upscope $end
$scope begin NOR32gate[8] $end
$upscope $end
$scope begin NOR32gate[9] $end
$upscope $end
$scope begin NOR32gate[10] $end
$upscope $end
$scope begin NOR32gate[11] $end
$upscope $end
$scope begin NOR32gate[12] $end
$upscope $end
$scope begin NOR32gate[13] $end
$upscope $end
$scope begin NOR32gate[14] $end
$upscope $end
$scope begin NOR32gate[15] $end
$upscope $end
$scope begin NOR32gate[16] $end
$upscope $end
$scope begin NOR32gate[17] $end
$upscope $end
$scope begin NOR32gate[18] $end
$upscope $end
$scope begin NOR32gate[19] $end
$upscope $end
$scope begin NOR32gate[20] $end
$upscope $end
$scope begin NOR32gate[21] $end
$upscope $end
$scope begin NOR32gate[22] $end
$upscope $end
$scope begin NOR32gate[23] $end
$upscope $end
$scope begin NOR32gate[24] $end
$upscope $end
$scope begin NOR32gate[25] $end
$upscope $end
$scope begin NOR32gate[26] $end
$upscope $end
$scope begin NOR32gate[27] $end
$upscope $end
$scope begin NOR32gate[28] $end
$upscope $end
$scope begin NOR32gate[29] $end
$upscope $end
$scope begin NOR32gate[30] $end
$upscope $end
$scope begin NOR32gate[31] $end
$upscope $end
$upscope $end
$scope module orer $end
$var wire 32 z- a [31:0] $end
$var wire 32 {- b [31:0] $end
$var wire 32 |- result [31:0] $end
$scope begin OR32[0] $end
$upscope $end
$scope begin OR32[1] $end
$upscope $end
$scope begin OR32[2] $end
$upscope $end
$scope begin OR32[3] $end
$upscope $end
$scope begin OR32[4] $end
$upscope $end
$scope begin OR32[5] $end
$upscope $end
$scope begin OR32[6] $end
$upscope $end
$scope begin OR32[7] $end
$upscope $end
$scope begin OR32[8] $end
$upscope $end
$scope begin OR32[9] $end
$upscope $end
$scope begin OR32[10] $end
$upscope $end
$scope begin OR32[11] $end
$upscope $end
$scope begin OR32[12] $end
$upscope $end
$scope begin OR32[13] $end
$upscope $end
$scope begin OR32[14] $end
$upscope $end
$scope begin OR32[15] $end
$upscope $end
$scope begin OR32[16] $end
$upscope $end
$scope begin OR32[17] $end
$upscope $end
$scope begin OR32[18] $end
$upscope $end
$scope begin OR32[19] $end
$upscope $end
$scope begin OR32[20] $end
$upscope $end
$scope begin OR32[21] $end
$upscope $end
$scope begin OR32[22] $end
$upscope $end
$scope begin OR32[23] $end
$upscope $end
$scope begin OR32[24] $end
$upscope $end
$scope begin OR32[25] $end
$upscope $end
$scope begin OR32[26] $end
$upscope $end
$scope begin OR32[27] $end
$upscope $end
$scope begin OR32[28] $end
$upscope $end
$scope begin OR32[29] $end
$upscope $end
$scope begin OR32[30] $end
$upscope $end
$scope begin OR32[31] $end
$upscope $end
$upscope $end
$scope module flagzero $end
$var wire 32 }- a [31:0] $end
$var wire 31 ~- comparisonbits [30:0] $end
$var wire 1 G zeroFlag $end
$scope begin OR[0] $end
$upscope $end
$scope begin OR[1] $end
$upscope $end
$scope begin OR[2] $end
$upscope $end
$scope begin OR[3] $end
$upscope $end
$scope begin OR[4] $end
$upscope $end
$scope begin OR[5] $end
$upscope $end
$scope begin OR[6] $end
$upscope $end
$scope begin OR[7] $end
$upscope $end
$scope begin OR[8] $end
$upscope $end
$scope begin OR[9] $end
$upscope $end
$scope begin OR[10] $end
$upscope $end
$scope begin OR[11] $end
$upscope $end
$scope begin OR[12] $end
$upscope $end
$scope begin OR[13] $end
$upscope $end
$scope begin OR[14] $end
$upscope $end
$scope begin OR[15] $end
$upscope $end
$scope begin OR[16] $end
$upscope $end
$scope begin OR[17] $end
$upscope $end
$scope begin OR[18] $end
$upscope $end
$scope begin OR[19] $end
$upscope $end
$scope begin OR[20] $end
$upscope $end
$scope begin OR[21] $end
$upscope $end
$scope begin OR[22] $end
$upscope $end
$scope begin OR[23] $end
$upscope $end
$scope begin OR[24] $end
$upscope $end
$scope begin OR[25] $end
$upscope $end
$scope begin OR[26] $end
$upscope $end
$scope begin OR[27] $end
$upscope $end
$scope begin OR[28] $end
$upscope $end
$scope begin OR[29] $end
$upscope $end
$upscope $end
$scope begin ALUMUX[0] $end
$upscope $end
$scope begin ALUMUX[1] $end
$upscope $end
$scope begin ALUMUX[2] $end
$upscope $end
$scope begin ALUMUX[3] $end
$upscope $end
$scope begin ALUMUX[4] $end
$upscope $end
$scope begin ALUMUX[5] $end
$upscope $end
$scope begin ALUMUX[6] $end
$upscope $end
$scope begin ALUMUX[7] $end
$upscope $end
$scope begin ALUMUX[8] $end
$upscope $end
$scope begin ALUMUX[9] $end
$upscope $end
$scope begin ALUMUX[10] $end
$upscope $end
$scope begin ALUMUX[11] $end
$upscope $end
$scope begin ALUMUX[12] $end
$upscope $end
$scope begin ALUMUX[13] $end
$upscope $end
$scope begin ALUMUX[14] $end
$upscope $end
$scope begin ALUMUX[15] $end
$upscope $end
$scope begin ALUMUX[16] $end
$upscope $end
$scope begin ALUMUX[17] $end
$upscope $end
$scope begin ALUMUX[18] $end
$upscope $end
$scope begin ALUMUX[19] $end
$upscope $end
$scope begin ALUMUX[20] $end
$upscope $end
$scope begin ALUMUX[21] $end
$upscope $end
$scope begin ALUMUX[22] $end
$upscope $end
$scope begin ALUMUX[23] $end
$upscope $end
$scope begin ALUMUX[24] $end
$upscope $end
$scope begin ALUMUX[25] $end
$upscope $end
$scope begin ALUMUX[26] $end
$upscope $end
$scope begin ALUMUX[27] $end
$upscope $end
$scope begin ALUMUX[28] $end
$upscope $end
$scope begin ALUMUX[29] $end
$upscope $end
$scope begin ALUMUX[30] $end
$upscope $end
$scope begin ALUMUX[31] $end
$upscope $end
$upscope $end
$scope module muxpcbranchinput $end
$var wire 32 !. input1 [31:0] $end
$var wire 32 ". input2 [31:0] $end
$var wire 1 9 select $end
$var reg 32 #. out [31:0] $end
$upscope $end
$scope module muxjumpaddr $end
$var wire 32 $. input1 [31:0] $end
$var wire 32 %. input2 [31:0] $end
$var wire 1 K select $end
$var reg 32 &. out [31:0] $end
$upscope $end
$scope module muxpcjumpinput $end
$var wire 32 '. input1 [31:0] $end
$var wire 32 (. input2 [31:0] $end
$var wire 1 2 select $end
$var reg 32 ). out [31:0] $end
$upscope $end
$scope module DMEM $end
$var wire 32 *. Addr [31:0] $end
$var wire 32 +. DataIn [31:0] $end
$var wire 32 ,. DataOut [31:0] $end
$var wire 1 D clk $end
$var wire 1 3 regWE $end
$upscope $end
$scope module muxwb $end
$var wire 32 -. input1 [31:0] $end
$var wire 32 .. input2 [31:0] $end
$var wire 1 4 select $end
$var reg 32 /. out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module quicktestslowclk $end
$var wire 1 0. slower $end
$var reg 1 1. clk $end
$scope module slow $end
$var wire 1 2. clk $end
$var reg 4 3. counter [3:0] $end
$var reg 1 4. slowclk $end
$upscope $end
$upscope $end
$scope module register $end
$var wire 1 5. clk $end
$var wire 1 6. d $end
$var wire 1 7. wrenable $end
$var reg 1 8. q $end
$upscope $end
$scope module mux2to1 $end
$upscope $end
$scope module quicktestCPU $end
$scope module CPU $end
$scope module ctrlunit $end
$upscope $end
$scope module slow $end
$upscope $end
$scope module peecee $end
$upscope $end
$scope module iMem $end
$upscope $end
$scope module iFetch $end
$upscope $end
$scope module muxrtrd $end
$upscope $end
$scope module muxrtrd31 $end
$upscope $end
$scope module reggie $end
$scope module decoder $end
$upscope $end
$scope module reg0 $end
$upscope $end
$scope module reg1 $end
$upscope $end
$scope module reg2 $end
$upscope $end
$scope module reg3 $end
$upscope $end
$scope module reg4 $end
$upscope $end
$scope module reg5 $end
$upscope $end
$scope module reg6 $end
$upscope $end
$scope module reg7 $end
$upscope $end
$scope module reg8 $end
$upscope $end
$scope module reg9 $end
$upscope $end
$scope module reg10 $end
$upscope $end
$scope module reg11 $end
$upscope $end
$scope module reg12 $end
$upscope $end
$scope module reg13 $end
$upscope $end
$scope module reg14 $end
$upscope $end
$scope module reg15 $end
$upscope $end
$scope module reg16 $end
$upscope $end
$scope module reg17 $end
$upscope $end
$scope module reg18 $end
$upscope $end
$scope module reg19 $end
$upscope $end
$scope module reg20 $end
$upscope $end
$scope module reg21 $end
$upscope $end
$scope module reg22 $end
$upscope $end
$scope module reg23 $end
$upscope $end
$scope module reg24 $end
$upscope $end
$scope module reg25 $end
$upscope $end
$scope module reg26 $end
$upscope $end
$scope module reg27 $end
$upscope $end
$scope module reg28 $end
$upscope $end
$scope module reg29 $end
$upscope $end
$scope module reg30 $end
$upscope $end
$scope module reg31 $end
$upscope $end
$scope module mux1 $end
$upscope $end
$scope module mux2 $end
$upscope $end
$upscope $end
$scope module se $end
$upscope $end
$scope module muxrd2seImm $end
$upscope $end
$scope module alu $end
$scope module adder $end
$scope module singleadder $end
$upscope $end
$scope begin bitadder[1] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[2] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[3] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[4] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[5] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[6] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[7] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[8] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[9] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[10] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[11] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[12] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[13] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[14] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[15] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[16] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[17] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[18] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[19] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[20] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[21] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[22] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[23] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[24] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[25] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[26] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[27] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[28] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[29] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[30] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[31] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$upscope $end
$scope module subtractor $end
$scope module singleadder $end
$upscope $end
$scope begin bitadder[1] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[2] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[3] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[4] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[5] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[6] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[7] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[8] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[9] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[10] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[11] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[12] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[13] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[14] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[15] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[16] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[17] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[18] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[19] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[20] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[21] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[22] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[23] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[24] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[25] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[26] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[27] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[28] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[29] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[30] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[31] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$upscope $end
$scope module xorer $end
$scope begin XOR[0] $end
$upscope $end
$scope begin XOR[1] $end
$upscope $end
$scope begin XOR[2] $end
$upscope $end
$scope begin XOR[3] $end
$upscope $end
$scope begin XOR[4] $end
$upscope $end
$scope begin XOR[5] $end
$upscope $end
$scope begin XOR[6] $end
$upscope $end
$scope begin XOR[7] $end
$upscope $end
$scope begin XOR[8] $end
$upscope $end
$scope begin XOR[9] $end
$upscope $end
$scope begin XOR[10] $end
$upscope $end
$scope begin XOR[11] $end
$upscope $end
$scope begin XOR[12] $end
$upscope $end
$scope begin XOR[13] $end
$upscope $end
$scope begin XOR[14] $end
$upscope $end
$scope begin XOR[15] $end
$upscope $end
$scope begin XOR[16] $end
$upscope $end
$scope begin XOR[17] $end
$upscope $end
$scope begin XOR[18] $end
$upscope $end
$scope begin XOR[19] $end
$upscope $end
$scope begin XOR[20] $end
$upscope $end
$scope begin XOR[21] $end
$upscope $end
$scope begin XOR[22] $end
$upscope $end
$scope begin XOR[23] $end
$upscope $end
$scope begin XOR[24] $end
$upscope $end
$scope begin XOR[25] $end
$upscope $end
$scope begin XOR[26] $end
$upscope $end
$scope begin XOR[27] $end
$upscope $end
$scope begin XOR[28] $end
$upscope $end
$scope begin XOR[29] $end
$upscope $end
$scope begin XOR[30] $end
$upscope $end
$scope begin XOR[31] $end
$upscope $end
$upscope $end
$scope module slter $end
$scope module intermediateadder $end
$scope module singleadder $end
$upscope $end
$scope begin bitadder[1] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[2] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[3] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[4] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[5] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[6] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[7] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[8] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[9] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[10] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[11] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[12] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[13] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[14] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[15] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[16] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[17] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[18] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[19] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[20] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[21] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[22] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[23] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[24] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[25] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[26] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[27] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[28] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[29] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[30] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$scope begin bitadder[31] $end
$scope module singleadder $end
$upscope $end
$upscope $end
$upscope $end
$scope begin NOTgate[1] $end
$upscope $end
$scope begin NOTgate[2] $end
$upscope $end
$scope begin NOTgate[3] $end
$upscope $end
$scope begin NOTgate[4] $end
$upscope $end
$scope begin NOTgate[5] $end
$upscope $end
$scope begin NOTgate[6] $end
$upscope $end
$scope begin NOTgate[7] $end
$upscope $end
$scope begin NOTgate[8] $end
$upscope $end
$scope begin NOTgate[9] $end
$upscope $end
$scope begin NOTgate[10] $end
$upscope $end
$scope begin NOTgate[11] $end
$upscope $end
$scope begin NOTgate[12] $end
$upscope $end
$scope begin NOTgate[13] $end
$upscope $end
$scope begin NOTgate[14] $end
$upscope $end
$scope begin NOTgate[15] $end
$upscope $end
$scope begin NOTgate[16] $end
$upscope $end
$scope begin NOTgate[17] $end
$upscope $end
$scope begin NOTgate[18] $end
$upscope $end
$scope begin NOTgate[19] $end
$upscope $end
$scope begin NOTgate[20] $end
$upscope $end
$scope begin NOTgate[21] $end
$upscope $end
$scope begin NOTgate[22] $end
$upscope $end
$scope begin NOTgate[23] $end
$upscope $end
$scope begin NOTgate[24] $end
$upscope $end
$scope begin NOTgate[25] $end
$upscope $end
$scope begin NOTgate[26] $end
$upscope $end
$scope begin NOTgate[27] $end
$upscope $end
$scope begin NOTgate[28] $end
$upscope $end
$scope begin NOTgate[29] $end
$upscope $end
$scope begin NOTgate[30] $end
$upscope $end
$scope begin NOTgate[31] $end
$upscope $end
$upscope $end
$scope module ander $end
$scope begin AND32[0] $end
$upscope $end
$scope begin AND32[1] $end
$upscope $end
$scope begin AND32[2] $end
$upscope $end
$scope begin AND32[3] $end
$upscope $end
$scope begin AND32[4] $end
$upscope $end
$scope begin AND32[5] $end
$upscope $end
$scope begin AND32[6] $end
$upscope $end
$scope begin AND32[7] $end
$upscope $end
$scope begin AND32[8] $end
$upscope $end
$scope begin AND32[9] $end
$upscope $end
$scope begin AND32[10] $end
$upscope $end
$scope begin AND32[11] $end
$upscope $end
$scope begin AND32[12] $end
$upscope $end
$scope begin AND32[13] $end
$upscope $end
$scope begin AND32[14] $end
$upscope $end
$scope begin AND32[15] $end
$upscope $end
$scope begin AND32[16] $end
$upscope $end
$scope begin AND32[17] $end
$upscope $end
$scope begin AND32[18] $end
$upscope $end
$scope begin AND32[19] $end
$upscope $end
$scope begin AND32[20] $end
$upscope $end
$scope begin AND32[21] $end
$upscope $end
$scope begin AND32[22] $end
$upscope $end
$scope begin AND32[23] $end
$upscope $end
$scope begin AND32[24] $end
$upscope $end
$scope begin AND32[25] $end
$upscope $end
$scope begin AND32[26] $end
$upscope $end
$scope begin AND32[27] $end
$upscope $end
$scope begin AND32[28] $end
$upscope $end
$scope begin AND32[29] $end
$upscope $end
$scope begin AND32[30] $end
$upscope $end
$scope begin AND32[31] $end
$upscope $end
$upscope $end
$scope module nander $end
$scope begin NAND32[0] $end
$upscope $end
$scope begin NAND32[1] $end
$upscope $end
$scope begin NAND32[2] $end
$upscope $end
$scope begin NAND32[3] $end
$upscope $end
$scope begin NAND32[4] $end
$upscope $end
$scope begin NAND32[5] $end
$upscope $end
$scope begin NAND32[6] $end
$upscope $end
$scope begin NAND32[7] $end
$upscope $end
$scope begin NAND32[8] $end
$upscope $end
$scope begin NAND32[9] $end
$upscope $end
$scope begin NAND32[10] $end
$upscope $end
$scope begin NAND32[11] $end
$upscope $end
$scope begin NAND32[12] $end
$upscope $end
$scope begin NAND32[13] $end
$upscope $end
$scope begin NAND32[14] $end
$upscope $end
$scope begin NAND32[15] $end
$upscope $end
$scope begin NAND32[16] $end
$upscope $end
$scope begin NAND32[17] $end
$upscope $end
$scope begin NAND32[18] $end
$upscope $end
$scope begin NAND32[19] $end
$upscope $end
$scope begin NAND32[20] $end
$upscope $end
$scope begin NAND32[21] $end
$upscope $end
$scope begin NAND32[22] $end
$upscope $end
$scope begin NAND32[23] $end
$upscope $end
$scope begin NAND32[24] $end
$upscope $end
$scope begin NAND32[25] $end
$upscope $end
$scope begin NAND32[26] $end
$upscope $end
$scope begin NAND32[27] $end
$upscope $end
$scope begin NAND32[28] $end
$upscope $end
$scope begin NAND32[29] $end
$upscope $end
$scope begin NAND32[30] $end
$upscope $end
$scope begin NAND32[31] $end
$upscope $end
$upscope $end
$scope module norer $end
$scope begin NOR32gate[0] $end
$upscope $end
$scope begin NOR32gate[1] $end
$upscope $end
$scope begin NOR32gate[2] $end
$upscope $end
$scope begin NOR32gate[3] $end
$upscope $end
$scope begin NOR32gate[4] $end
$upscope $end
$scope begin NOR32gate[5] $end
$upscope $end
$scope begin NOR32gate[6] $end
$upscope $end
$scope begin NOR32gate[7] $end
$upscope $end
$scope begin NOR32gate[8] $end
$upscope $end
$scope begin NOR32gate[9] $end
$upscope $end
$scope begin NOR32gate[10] $end
$upscope $end
$scope begin NOR32gate[11] $end
$upscope $end
$scope begin NOR32gate[12] $end
$upscope $end
$scope begin NOR32gate[13] $end
$upscope $end
$scope begin NOR32gate[14] $end
$upscope $end
$scope begin NOR32gate[15] $end
$upscope $end
$scope begin NOR32gate[16] $end
$upscope $end
$scope begin NOR32gate[17] $end
$upscope $end
$scope begin NOR32gate[18] $end
$upscope $end
$scope begin NOR32gate[19] $end
$upscope $end
$scope begin NOR32gate[20] $end
$upscope $end
$scope begin NOR32gate[21] $end
$upscope $end
$scope begin NOR32gate[22] $end
$upscope $end
$scope begin NOR32gate[23] $end
$upscope $end
$scope begin NOR32gate[24] $end
$upscope $end
$scope begin NOR32gate[25] $end
$upscope $end
$scope begin NOR32gate[26] $end
$upscope $end
$scope begin NOR32gate[27] $end
$upscope $end
$scope begin NOR32gate[28] $end
$upscope $end
$scope begin NOR32gate[29] $end
$upscope $end
$scope begin NOR32gate[30] $end
$upscope $end
$scope begin NOR32gate[31] $end
$upscope $end
$upscope $end
$scope module orer $end
$scope begin OR32[0] $end
$upscope $end
$scope begin OR32[1] $end
$upscope $end
$scope begin OR32[2] $end
$upscope $end
$scope begin OR32[3] $end
$upscope $end
$scope begin OR32[4] $end
$upscope $end
$scope begin OR32[5] $end
$upscope $end
$scope begin OR32[6] $end
$upscope $end
$scope begin OR32[7] $end
$upscope $end
$scope begin OR32[8] $end
$upscope $end
$scope begin OR32[9] $end
$upscope $end
$scope begin OR32[10] $end
$upscope $end
$scope begin OR32[11] $end
$upscope $end
$scope begin OR32[12] $end
$upscope $end
$scope begin OR32[13] $end
$upscope $end
$scope begin OR32[14] $end
$upscope $end
$scope begin OR32[15] $end
$upscope $end
$scope begin OR32[16] $end
$upscope $end
$scope begin OR32[17] $end
$upscope $end
$scope begin OR32[18] $end
$upscope $end
$scope begin OR32[19] $end
$upscope $end
$scope begin OR32[20] $end
$upscope $end
$scope begin OR32[21] $end
$upscope $end
$scope begin OR32[22] $end
$upscope $end
$scope begin OR32[23] $end
$upscope $end
$scope begin OR32[24] $end
$upscope $end
$scope begin OR32[25] $end
$upscope $end
$scope begin OR32[26] $end
$upscope $end
$scope begin OR32[27] $end
$upscope $end
$scope begin OR32[28] $end
$upscope $end
$scope begin OR32[29] $end
$upscope $end
$scope begin OR32[30] $end
$upscope $end
$scope begin OR32[31] $end
$upscope $end
$upscope $end
$scope module flagzero $end
$scope begin OR[0] $end
$upscope $end
$scope begin OR[1] $end
$upscope $end
$scope begin OR[2] $end
$upscope $end
$scope begin OR[3] $end
$upscope $end
$scope begin OR[4] $end
$upscope $end
$scope begin OR[5] $end
$upscope $end
$scope begin OR[6] $end
$upscope $end
$scope begin OR[7] $end
$upscope $end
$scope begin OR[8] $end
$upscope $end
$scope begin OR[9] $end
$upscope $end
$scope begin OR[10] $end
$upscope $end
$scope begin OR[11] $end
$upscope $end
$scope begin OR[12] $end
$upscope $end
$scope begin OR[13] $end
$upscope $end
$scope begin OR[14] $end
$upscope $end
$scope begin OR[15] $end
$upscope $end
$scope begin OR[16] $end
$upscope $end
$scope begin OR[17] $end
$upscope $end
$scope begin OR[18] $end
$upscope $end
$scope begin OR[19] $end
$upscope $end
$scope begin OR[20] $end
$upscope $end
$scope begin OR[21] $end
$upscope $end
$scope begin OR[22] $end
$upscope $end
$scope begin OR[23] $end
$upscope $end
$scope begin OR[24] $end
$upscope $end
$scope begin OR[25] $end
$upscope $end
$scope begin OR[26] $end
$upscope $end
$scope begin OR[27] $end
$upscope $end
$scope begin OR[28] $end
$upscope $end
$scope begin OR[29] $end
$upscope $end
$upscope $end
$scope begin ALUMUX[0] $end
$upscope $end
$scope begin ALUMUX[1] $end
$upscope $end
$scope begin ALUMUX[2] $end
$upscope $end
$scope begin ALUMUX[3] $end
$upscope $end
$scope begin ALUMUX[4] $end
$upscope $end
$scope begin ALUMUX[5] $end
$upscope $end
$scope begin ALUMUX[6] $end
$upscope $end
$scope begin ALUMUX[7] $end
$upscope $end
$scope begin ALUMUX[8] $end
$upscope $end
$scope begin ALUMUX[9] $end
$upscope $end
$scope begin ALUMUX[10] $end
$upscope $end
$scope begin ALUMUX[11] $end
$upscope $end
$scope begin ALUMUX[12] $end
$upscope $end
$scope begin ALUMUX[13] $end
$upscope $end
$scope begin ALUMUX[14] $end
$upscope $end
$scope begin ALUMUX[15] $end
$upscope $end
$scope begin ALUMUX[16] $end
$upscope $end
$scope begin ALUMUX[17] $end
$upscope $end
$scope begin ALUMUX[18] $end
$upscope $end
$scope begin ALUMUX[19] $end
$upscope $end
$scope begin ALUMUX[20] $end
$upscope $end
$scope begin ALUMUX[21] $end
$upscope $end
$scope begin ALUMUX[22] $end
$upscope $end
$scope begin ALUMUX[23] $end
$upscope $end
$scope begin ALUMUX[24] $end
$upscope $end
$scope begin ALUMUX[25] $end
$upscope $end
$scope begin ALUMUX[26] $end
$upscope $end
$scope begin ALUMUX[27] $end
$upscope $end
$scope begin ALUMUX[28] $end
$upscope $end
$scope begin ALUMUX[29] $end
$upscope $end
$scope begin ALUMUX[30] $end
$upscope $end
$scope begin ALUMUX[31] $end
$upscope $end
$upscope $end
$scope module muxpcbranchinput $end
$upscope $end
$scope module muxjumpaddr $end
$upscope $end
$scope module muxpcjumpinput $end
$upscope $end
$scope module DMEM $end
$upscope $end
$scope module muxwb $end
$upscope $end
$upscope $end
$upscope $end
$scope module quicktestslowclk $end
$scope module slow $end
$upscope $end
$upscope $end
$scope module register $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x8.
z7.
z6.
z5.
04.
b0 3.
02.
01.
00.
bx /.
bx ..
bx -.
bx ,.
bx +.
bx *.
b0 ).
b1010000000000000110 (.
b0 '.
b1010000000000000110 &.
bx %.
b1010000000000000110 $.
b0 #.
b110 ".
b0 !.
bx ~-
bx }-
bx |-
bx {-
bx z-
bx y-
bx x-
bx w-
bx v-
bx u-
bx t-
bx s-
bx r-
bx q-
xp-
xo-
xn-
xm-
xl-
xk-
xj-
xi-
xh-
xg-
xf-
xe-
xd-
xc-
xb-
xa-
x`-
x_-
x^-
x]-
x\-
x[-
xZ-
xY-
xX-
xW-
xV-
xU-
xT-
xS-
xR-
xQ-
xP-
xO-
xN-
xM-
xL-
xK-
xJ-
xI-
xH-
xG-
xF-
xE-
xD-
xC-
xB-
xA-
x@-
x?-
x>-
x=-
x<-
x;-
x:-
x9-
x8-
x7-
x6-
x5-
x4-
x3-
x2-
x1-
x0-
x/-
x.-
x--
x,-
x+-
x*-
x)-
x(-
x'-
x&-
x%-
x$-
x#-
x"-
x!-
x~,
x},
x|,
x{,
xz,
xy,
xx,
xw,
xv,
xu,
xt,
xs,
xr,
xq,
xp,
xo,
xn,
xm,
xl,
xk,
xj,
xi,
xh,
xg,
xf,
xe,
xd,
xc,
xb,
xa,
x`,
x_,
x^,
x],
x\,
x[,
xZ,
xY,
xX,
xW,
xV,
xU,
xT,
xS,
xR,
xQ,
xP,
xO,
xN,
xM,
xL,
xK,
xJ,
xI,
xH,
xG,
xF,
xE,
xD,
xC,
xB,
xA,
x@,
x?,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
x7,
x6,
x5,
x4,
x3,
x2,
x1,
x0,
x/,
x.,
x-,
x,,
x+,
x*,
x),
x(,
x',
x&,
x%,
x$,
x#,
x",
x!,
x~+
x}+
x|+
x{+
xz+
xy+
xx+
xw+
xv+
xu+
xt+
xs+
xr+
xq+
xp+
xo+
xn+
xm+
xl+
xk+
xj+
xi+
xh+
xg+
xf+
xe+
xd+
xc+
xb+
xa+
x`+
x_+
x^+
x]+
x\+
x[+
xZ+
xY+
xX+
xW+
xV+
xU+
xT+
xS+
xR+
xQ+
xP+
xO+
xN+
xM+
xL+
xK+
xJ+
xI+
xH+
xG+
xF+
xE+
xD+
xC+
xB+
xA+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
x6+
x5+
x4+
x3+
x2+
x1+
x0+
x/+
x.+
x-+
x,+
x++
x*+
x)+
x(+
x'+
x&+
x%+
x$+
x#+
x"+
x!+
x~*
x}*
x|*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
xs*
xr*
xq*
xp*
xo*
xn*
xm*
xl*
bx k*
1j*
bx i*
1h*
bx g*
bx f*
bx e*
b0x d*
xc*
xb*
bx a*
bx `*
bx _*
bx ^*
bx ]*
x\*
x[*
xZ*
xY*
xX*
xW*
xV*
xU*
xT*
xS*
xR*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
xE*
xD*
xC*
xB*
xA*
x@*
x?*
x>*
x=*
x<*
x;*
x:*
x9*
x8*
x7*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
x,*
x+*
x**
x)*
x(*
x'*
x&*
x%*
x$*
x#*
x"*
x!*
x~)
x})
x|)
x{)
xz)
xy)
xx)
xw)
xv)
xu)
xt)
xs)
xr)
xq)
xp)
xo)
xn)
xm)
xl)
xk)
xj)
xi)
xh)
xg)
xf)
xe)
xd)
xc)
xb)
xa)
x`)
x_)
x^)
x])
x\)
x[)
xZ)
xY)
xX)
xW)
xV)
xU)
xT)
xS)
xR)
xQ)
xP)
xO)
xN)
xM)
xL)
xK)
xJ)
xI)
xH)
xG)
xF)
xE)
xD)
xC)
xB)
xA)
x@)
x?)
x>)
x=)
x<)
x;)
x:)
x9)
x8)
x7)
x6)
x5)
x4)
x3)
x2)
x1)
x0)
x/)
x.)
x-)
x,)
x+)
x*)
x))
x()
x')
x&)
x%)
x$)
x#)
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
xq(
xp(
xo(
xn(
xm(
xl(
xk(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
xc(
xb(
xa(
x`(
x_(
x^(
x](
x\(
x[(
xZ(
xY(
xX(
xW(
xV(
xU(
xT(
xS(
xR(
xQ(
xP(
xO(
xN(
xM(
xL(
xK(
xJ(
xI(
xH(
xG(
xF(
xE(
xD(
xC(
xB(
xA(
x@(
x?(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
x^'
x]'
x\'
x['
xZ'
xY'
xX'
bx W'
1V'
bx U'
1T'
bx S'
bx R'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
x3'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
0O$
xN$
xM$
bx L$
0K$
bx J$
0I$
bx H$
bx G$
bx F$
bx E$
b0x D$
bx C$
bx B$
bx A$
bx @$
bx ?$
bx >$
x=$
b0xx <$
x;$
bx :$
bx 9$
bx 8$
bx 7$
b0x 6$
bx 5$
bx 4$
bx 3$
x2$
x1$
x0$
bx /$
x.$
b0xx -$
x,$
bx +$
bx *$
bx )$
b110 ($
bx '$
b110 &$
b110 %$
bx $$
bx #$
bx "$
bx !$
bx ~#
bx }#
bx |#
bx {#
bx z#
bx y#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
bx k#
bx j#
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
b101 a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx Z#
bx Y#
bx X#
bx W#
bx V#
bx U#
bx T#
bx S#
bx R#
bx Q#
bx P#
bx O#
bx N#
bx M#
bx L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
bx @#
b0 ?#
bx >#
0=#
bx <#
bx ;#
0:#
bx 9#
bx 8#
07#
bx 6#
bx 5#
04#
bx 3#
bx 2#
01#
bx 0#
bx /#
0.#
bx -#
bx ,#
0+#
bx *#
bx )#
0(#
bx '#
bx &#
0%#
bx $#
bx ##
0"#
bx !#
bx ~"
0}"
bx |"
bx {"
0z"
bx y"
bx x"
0w"
bx v"
bx u"
0t"
bx s"
bx r"
0q"
bx p"
bx o"
0n"
bx m"
bx l"
0k"
bx j"
bx i"
0h"
bx g"
bx f"
0e"
bx d"
bx c"
0b"
bx a"
bx `"
0_"
bx ^"
bx ]"
0\"
bx ["
bx Z"
0Y"
bx X"
bx W"
0V"
bx U"
bx T"
0S"
bx R"
bx Q"
0P"
bx O"
bx N"
xM"
bx L"
bx K"
0J"
bx I"
bx H"
0G"
bx F"
bx E"
0D"
bx C"
bx B"
0A"
bx @"
bx ?"
0>"
bx ="
b0x00000 <"
b101 ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
b0x00000 x
b101 w
bx v
b101 u
b0 t
bx s
bx r
b101 q
b11111 p
b101 o
b101 n
b0 m
b101 l
b101 k
b0 j
b1110 i
b1010000000000000110 h
b110 g
b110 f
b101 e
b0 d
b111000000001010000000000000110 c
b111000000001010000000000000110 b
b0 a
b0 `
b0 _
b0 ^
0]
b0 \
x[
xZ
xY
1X
xW
xV
xU
xT
xS
xR
bx Q
b1110 P
b110 O
xN
zM
0L
xK
b110 J
b101 I
b0 H
xG
b0 F
b1010000000000000110 E
0D
xC
xB
b101 A
bx @
b101 ?
x>
x=
bx <
bx ;
b0 :
x9
b0 8
17
b0 6
b1110 5
x4
x3
x2
b1010000000000000110 1
x0
b111000000001010000000000000110 /
b110 .
b110 -
bx ,
bx +
x*
bx )
bx (
b101 '
b0 &
0%
z$
z#
z"
z!
$end
#10000
0=$
0c*
0.$
0b*
b1 D$
b1 d*
0[*
0o-
1\*
0V*
1p-
0j-
0Z*
0n-
0R*
0f-
1S*
0M*
1g-
0a-
0Q*
0e-
0I*
0]-
1J*
0D*
1^-
0X-
0H*
0\-
0@*
0T-
1A*
0;*
1U-
0O-
0?*
0S-
07*
0K-
18*
02*
1L-
0F-
06*
0J-
0.*
0B-
1/*
0)*
1C-
0=-
0-*
0A-
0%*
09-
1&*
0~)
1:-
04-
0$*
08-
0z)
00-
1{)
0u)
11-
0+-
0y)
0G
0/-
0q)
0'-
1r)
0l)
1(-
0"-
0p)
0&-
0h)
0|,
1i)
0c)
1},
0w,
0g)
0{,
0_)
0s,
1`)
0Z)
1t,
0n,
0^)
0r,
0V)
0j,
1W)
0Q)
1k,
0e,
0U)
0i,
0M)
0a,
1N)
0H)
1b,
0\,
0L)
0`,
0D)
0X,
1E)
0?)
1Y,
0S,
0C)
0W,
0;)
0O,
1<)
06)
1P,
0J,
0:)
0N,
02)
0F,
13)
0-)
1G,
0A,
01)
0E,
0))
0=,
1*)
0$)
1>,
08,
0()
0<,
0~(
04,
1!)
0y(
15,
0/,
0}(
03,
0u(
0+,
1v(
0p(
1,,
0&,
0t(
0*,
0l(
0",
1m(
0g(
1#,
0{+
0k(
0!,
0c(
0w+
1d(
0^(
1x+
0r+
0b(
0v+
0Z(
0n+
1[(
0U(
1o+
0i+
0Y(
0m+
0Q(
0e+
1R(
0L(
1f+
0`+
0P(
0d+
0H(
0\+
1I(
0C(
1]+
0W+
0G(
0[+
0?(
0S+
1@(
0:(
1T+
0N+
0>(
0R+
06(
0J+
17(
01(
1K+
0E+
05(
0I+
0-(
0A+
1.(
0((
1B+
0<+
0,(
0@+
0$(
08+
1%(
0}'
19+
03+
0#(
b1111111111111111111111111111111 ~-
07+
0y'
0/+
0q'
1z'
0t'
1h'
b11111111111111111111111111111111 ,
b11111111111111111111111111111111 ,.
b11111111111111111111111111111111 ..
b110 )
b110 >$
b110 }-
b110 *.
b110 -.
b110 @
b110 v
b110 ="
b110 @"
b110 C"
b110 F"
b110 I"
b110 L"
b110 O"
b110 R"
b110 U"
b110 X"
b110 ["
b110 ^"
b110 a"
b110 d"
b110 g"
b110 j"
b110 m"
b110 p"
b110 s"
b110 v"
b110 y"
b110 |"
b110 !#
b110 $#
b110 '#
b110 *#
b110 -#
b110 0#
b110 3#
b110 6#
b110 9#
b110 <#
0'+
10+
0*+
1|*
0o'
0x'
1f'
0%+
0.+
1z*
0g'
0p'
1^'
b1 U'
0{*
0&+
1r*
b1 i*
1]$
1f$
0o$
0x$
0#%
0,%
05%
0>%
0G%
0P%
0Y%
0b%
0k%
0t%
0}%
0(&
01&
0:&
0C&
0L&
0U&
0^&
0g&
0p&
0y&
0$'
0-'
06'
0?'
0H'
0Q'
0T$
b110 ?$
b110 L$
0b'
0k'
0_'
b11111111111111111111111111111010 E$
b11111111111111111111111111111010 W'
1Z'
b110 5$
0v*
0!+
0s*
b11111111111111111111111111111010 e*
b11111111111111111111111111111010 k*
1n*
0N
0C
1V$
1_$
0h$
0q$
0z$
0%%
0.%
07%
0@%
0I%
0R%
0[%
0d%
0m%
0v%
0!&
0*&
03&
0<&
0E&
0N&
0W&
0`&
0i&
0r&
0{&
0&'
0/'
08'
0A'
0J'
0N$
0a'
0j'
1s'
1|'
1'(
10(
19(
1B(
1K(
1T(
1](
1f(
1o(
1x(
1#)
1,)
15)
1>)
1G)
1P)
1Y)
1b)
1k)
1t)
1})
1(*
11*
1:*
1C*
1L*
1U*
1Y'
0u*
0~*
1)+
12+
1;+
1D+
1M+
1V+
1_+
1h+
1q+
1z+
1%,
1.,
17,
1@,
1I,
1R,
1[,
1d,
1m,
1v,
1!-
1*-
13-
1<-
1E-
1N-
1W-
1`-
1i-
1m*
1Z$
1c$
0l$
0u$
0~$
0)%
02%
0;%
0D%
0M%
0V%
0_%
0h%
0q%
0z%
0%&
0.&
07&
0@&
0I&
0R&
0[&
0d&
0m&
0v&
0!'
0*'
03'
0<'
0E'
0N'
0R$
0e'
0n'
1w'
1"(
1+(
14(
1=(
1F(
1O(
1X(
1a(
1j(
1s(
1|(
1')
10)
19)
1B)
1K)
1T)
1])
1f)
1o)
1x)
1#*
1,*
15*
1>*
1G*
1P*
1Y*
1]'
b110 F$
b110 _*
0y*
0$+
1-+
16+
1?+
1H+
1Q+
1Z+
1c+
1l+
1u+
1~+
1),
12,
1;,
1D,
1M,
1V,
1_,
1h,
1q,
1z,
1%-
1.-
17-
1@-
1I-
1R-
1[-
1d-
1m-
1q*
b11111111111111111111111111111001 B$
b11111111111111111111111111111001 y-
b110 C$
b110 |-
b0 3$
1Y$
1b$
0k$
0t$
0}$
0(%
01%
0:%
0C%
0L%
0U%
0^%
0g%
0p%
0y%
0$&
0-&
06&
0?&
0H&
0Q&
0Z&
0c&
0l&
0u&
0~&
0)'
02'
0;'
0D'
0M'
0Q$
1d'
1m'
0v'
0!(
0*(
03(
0<(
0E(
0N(
0W(
0`(
0i(
0r(
0{(
0&)
0/)
08)
0A)
0J)
0S)
0\)
0e)
0n)
0w)
0"*
0+*
04*
0=*
0F*
0O*
0X*
0\'
1x*
1#+
0,+
05+
0>+
0G+
0P+
0Y+
0b+
0k+
0t+
0}+
0(,
01,
0:,
0C,
0L,
0U,
0^,
0g,
0p,
0y,
0$-
0--
06-
0?-
0H-
0Q-
0Z-
0c-
0l-
0p*
10$
01$
12$
b0 6$
b0 4$
b0 8$
b0 9$
b0 :$
b0 #.
b101 q
1M"
b110 )$
b110 +
b110 +$
b110 H$
b110 S'
b110 ^*
b110 a*
b110 g*
b110 r-
b110 u-
b110 x-
b110 {-
b110 /.
b0 ).
09
b101 n
b1 3.
0[
0K
0T
00
1Z
b100000 x
b100000 <"
1>
1R
1*
0V
03
b10 Q
b10 (
b10 /$
0W
04
0U
02
0S
0B
0Y
0=
b1 \
b0 <$
0;$
b0 -$
0,$
0P'
0K'
0O'
0G'
0B'
0F'
0>'
09'
0='
05'
00'
04'
0,'
0''
0+'
0#'
0|&
0"'
0x&
0s&
0w&
0o&
0j&
0n&
0f&
0a&
0e&
0]&
0X&
0\&
0T&
0O&
0S&
0K&
0F&
0J&
0B&
0=&
0A&
09&
04&
08&
00&
0+&
0/&
0'&
0"&
0&&
0|%
0w%
0{%
0s%
0n%
0r%
0j%
0e%
0i%
0a%
0\%
0`%
0X%
0S%
0W%
0O%
0J%
0N%
0F%
0A%
0E%
0=%
08%
0<%
04%
0/%
03%
0+%
0&%
0*%
0"%
0{$
0!%
0w$
0r$
0v$
0n$
0i$
0m$
0e$
0`$
0d$
0\$
0W$
0[$
b0 7$
0S$
b0 J$
0U$
0^$
0g$
0p$
0y$
0$%
0-%
06%
0?%
0H%
0Q%
0Z%
0c%
0l%
0u%
0~%
0)&
02&
0;&
0D&
0M&
0V&
0_&
0h&
0q&
0z&
0%'
0.'
07'
0@'
0I'
0M$
0`'
0i'
0r'
0{'
0&(
0/(
08(
0A(
0J(
0S(
0\(
0e(
0n(
0w(
0")
0+)
04)
0=)
0F)
0O)
0X)
0a)
0j)
0s)
0|)
0'*
00*
09*
0B*
0K*
0T*
0X'
0t*
0}*
0(+
01+
0:+
0C+
0L+
0U+
0^+
0g+
0p+
0y+
0$,
0-,
06,
0?,
0H,
0Q,
0Z,
0c,
0l,
0u,
0~,
0)-
02-
0;-
0D-
0M-
0V-
0_-
0h-
0l*
b0 @$
b0 s-
b11111111111111111111111111111111 A$
b11111111111111111111111111111111 v-
0X$
0a$
0j$
0s$
0|$
0'%
00%
09%
0B%
0K%
0T%
0]%
0f%
0o%
0x%
0#&
0,&
05&
0>&
0G&
0P&
0Y&
0b&
0k&
0t&
0}&
0('
01'
0:'
0C'
0L'
0P$
0c'
0l'
0u'
0~'
0)(
02(
0;(
0D(
0M(
0V(
0_(
0h(
0q(
0z(
0%)
0.)
07)
0@)
0I)
0R)
0[)
0d)
0m)
0v)
0!*
0**
03*
0<*
0E*
0N*
0W*
0['
0w*
0"+
0++
04+
0=+
0F+
0O+
0X+
0a+
0j+
0s+
0|+
0',
00,
09,
0B,
0K,
0T,
0],
0f,
0o,
0x,
0#-
0,-
05-
0>-
0G-
0P-
0Y-
0b-
0k-
0o*
b1010000000000000110 &.
b0 ?"
b0 ;
b0 r
b0 `#
b0 *$
b0 G$
b0 R'
b0 ]*
b0 `*
b0 f*
b0 q-
b0 t-
b0 w-
b0 z-
b0 %.
b0 y
b0 @#
b0 b#
11.
12.
1%
1D
#20000
01.
02.
0%
0D
#30000
b10 3.
b10 \
b110 N"
b110 <
b110 s
b110 $$
b110 '$
b110 +.
b110 6"
b110 [#
b110 }#
11.
12.
1%
1D
#40000
01.
02.
0%
0D
#50000
b11 3.
b11 \
11.
12.
1%
1D
#60000
01.
02.
0%
0D
#70000
b100 3.
b100 \
11.
12.
1%
1D
#80000
01.
02.
0%
0D
#90000
b101 3.
b101 \
11.
12.
1%
1D
#100000
01.
02.
0%
0D
#110000
b1 `
b111 ".
b1 F
b1 !.
b1 #.
b1 H
b1 '.
b1 ).
b1 8
b1 ^
14.
10.
b0 3.
1]
1L
b0 \
11.
12.
1%
1D
#120000
01.
02.
0%
0D
#130000
b1 3.
b1 \
11.
12.
1%
1D
#140000
01.
02.
0%
0D
#150000
b10 3.
b10 \
11.
12.
1%
1D
#160000
01.
02.
0%
0D
#170000
b11 3.
b11 \
11.
12.
1%
1D
#180000
01.
02.
0%
0D
#190000
b100 3.
b100 \
11.
12.
1%
1D
#200000
01.
02.
0%
0D
#210000
b101 3.
b101 \
11.
12.
1%
1D
#220000
01.
02.
0%
0D
#230000
04.
00.
b0 3.
0]
0L
b0 \
11.
12.
1%
1D
#240000
01.
02.
0%
0D
#250000
b1 3.
b1 \
11.
12.
1%
1D
#260000
01.
02.
0%
0D
#270000
b10 3.
b10 \
11.
12.
1%
1D
#280000
01.
02.
0%
0D
#290000
b11 3.
b11 \
11.
12.
1%
1D
#300000
01.
02.
0%
0D
#310000
b100 3.
b100 \
11.
12.
1%
1D
#320000
01.
02.
0%
0D
#330000
b101 3.
b101 \
11.
12.
1%
1D
#340000
01.
02.
0%
0D
#350000
b10 )
b10 >$
b10 }-
b10 *.
b10 -.
b10 /.
b10 @
b10 v
b10 ="
b10 @"
b10 C"
b10 F"
b10 I"
b10 L"
b10 O"
b10 R"
b10 U"
b10 X"
b10 ["
b10 ^"
b10 a"
b10 d"
b10 g"
b10 j"
b10 m"
b10 p"
b10 s"
b10 v"
b10 y"
b10 |"
b10 !#
b10 $#
b10 '#
b10 *#
b10 -#
b10 0#
b10 3#
b10 6#
b10 9#
b10 <#
b10000100001000000100000 ,
b10000100001000000100000 ,.
b10000100001000000100000 ..
0f$
b10 ?$
b10 L$
1q'
b11111111111111111111111111111110 E$
b11111111111111111111111111111110 W'
b10 5$
1'+
b11111111111111111111111111111110 e*
b11111111111111111111111111111110 k*
0_$
1j'
1~*
0c$
1n'
b10 F$
b10 _*
1$+
b11111111111111111111111111111101 B$
b11111111111111111111111111111101 y-
b10 C$
b10 |-
0b$
0m'
0#+
b10 &$
b10 J
b10 ($
b10 +
b10 +$
b10 H$
b10 S'
b10 ^*
b10 a*
b10 g*
b10 r-
b10 u-
b10 x-
b10 {-
0M"
1D"
b10 )$
b100000000000000010 h
b100000000000000010 $.
b100000000000000010 &.
b100000000000000010 E
b100000000000000010 (.
b100000000000000010 1
b10 g
b10 .
b10 %$
b0 j
b10 k
b10 ?
b10 l
b10 n
b10 I
b10 o
b10 q
b100 x
b100 <"
b10 A
b10 w
b10 ;"
b10 e
bx <
bx s
bx $$
bx '$
bx +.
b10 '
b10 u
b10 a#
b0 d
b10 f
b10 -
b10 O
b10 `
b100 ".
b10 F
b10 !.
b10 #.
b10 H
b10 '.
b10 ).
b10 8
b10 ^
b1 _
b111000000000100000000000000010 /
b111000000000100000000000000010 b
b111000000000100000000000000010 c
b1 6
b1 a
14.
10.
b0 3.
1]
1L
b0 \
11.
12.
1%
1D
#360000
01.
02.
0%
0D
#370000
b1 3.
b1 \
b10 )$
b10 E"
b10 <
b10 s
b10 $$
b10 '$
b10 +.
b10 '"
b10 L#
b10 n#
11.
12.
1%
1D
#380000
01.
02.
0%
0D
#390000
b10 3.
b10 \
11.
12.
1%
1D
#400000
01.
02.
0%
0D
#410000
b11 3.
b11 \
11.
12.
1%
1D
#420000
01.
02.
0%
0D
#430000
b100 3.
b100 \
11.
12.
1%
1D
#440000
01.
02.
0%
0D
#450000
b101 3.
b101 \
11.
12.
1%
1D
#460000
01.
02.
0%
0D
#470000
04.
00.
b0 3.
0]
0L
b0 \
11.
12.
1%
1D
#480000
01.
02.
0%
0D
#490000
b1 3.
b1 \
11.
12.
1%
1D
#500000
01.
02.
0%
0D
#510000
b10 3.
b10 \
11.
12.
1%
1D
#520000
01.
02.
0%
0D
#530000
b11 3.
b11 \
11.
12.
1%
1D
#540000
01.
02.
0%
0D
#550000
b100 3.
b100 \
11.
12.
1%
1D
#560000
01.
02.
0%
0D
#570000
b101 3.
b101 \
11.
12.
1%
1D
#580000
01.
02.
0%
0D
#590000
1#%
1b%
1z$
1[%
1`'
0'(
0f(
1t*
0;+
0z+
0Z$
1~$
1_%
1e'
0+(
0j(
1y*
0?+
0~+
b11111111111111111110111111011101 B$
b11111111111111111110111111011101 y-
b1000000100010 C$
b1000000100010 |-
0Y$
1}$
1^%
0d'
1*(
1i(
0x*
1>+
1}+
b1000000100000 &$
b1000000100000 J
b1000000100000 ($
b1000000100000 )$
b1000000100000 +
b1000000100000 +$
b1000000100000 H$
b1000000100000 S'
b1000000100000 ^*
b1000000100000 a*
b1000000100000 g*
b1000000100000 r-
b1000000100000 u-
b1000000100000 x-
b1000000100000 {-
0.$
0b*
b1 D$
b1 d*
0[*
0o-
1\*
0V*
0=$
1p-
0j-
0c*
0Z*
0n-
0R*
0f-
1S*
0M*
1g-
0a-
0Q*
0e-
0I*
0]-
1J*
0D*
1^-
0X-
0H*
0\-
0@*
0T-
1A*
0;*
1U-
0O-
0?*
0S-
07*
0K-
18*
02*
1L-
0F-
06*
0J-
0.*
0B-
1/*
0)*
1C-
0=-
0-*
0A-
0%*
09-
1&*
0~)
1:-
04-
0$*
08-
0z)
00-
1{)
0u)
11-
0+-
0y)
0G
0/-
0q)
0'-
1r)
0l)
1(-
0"-
0p)
0&-
0h)
0|,
1i)
0c)
1},
0w,
0g)
0{,
0_)
0s,
1`)
0Z)
1t,
0n,
0^)
0r,
0V)
0j,
1W)
0Q)
1k,
0e,
0U)
0i,
0M)
0a,
1N)
0H)
1b,
0\,
0L)
0`,
0D)
0X,
1E)
0?)
1Y,
0S,
0C)
0W,
0;)
0O,
1<)
06)
1P,
0J,
0:)
0N,
02)
0F,
13)
0-)
1G,
0A,
01)
0E,
0))
0=,
1*)
0$)
1>,
08,
0()
0<,
0~(
04,
1!)
0y(
15,
0/,
0}(
03,
0u(
0+,
1v(
0p(
1,,
0&,
0t(
0*,
0l(
0",
0m(
0g(
0#,
0{+
0k(
0!,
0c(
0w+
1d(
0^(
1x+
0r+
0b(
0v+
0Z(
0n+
1[(
0U(
1o+
0i+
0Y(
0m+
0Q(
0e+
1R(
0L(
1f+
0`+
0P(
0d+
0H(
0\+
1I(
0C(
1]+
0W+
0G(
0[+
0?(
0S+
1@(
0:(
1T+
0N+
0>(
0R+
06(
0J+
17(
01(
1K+
0E+
05(
0I+
0-(
0A+
1.(
0((
1B+
0<+
1,(
1@+
1$(
18+
0%(
1}'
09+
13+
1#(
17+
1y'
1/+
0z'
1t'
b1111111111111111111111111111111 ~-
00+
1*+
1x'
1.+
1p'
b1000000100010 )
b1000000100010 >$
b1000000100010 }-
b1000000100010 *.
b1000000100010 -.
b1000000100010 /.
b1000000100010 @
b1000000100010 v
b1000000100010 ="
b1000000100010 @"
b1000000100010 C"
b1000000100010 F"
b1000000100010 I"
b1000000100010 L"
b1000000100010 O"
b1000000100010 R"
b1000000100010 U"
b1000000100010 X"
b1000000100010 ["
b1000000100010 ^"
b1000000100010 a"
b1000000100010 d"
b1000000100010 g"
b1000000100010 j"
b1000000100010 m"
b1000000100010 p"
b1000000100010 s"
b1000000100010 v"
b1000000100010 y"
b1000000100010 |"
b1000000100010 !#
b1000000100010 $#
b1000000100010 '#
b1000000100010 *#
b1000000100010 -#
b1000000100010 0#
b1000000100010 3#
b1000000100010 6#
b1000000100010 9#
b1000000100010 <#
bx ,
bx ,.
bx ..
1&+
0q'
1k'
0'+
1!+
0f$
1o'
1%+
0d$
1g'
b11111 U'
b1000000100010 5$
1{*
b11111 i*
1]$
b1000000100010 ?$
b1000000100010 L$
0\$
b0 J$
1h'
b11111111111111111110111111100010 E$
b11111111111111111110111111100010 W'
0b'
1|*
b11111111111111111110111111100010 e*
b11111111111111111110111111100010 k*
0v*
1V$
0U$
0a'
b1000000100010 F$
b1000000100010 _*
0u*
b0 @$
b0 s-
b11111111111111111111111111111111 A$
b11111111111111111111111111111111 v-
b10 n
1X$
1c'
1w*
b10000100001000000100000 h
b10000100001000000100000 $.
b10000100001000000100000 &.
b10000100001000000100000 E
b10000100001000000100000 (.
b10000100001000000100000 1
b1000000100000 g
b1000000100000 .
b1000000100000 %$
b10 j
b10 :
b10 m
b10 k
b10 e
b10 d
b10 ;
b10 r
b10 `#
b10 *$
b10 G$
b10 R'
b10 ]*
b10 `*
b10 f*
b10 q-
b10 t-
b10 w-
b10 z-
b10 %.
b10 &
b10 t
b10 ?#
b100000 f
b100000 -
b100000 O
b0 i
b0 5
b0 P
b11 `
b1000000100011 ".
b11 F
b11 !.
b11 #.
b11 H
b11 '.
b11 ).
b11 8
b11 ^
b10 _
b10000100001000000100000 /
b10000100001000000100000 b
b10000100001000000100000 c
b10 6
b10 a
14.
10.
b0 3.
1]
1L
b0 \
11.
12.
1%
1D
#600000
01.
02.
0%
0D
#610000
1,(
1@+
1$(
18+
0%(
1}'
09+
13+
b1111111111111111111111111111110 ~-
1#(
17+
1y'
1/+
0z'
1t'
00+
1*+
1x'
1.+
1p'
1&+
1f$
0q'
1k'
0'+
1!+
1d$
1o'
1%+
0]$
1\$
0h'
1b'
1g'
0|*
1v*
1{*
0V$
1U$
1a'
0`'
1u*
0t*
1Z$
0e'
0y*
b10000001000100 3$
1Y$
1d'
1x*
11$
b1000000100010 +
b1000000100010 +$
b1000000100010 H$
b1000000100010 S'
b1000000100010 ^*
b1000000100010 a*
b1000000100010 g*
b1000000100010 r-
b1000000100010 u-
b1000000100010 x-
b1000000100010 {-
b10 n
b1 3.
0R
0*
b0 Q
b0 (
b0 /$
1Y
1=
b1 \
1.$
1b*
b0 D$
b0 d*
1[*
1o-
0\*
1V*
0=$
0p-
1j-
0c*
1Z*
1n-
1R*
1f-
0S*
1M*
0g-
1a-
1Q*
1e-
1I*
1]-
0J*
1D*
0^-
1X-
1H*
1\-
1@*
1T-
0A*
1;*
0U-
1O-
1?*
1S-
17*
1K-
08*
12*
0L-
1F-
16*
1J-
1.*
1B-
0/*
1)*
0C-
1=-
1-*
1A-
1%*
19-
0&*
1~)
0:-
14-
1$*
18-
1z)
10-
0{)
1u)
01-
1+-
1y)
1/-
1q)
1'-
0r)
1l)
0(-
1"-
1p)
1&-
1h)
1|,
0i)
1c)
0},
1w,
1g)
1{,
1_)
1s,
0`)
1Z)
0t,
1n,
1^)
1r,
1V)
1j,
0W)
1Q)
0k,
1e,
1U)
1i,
1M)
1a,
0N)
1H)
0b,
1\,
1L)
1`,
1D)
1X,
0E)
1?)
0Y,
1S,
1C)
1W,
1;)
1O,
0<)
16)
0P,
1J,
1:)
1N,
12)
1F,
03)
1-)
0G,
1A,
11)
1E,
1))
1=,
0*)
1$)
0>,
18,
1()
1<,
1~(
14,
0!)
1y(
05,
1/,
1}(
13,
1u(
1+,
0v(
1p(
0,,
1&,
1t(
1*,
1l(
1",
1g(
1{+
1k(
1!,
1c(
1w+
0d(
1^(
0x+
1r+
1b(
1v+
1Z(
1n+
0[(
1U(
0o+
1i+
1Y(
1m+
1Q(
1e+
0R(
1L(
0f+
1`+
1P(
1d+
1H(
1\+
0I(
1C(
0]+
1W+
1G(
1[+
1?(
1S+
0@(
1:(
0T+
1N+
1>(
1R+
16(
b10000001000100 )
b10000001000100 >$
b10000001000100 }-
b10000001000100 *.
b10000001000100 -.
b10000001000100 /.
b10000001000100 @
b10000001000100 v
b10000001000100 ="
b10000001000100 @"
b10000001000100 C"
b10000001000100 F"
b10000001000100 I"
b10000001000100 L"
b10000001000100 O"
b10000001000100 R"
b10000001000100 U"
b10000001000100 X"
b10000001000100 ["
b10000001000100 ^"
b10000001000100 a"
b10000001000100 d"
b10000001000100 g"
b10000001000100 j"
b10000001000100 m"
b10000001000100 p"
b10000001000100 s"
b10000001000100 v"
b10000001000100 y"
b10000001000100 |"
b10000001000100 !#
b10000001000100 $#
b10000001000100 '#
b10000001000100 *#
b10000001000100 -#
b10000001000100 0#
b10000001000100 3#
b10000001000100 6#
b10000001000100 9#
b10000001000100 <#
bx ,
bx ,.
bx ..
1J+
07(
11(
0K+
1E+
1,%
1k%
15(
1I+
1*%
1i%
1-(
b11111111111111111111111111111111 U'
b0 5$
1A+
b11111111111111111111111111111111 i*
0#%
1"%
0b%
b10000001000100 ?$
b10000001000100 L$
1a%
b1000000100010 J$
0.(
1((
0m(
b0 E$
b0 W'
0B+
1<+
0#,
b0 e*
b0 k*
0z$
1y$
0[%
1Z%
1'(
1f(
b0 F$
b0 _*
1;+
1z+
b1000000100010 @$
b1000000100010 s-
b11111111111111111110111111011101 A$
b11111111111111111110111111011101 v-
1|$
1]%
1)(
1h(
1=+
1|+
b10000100001000000100000 &.
b1000000100010 )$
b1000000100010 E"
b1000000100010 ;
b1000000100010 r
b1000000100010 `#
b1000000100010 *$
b1000000100010 G$
b1000000100010 R'
b1000000100010 ]*
b1000000100010 `*
b1000000100010 f*
b1000000100010 q-
b1000000100010 t-
b1000000100010 w-
b1000000100010 z-
b1000000100010 %.
b1000000100010 <
b1000000100010 s
b1000000100010 $$
b1000000100010 '$
b1000000100010 +.
b1000000100010 '"
b1000000100010 L#
b1000000100010 n#
11.
12.
1%
1D
#620000
01.
02.
0%
0D
#630000
b10 3.
b10 \
b1111111111111111111111111111100 ~-
b100000010001000 )
b100000010001000 >$
b100000010001000 }-
b100000010001000 *.
b100000010001000 -.
b100000010001000 /.
b100000010001000 @
b100000010001000 v
b100000010001000 ="
b100000010001000 @"
b100000010001000 C"
b100000010001000 F"
b100000010001000 I"
b100000010001000 L"
b100000010001000 O"
b100000010001000 R"
b100000010001000 U"
b100000010001000 X"
b100000010001000 ["
b100000010001000 ^"
b100000010001000 a"
b100000010001000 d"
b100000010001000 g"
b100000010001000 j"
b100000010001000 m"
b100000010001000 p"
b100000010001000 s"
b100000010001000 v"
b100000010001000 y"
b100000010001000 |"
b100000010001000 !#
b100000010001000 $#
b100000010001000 '#
b100000010001000 *#
b100000010001000 -#
b100000010001000 0#
b100000010001000 3#
b100000010001000 6#
b100000010001000 9#
b100000010001000 <#
b100000010001000 3$
0f$
1o$
0,%
15%
0k%
1t%
b100000010001000 ?$
b100000010001000 L$
0d$
1m$
0*%
13%
0i%
1r%
0\$
1e$
0"%
1+%
0a%
1j%
b10000001000100 J$
0U$
1^$
0y$
1$%
0Z%
1c%
0Z$
1c$
0~$
1)%
0_%
1h%
1e'
0n'
1+(
04(
1j(
0s(
1y*
0$+
1?+
0H+
1~+
0),
b10000001000100 @$
b10000001000100 s-
b11111111111111111101111110111011 A$
b11111111111111111101111110111011 v-
b11111111111111111101111110111011 B$
b11111111111111111101111110111011 y-
b10000001000100 C$
b10000001000100 |-
0X$
1a$
0|$
1'%
0]%
1f%
0c'
1l'
0)(
12(
0h(
1q(
0w*
1"+
0=+
1F+
0|+
1',
b10000100001000000100000 &.
0Y$
1b$
0}$
1(%
0^%
1g%
0d'
1m'
0*(
13(
0i(
1r(
0x*
1#+
0>+
1G+
0}+
1(,
b10000001000100 E"
b10000001000100 ;
b10000001000100 r
b10000001000100 `#
b10000001000100 *$
b10000001000100 G$
b10000001000100 R'
b10000001000100 ]*
b10000001000100 `*
b10000001000100 f*
b10000001000100 q-
b10000001000100 t-
b10000001000100 w-
b10000001000100 z-
b10000001000100 %.
b10000001000100 <
b10000001000100 s
b10000001000100 $$
b10000001000100 '$
b10000001000100 +.
b10000001000100 )$
b10000001000100 +
b10000001000100 +$
b10000001000100 H$
b10000001000100 S'
b10000001000100 ^*
b10000001000100 a*
b10000001000100 g*
b10000001000100 r-
b10000001000100 u-
b10000001000100 x-
b10000001000100 {-
b10000001000100 '"
b10000001000100 L#
b10000001000100 n#
11.
12.
1%
1D
#640000
01.
02.
0%
0D
#650000
b11 3.
b11 \
b1111111111111111111111111111000 ~-
b1000000100010000 )
b1000000100010000 >$
b1000000100010000 }-
b1000000100010000 *.
b1000000100010000 -.
b1000000100010000 /.
b1000000100010000 @
b1000000100010000 v
b1000000100010000 ="
b1000000100010000 @"
b1000000100010000 C"
b1000000100010000 F"
b1000000100010000 I"
b1000000100010000 L"
b1000000100010000 O"
b1000000100010000 R"
b1000000100010000 U"
b1000000100010000 X"
b1000000100010000 ["
b1000000100010000 ^"
b1000000100010000 a"
b1000000100010000 d"
b1000000100010000 g"
b1000000100010000 j"
b1000000100010000 m"
b1000000100010000 p"
b1000000100010000 s"
b1000000100010000 v"
b1000000100010000 y"
b1000000100010000 |"
b1000000100010000 !#
b1000000100010000 $#
b1000000100010000 '#
b1000000100010000 *#
b1000000100010000 -#
b1000000100010000 0#
b1000000100010000 3#
b1000000100010000 6#
b1000000100010000 9#
b1000000100010000 <#
b1000000100010000 3$
0o$
1x$
05%
1>%
0t%
1}%
b1000000100010000 ?$
b1000000100010000 L$
0m$
1v$
03%
1<%
0r%
1{%
0e$
1n$
0+%
14%
0j%
1s%
b100000010001000 J$
0^$
1g$
0$%
1-%
0c%
1l%
0c$
1l$
0)%
12%
0h%
1q%
1n'
0w'
14(
0=(
1s(
0|(
1$+
0-+
1H+
0Q+
1),
02,
b100000010001000 @$
b100000010001000 s-
b11111111111111111011111101110111 A$
b11111111111111111011111101110111 v-
b11111111111111111011111101110111 B$
b11111111111111111011111101110111 y-
b100000010001000 C$
b100000010001000 |-
0a$
1j$
0'%
10%
0f%
1o%
0l'
1u'
02(
1;(
0q(
1z(
0"+
1++
0F+
1O+
0',
10,
b10000100001000000100000 &.
0b$
1k$
0(%
11%
0g%
1p%
0m'
1v'
03(
1<(
0r(
1{(
0#+
1,+
0G+
1P+
0(,
11,
b100000010001000 E"
b100000010001000 ;
b100000010001000 r
b100000010001000 `#
b100000010001000 *$
b100000010001000 G$
b100000010001000 R'
b100000010001000 ]*
b100000010001000 `*
b100000010001000 f*
b100000010001000 q-
b100000010001000 t-
b100000010001000 w-
b100000010001000 z-
b100000010001000 %.
b100000010001000 <
b100000010001000 s
b100000010001000 $$
b100000010001000 '$
b100000010001000 +.
b100000010001000 )$
b100000010001000 +
b100000010001000 +$
b100000010001000 H$
b100000010001000 S'
b100000010001000 ^*
b100000010001000 a*
b100000010001000 g*
b100000010001000 r-
b100000010001000 u-
b100000010001000 x-
b100000010001000 {-
b100000010001000 '"
b100000010001000 L#
b100000010001000 n#
11.
12.
1%
1D
#660000
01.
02.
0%
0D
#670000
b100 3.
b100 \
b1111111111111111111111111110000 ~-
b10000001000100000 )
b10000001000100000 >$
b10000001000100000 }-
b10000001000100000 *.
b10000001000100000 -.
b10000001000100000 /.
b10000001000100000 @
b10000001000100000 v
b10000001000100000 ="
b10000001000100000 @"
b10000001000100000 C"
b10000001000100000 F"
b10000001000100000 I"
b10000001000100000 L"
b10000001000100000 O"
b10000001000100000 R"
b10000001000100000 U"
b10000001000100000 X"
b10000001000100000 ["
b10000001000100000 ^"
b10000001000100000 a"
b10000001000100000 d"
b10000001000100000 g"
b10000001000100000 j"
b10000001000100000 m"
b10000001000100000 p"
b10000001000100000 s"
b10000001000100000 v"
b10000001000100000 y"
b10000001000100000 |"
b10000001000100000 !#
b10000001000100000 $#
b10000001000100000 '#
b10000001000100000 *#
b10000001000100000 -#
b10000001000100000 0#
b10000001000100000 3#
b10000001000100000 6#
b10000001000100000 9#
b10000001000100000 <#
b10000001000100000 3$
0x$
1#%
0>%
1G%
0}%
1(&
b10000001000100000 ?$
b10000001000100000 L$
0v$
1!%
0<%
1E%
0{%
1&&
0n$
1w$
04%
1=%
0s%
1|%
b1000000100010000 J$
0g$
1p$
0-%
16%
0l%
1u%
0l$
1u$
02%
1;%
0q%
1z%
1w'
0"(
1=(
0F(
1|(
0')
1-+
06+
1Q+
0Z+
12,
0;,
b1000000100010000 @$
b1000000100010000 s-
b11111111111111110111111011101111 A$
b11111111111111110111111011101111 v-
b11111111111111110111111011101111 B$
b11111111111111110111111011101111 y-
b1000000100010000 C$
b1000000100010000 |-
0j$
1s$
00%
19%
0o%
1x%
0u'
1~'
0;(
1D(
0z(
1%)
0++
14+
0O+
1X+
00,
19,
b10000100001000000100000 &.
0k$
1t$
01%
1:%
0p%
1y%
0v'
1!(
0<(
1E(
0{(
1&)
0,+
15+
0P+
1Y+
01,
1:,
b1000000100010000 E"
b1000000100010000 ;
b1000000100010000 r
b1000000100010000 `#
b1000000100010000 *$
b1000000100010000 G$
b1000000100010000 R'
b1000000100010000 ]*
b1000000100010000 `*
b1000000100010000 f*
b1000000100010000 q-
b1000000100010000 t-
b1000000100010000 w-
b1000000100010000 z-
b1000000100010000 %.
b1000000100010000 <
b1000000100010000 s
b1000000100010000 $$
b1000000100010000 '$
b1000000100010000 +.
b1000000100010000 )$
b1000000100010000 +
b1000000100010000 +$
b1000000100010000 H$
b1000000100010000 S'
b1000000100010000 ^*
b1000000100010000 a*
b1000000100010000 g*
b1000000100010000 r-
b1000000100010000 u-
b1000000100010000 x-
b1000000100010000 {-
b1000000100010000 '"
b1000000100010000 L#
b1000000100010000 n#
11.
12.
1%
1D
#680000
01.
02.
0%
0D
#690000
b101 3.
b101 \
b1111111111111111111111111100000 ~-
b100000010001000000 )
b100000010001000000 >$
b100000010001000000 }-
b100000010001000000 *.
b100000010001000000 -.
b100000010001000000 /.
b100000010001000000 @
b100000010001000000 v
b100000010001000000 ="
b100000010001000000 @"
b100000010001000000 C"
b100000010001000000 F"
b100000010001000000 I"
b100000010001000000 L"
b100000010001000000 O"
b100000010001000000 R"
b100000010001000000 U"
b100000010001000000 X"
b100000010001000000 ["
b100000010001000000 ^"
b100000010001000000 a"
b100000010001000000 d"
b100000010001000000 g"
b100000010001000000 j"
b100000010001000000 m"
b100000010001000000 p"
b100000010001000000 s"
b100000010001000000 v"
b100000010001000000 y"
b100000010001000000 |"
b100000010001000000 !#
b100000010001000000 $#
b100000010001000000 '#
b100000010001000000 *#
b100000010001000000 -#
b100000010001000000 0#
b100000010001000000 3#
b100000010001000000 6#
b100000010001000000 9#
b100000010001000000 <#
b100000010001000000 3$
0#%
1,%
0G%
1P%
0(&
11&
b100000010001000000 ?$
b100000010001000000 L$
0!%
1*%
0E%
1N%
0&&
1/&
0w$
1"%
0=%
1F%
0|%
1'&
b10000001000100000 J$
0p$
1y$
06%
1?%
0u%
1~%
0u$
1~$
0;%
1D%
0z%
1%&
1"(
0+(
1F(
0O(
1')
00)
16+
0?+
1Z+
0c+
1;,
0D,
b10000001000100000 @$
b10000001000100000 s-
b11111111111111101111110111011111 A$
b11111111111111101111110111011111 v-
b11111111111111101111110111011111 B$
b11111111111111101111110111011111 y-
b10000001000100000 C$
b10000001000100000 |-
0s$
1|$
09%
1B%
0x%
1#&
0~'
1)(
0D(
1M(
0%)
1.)
04+
1=+
0X+
1a+
09,
1B,
b10000100001000000100000 &.
0t$
1}$
0:%
1C%
0y%
1$&
0!(
1*(
0E(
1N(
0&)
1/)
05+
1>+
0Y+
1b+
0:,
1C,
b10000001000100000 E"
b10000001000100000 ;
b10000001000100000 r
b10000001000100000 `#
b10000001000100000 *$
b10000001000100000 G$
b10000001000100000 R'
b10000001000100000 ]*
b10000001000100000 `*
b10000001000100000 f*
b10000001000100000 q-
b10000001000100000 t-
b10000001000100000 w-
b10000001000100000 z-
b10000001000100000 %.
b10000001000100000 <
b10000001000100000 s
b10000001000100000 $$
b10000001000100000 '$
b10000001000100000 +.
b10000001000100000 )$
b10000001000100000 +
b10000001000100000 +$
b10000001000100000 H$
b10000001000100000 S'
b10000001000100000 ^*
b10000001000100000 a*
b10000001000100000 g*
b10000001000100000 r-
b10000001000100000 u-
b10000001000100000 x-
b10000001000100000 {-
b10000001000100000 '"
b10000001000100000 L#
b10000001000100000 n#
11.
12.
1%
1D
#700000
01.
02.
0%
0D
#710000
04.
00.
b0 3.
0]
0L
b0 \
b1111111111111111111111111000000 ~-
b1000000100010000000 )
b1000000100010000000 >$
b1000000100010000000 }-
b1000000100010000000 *.
b1000000100010000000 -.
b1000000100010000000 /.
b1000000100010000000 @
b1000000100010000000 v
b1000000100010000000 ="
b1000000100010000000 @"
b1000000100010000000 C"
b1000000100010000000 F"
b1000000100010000000 I"
b1000000100010000000 L"
b1000000100010000000 O"
b1000000100010000000 R"
b1000000100010000000 U"
b1000000100010000000 X"
b1000000100010000000 ["
b1000000100010000000 ^"
b1000000100010000000 a"
b1000000100010000000 d"
b1000000100010000000 g"
b1000000100010000000 j"
b1000000100010000000 m"
b1000000100010000000 p"
b1000000100010000000 s"
b1000000100010000000 v"
b1000000100010000000 y"
b1000000100010000000 |"
b1000000100010000000 !#
b1000000100010000000 $#
b1000000100010000000 '#
b1000000100010000000 *#
b1000000100010000000 -#
b1000000100010000000 0#
b1000000100010000000 3#
b1000000100010000000 6#
b1000000100010000000 9#
b1000000100010000000 <#
b1000000100010000000 3$
0,%
15%
0P%
1Y%
01&
1:&
b1000000100010000000 ?$
b1000000100010000000 L$
0*%
13%
0N%
1W%
0/&
18&
0"%
1+%
0F%
1O%
0'&
10&
b100000010001000000 J$
0y$
1$%
0?%
1H%
0~%
1)&
0~$
1)%
0D%
1M%
0%&
1.&
1+(
04(
1O(
0X(
10)
09)
1?+
0H+
1c+
0l+
1D,
0M,
b100000010001000000 @$
b100000010001000000 s-
b11111111111111011111101110111111 A$
b11111111111111011111101110111111 v-
b11111111111111011111101110111111 B$
b11111111111111011111101110111111 y-
b100000010001000000 C$
b100000010001000000 |-
0|$
1'%
0B%
1K%
0#&
1,&
0)(
12(
0M(
1V(
0.)
17)
0=+
1F+
0a+
1j+
0B,
1K,
b10000100001000000100000 &.
0}$
1(%
0C%
1L%
0$&
1-&
0*(
13(
0N(
1W(
0/)
18)
0>+
1G+
0b+
1k+
0C,
1L,
b100000010001000000 E"
b100000010001000000 ;
b100000010001000000 r
b100000010001000000 `#
b100000010001000000 *$
b100000010001000000 G$
b100000010001000000 R'
b100000010001000000 ]*
b100000010001000000 `*
b100000010001000000 f*
b100000010001000000 q-
b100000010001000000 t-
b100000010001000000 w-
b100000010001000000 z-
b100000010001000000 %.
b100000010001000000 <
b100000010001000000 s
b100000010001000000 $$
b100000010001000000 '$
b100000010001000000 +.
b100000010001000000 )$
b100000010001000000 +
b100000010001000000 +$
b100000010001000000 H$
b100000010001000000 S'
b100000010001000000 ^*
b100000010001000000 a*
b100000010001000000 g*
b100000010001000000 r-
b100000010001000000 u-
b100000010001000000 x-
b100000010001000000 {-
b100000010001000000 '"
b100000010001000000 L#
b100000010001000000 n#
11.
12.
1%
1D
#720000
01.
02.
0%
0D
#730000
b1 3.
b1 \
b1111111111111111111111110000000 ~-
b10000001000100000000 )
b10000001000100000000 >$
b10000001000100000000 }-
b10000001000100000000 *.
b10000001000100000000 -.
b10000001000100000000 /.
b10000001000100000000 @
b10000001000100000000 v
b10000001000100000000 ="
b10000001000100000000 @"
b10000001000100000000 C"
b10000001000100000000 F"
b10000001000100000000 I"
b10000001000100000000 L"
b10000001000100000000 O"
b10000001000100000000 R"
b10000001000100000000 U"
b10000001000100000000 X"
b10000001000100000000 ["
b10000001000100000000 ^"
b10000001000100000000 a"
b10000001000100000000 d"
b10000001000100000000 g"
b10000001000100000000 j"
b10000001000100000000 m"
b10000001000100000000 p"
b10000001000100000000 s"
b10000001000100000000 v"
b10000001000100000000 y"
b10000001000100000000 |"
b10000001000100000000 !#
b10000001000100000000 $#
b10000001000100000000 '#
b10000001000100000000 *#
b10000001000100000000 -#
b10000001000100000000 0#
b10000001000100000000 3#
b10000001000100000000 6#
b10000001000100000000 9#
b10000001000100000000 <#
b10000001000100000000 3$
05%
1>%
0Y%
1b%
0:&
1C&
b10000001000100000000 ?$
b10000001000100000000 L$
03%
1<%
0W%
1`%
08&
1A&
0+%
14%
0O%
1X%
00&
19&
b1000000100010000000 J$
0$%
1-%
0H%
1Q%
0)&
12&
0)%
12%
0M%
1V%
0.&
17&
14(
0=(
1X(
0a(
19)
0B)
1H+
0Q+
1l+
0u+
1M,
0V,
b1000000100010000000 @$
b1000000100010000000 s-
b11111111111110111111011101111111 A$
b11111111111110111111011101111111 v-
b11111111111110111111011101111111 B$
b11111111111110111111011101111111 y-
b1000000100010000000 C$
b1000000100010000000 |-
0'%
10%
0K%
1T%
0,&
15&
02(
1;(
0V(
1_(
07)
1@)
0F+
1O+
0j+
1s+
0K,
1T,
b10000100001000000100000 &.
0(%
11%
0L%
1U%
0-&
16&
03(
1<(
0W(
1`(
08)
1A)
0G+
1P+
0k+
1t+
0L,
1U,
b1000000100010000000 E"
b1000000100010000000 ;
b1000000100010000000 r
b1000000100010000000 `#
b1000000100010000000 *$
b1000000100010000000 G$
b1000000100010000000 R'
b1000000100010000000 ]*
b1000000100010000000 `*
b1000000100010000000 f*
b1000000100010000000 q-
b1000000100010000000 t-
b1000000100010000000 w-
b1000000100010000000 z-
b1000000100010000000 %.
b1000000100010000000 <
b1000000100010000000 s
b1000000100010000000 $$
b1000000100010000000 '$
b1000000100010000000 +.
b1000000100010000000 )$
b1000000100010000000 +
b1000000100010000000 +$
b1000000100010000000 H$
b1000000100010000000 S'
b1000000100010000000 ^*
b1000000100010000000 a*
b1000000100010000000 g*
b1000000100010000000 r-
b1000000100010000000 u-
b1000000100010000000 x-
b1000000100010000000 {-
b1000000100010000000 '"
b1000000100010000000 L#
b1000000100010000000 n#
11.
12.
1%
1D
#740000
01.
02.
0%
0D
#750000
b10 3.
b10 \
b1111111111111111111111100000000 ~-
b100000010001000000000 )
b100000010001000000000 >$
b100000010001000000000 }-
b100000010001000000000 *.
b100000010001000000000 -.
b100000010001000000000 /.
b100000010001000000000 @
b100000010001000000000 v
b100000010001000000000 ="
b100000010001000000000 @"
b100000010001000000000 C"
b100000010001000000000 F"
b100000010001000000000 I"
b100000010001000000000 L"
b100000010001000000000 O"
b100000010001000000000 R"
b100000010001000000000 U"
b100000010001000000000 X"
b100000010001000000000 ["
b100000010001000000000 ^"
b100000010001000000000 a"
b100000010001000000000 d"
b100000010001000000000 g"
b100000010001000000000 j"
b100000010001000000000 m"
b100000010001000000000 p"
b100000010001000000000 s"
b100000010001000000000 v"
b100000010001000000000 y"
b100000010001000000000 |"
b100000010001000000000 !#
b100000010001000000000 $#
b100000010001000000000 '#
b100000010001000000000 *#
b100000010001000000000 -#
b100000010001000000000 0#
b100000010001000000000 3#
b100000010001000000000 6#
b100000010001000000000 9#
b100000010001000000000 <#
b100000010001000000000 3$
0>%
1G%
0b%
1k%
0C&
1L&
b100000010001000000000 ?$
b100000010001000000000 L$
0<%
1E%
0`%
1i%
0A&
1J&
04%
1=%
0X%
1a%
09&
1B&
b10000001000100000000 J$
0-%
16%
0Q%
1Z%
02&
1;&
02%
1;%
0V%
1_%
07&
1@&
1=(
0F(
1a(
0j(
1B)
0K)
1Q+
0Z+
1u+
0~+
1V,
0_,
b10000001000100000000 @$
b10000001000100000000 s-
b11111111111101111110111011111111 A$
b11111111111101111110111011111111 v-
b11111111111101111110111011111111 B$
b11111111111101111110111011111111 y-
b10000001000100000000 C$
b10000001000100000000 |-
00%
19%
0T%
1]%
05&
1>&
0;(
1D(
0_(
1h(
0@)
1I)
0O+
1X+
0s+
1|+
0T,
1],
b10000100001000000100000 &.
01%
1:%
0U%
1^%
06&
1?&
0<(
1E(
0`(
1i(
0A)
1J)
0P+
1Y+
0t+
1}+
0U,
1^,
b10000001000100000000 E"
b10000001000100000000 ;
b10000001000100000000 r
b10000001000100000000 `#
b10000001000100000000 *$
b10000001000100000000 G$
b10000001000100000000 R'
b10000001000100000000 ]*
b10000001000100000000 `*
b10000001000100000000 f*
b10000001000100000000 q-
b10000001000100000000 t-
b10000001000100000000 w-
b10000001000100000000 z-
b10000001000100000000 %.
b10000001000100000000 <
b10000001000100000000 s
b10000001000100000000 $$
b10000001000100000000 '$
b10000001000100000000 +.
b10000001000100000000 )$
b10000001000100000000 +
b10000001000100000000 +$
b10000001000100000000 H$
b10000001000100000000 S'
b10000001000100000000 ^*
b10000001000100000000 a*
b10000001000100000000 g*
b10000001000100000000 r-
b10000001000100000000 u-
b10000001000100000000 x-
b10000001000100000000 {-
b10000001000100000000 '"
b10000001000100000000 L#
b10000001000100000000 n#
11.
12.
1%
1D
#760000
01.
02.
0%
0D
#770000
b11 3.
b11 \
b1111111111111111111111000000000 ~-
b1000000100010000000000 )
b1000000100010000000000 >$
b1000000100010000000000 }-
b1000000100010000000000 *.
b1000000100010000000000 -.
b1000000100010000000000 /.
b1000000100010000000000 @
b1000000100010000000000 v
b1000000100010000000000 ="
b1000000100010000000000 @"
b1000000100010000000000 C"
b1000000100010000000000 F"
b1000000100010000000000 I"
b1000000100010000000000 L"
b1000000100010000000000 O"
b1000000100010000000000 R"
b1000000100010000000000 U"
b1000000100010000000000 X"
b1000000100010000000000 ["
b1000000100010000000000 ^"
b1000000100010000000000 a"
b1000000100010000000000 d"
b1000000100010000000000 g"
b1000000100010000000000 j"
b1000000100010000000000 m"
b1000000100010000000000 p"
b1000000100010000000000 s"
b1000000100010000000000 v"
b1000000100010000000000 y"
b1000000100010000000000 |"
b1000000100010000000000 !#
b1000000100010000000000 $#
b1000000100010000000000 '#
b1000000100010000000000 *#
b1000000100010000000000 -#
b1000000100010000000000 0#
b1000000100010000000000 3#
b1000000100010000000000 6#
b1000000100010000000000 9#
b1000000100010000000000 <#
b1000000100010000000000 3$
0G%
1P%
0k%
1t%
0L&
1U&
b1000000100010000000000 ?$
b1000000100010000000000 L$
0E%
1N%
0i%
1r%
0J&
1S&
0=%
1F%
0a%
1j%
0B&
1K&
b100000010001000000000 J$
06%
1?%
0Z%
1c%
0;&
1D&
0;%
1D%
0_%
1h%
0@&
1I&
1F(
0O(
1j(
0s(
1K)
0T)
1Z+
0c+
1~+
0),
1_,
0h,
b100000010001000000000 @$
b100000010001000000000 s-
b11111111111011111101110111111111 A$
b11111111111011111101110111111111 v-
b11111111111011111101110111111111 B$
b11111111111011111101110111111111 y-
b100000010001000000000 C$
b100000010001000000000 |-
09%
1B%
0]%
1f%
0>&
1G&
0D(
1M(
0h(
1q(
0I)
1R)
0X+
1a+
0|+
1',
0],
1f,
b10000100001000000100000 &.
0:%
1C%
0^%
1g%
0?&
1H&
0E(
1N(
0i(
1r(
0J)
1S)
0Y+
1b+
0}+
1(,
0^,
1g,
b100000010001000000000 E"
b100000010001000000000 ;
b100000010001000000000 r
b100000010001000000000 `#
b100000010001000000000 *$
b100000010001000000000 G$
b100000010001000000000 R'
b100000010001000000000 ]*
b100000010001000000000 `*
b100000010001000000000 f*
b100000010001000000000 q-
b100000010001000000000 t-
b100000010001000000000 w-
b100000010001000000000 z-
b100000010001000000000 %.
b100000010001000000000 <
b100000010001000000000 s
b100000010001000000000 $$
b100000010001000000000 '$
b100000010001000000000 +.
b100000010001000000000 )$
b100000010001000000000 +
b100000010001000000000 +$
b100000010001000000000 H$
b100000010001000000000 S'
b100000010001000000000 ^*
b100000010001000000000 a*
b100000010001000000000 g*
b100000010001000000000 r-
b100000010001000000000 u-
b100000010001000000000 x-
b100000010001000000000 {-
b100000010001000000000 '"
b100000010001000000000 L#
b100000010001000000000 n#
11.
12.
1%
1D
#780000
01.
02.
0%
0D
#790000
b100 3.
b100 \
b1111111111111111111110000000000 ~-
b10000001000100000000000 )
b10000001000100000000000 >$
b10000001000100000000000 }-
b10000001000100000000000 *.
b10000001000100000000000 -.
b10000001000100000000000 /.
b10000001000100000000000 @
b10000001000100000000000 v
b10000001000100000000000 ="
b10000001000100000000000 @"
b10000001000100000000000 C"
b10000001000100000000000 F"
b10000001000100000000000 I"
b10000001000100000000000 L"
b10000001000100000000000 O"
b10000001000100000000000 R"
b10000001000100000000000 U"
b10000001000100000000000 X"
b10000001000100000000000 ["
b10000001000100000000000 ^"
b10000001000100000000000 a"
b10000001000100000000000 d"
b10000001000100000000000 g"
b10000001000100000000000 j"
b10000001000100000000000 m"
b10000001000100000000000 p"
b10000001000100000000000 s"
b10000001000100000000000 v"
b10000001000100000000000 y"
b10000001000100000000000 |"
b10000001000100000000000 !#
b10000001000100000000000 $#
b10000001000100000000000 '#
b10000001000100000000000 *#
b10000001000100000000000 -#
b10000001000100000000000 0#
b10000001000100000000000 3#
b10000001000100000000000 6#
b10000001000100000000000 9#
b10000001000100000000000 <#
b10000001000100000000000 3$
0P%
1Y%
0t%
1}%
0U&
1^&
b10000001000100000000000 ?$
b10000001000100000000000 L$
0N%
1W%
0r%
1{%
0S&
1\&
0F%
1O%
0j%
1s%
0K&
1T&
b1000000100010000000000 J$
0?%
1H%
0c%
1l%
0D&
1M&
0D%
1M%
0h%
1q%
0I&
1R&
1O(
0X(
1s(
0|(
1T)
0])
1c+
0l+
1),
02,
1h,
0q,
b1000000100010000000000 @$
b1000000100010000000000 s-
b11111111110111111011101111111111 A$
b11111111110111111011101111111111 v-
b11111111110111111011101111111111 B$
b11111111110111111011101111111111 y-
b1000000100010000000000 C$
b1000000100010000000000 |-
0B%
1K%
0f%
1o%
0G&
1P&
0M(
1V(
0q(
1z(
0R)
1[)
0a+
1j+
0',
10,
0f,
1o,
b10000100001000000100000 &.
0C%
1L%
0g%
1p%
0H&
1Q&
0N(
1W(
0r(
1{(
0S)
1\)
0b+
1k+
0(,
11,
0g,
1p,
b1000000100010000000000 E"
b1000000100010000000000 ;
b1000000100010000000000 r
b1000000100010000000000 `#
b1000000100010000000000 *$
b1000000100010000000000 G$
b1000000100010000000000 R'
b1000000100010000000000 ]*
b1000000100010000000000 `*
b1000000100010000000000 f*
b1000000100010000000000 q-
b1000000100010000000000 t-
b1000000100010000000000 w-
b1000000100010000000000 z-
b1000000100010000000000 %.
b1000000100010000000000 <
b1000000100010000000000 s
b1000000100010000000000 $$
b1000000100010000000000 '$
b1000000100010000000000 +.
b1000000100010000000000 )$
b1000000100010000000000 +
b1000000100010000000000 +$
b1000000100010000000000 H$
b1000000100010000000000 S'
b1000000100010000000000 ^*
b1000000100010000000000 a*
b1000000100010000000000 g*
b1000000100010000000000 r-
b1000000100010000000000 u-
b1000000100010000000000 x-
b1000000100010000000000 {-
b1000000100010000000000 '"
b1000000100010000000000 L#
b1000000100010000000000 n#
11.
12.
1%
1D
#800000
01.
02.
0%
0D
#810000
b101 3.
b101 \
b1111111111111111111100000000000 ~-
b100000010001000000000000 )
b100000010001000000000000 >$
b100000010001000000000000 }-
b100000010001000000000000 *.
b100000010001000000000000 -.
b100000010001000000000000 /.
b100000010001000000000000 @
b100000010001000000000000 v
b100000010001000000000000 ="
b100000010001000000000000 @"
b100000010001000000000000 C"
b100000010001000000000000 F"
b100000010001000000000000 I"
b100000010001000000000000 L"
b100000010001000000000000 O"
b100000010001000000000000 R"
b100000010001000000000000 U"
b100000010001000000000000 X"
b100000010001000000000000 ["
b100000010001000000000000 ^"
b100000010001000000000000 a"
b100000010001000000000000 d"
b100000010001000000000000 g"
b100000010001000000000000 j"
b100000010001000000000000 m"
b100000010001000000000000 p"
b100000010001000000000000 s"
b100000010001000000000000 v"
b100000010001000000000000 y"
b100000010001000000000000 |"
b100000010001000000000000 !#
b100000010001000000000000 $#
b100000010001000000000000 '#
b100000010001000000000000 *#
b100000010001000000000000 -#
b100000010001000000000000 0#
b100000010001000000000000 3#
b100000010001000000000000 6#
b100000010001000000000000 9#
b100000010001000000000000 <#
b100000010001000000000000 3$
0Y%
1b%
0}%
1(&
0^&
1g&
b100000010001000000000000 ?$
b100000010001000000000000 L$
0W%
1`%
0{%
1&&
0\&
1e&
0O%
1X%
0s%
1|%
0T&
1]&
b10000001000100000000000 J$
0H%
1Q%
0l%
1u%
0M&
1V&
0M%
1V%
0q%
1z%
0R&
1[&
1X(
0a(
1|(
0')
1])
0f)
1l+
0u+
12,
0;,
1q,
0z,
b10000001000100000000000 @$
b10000001000100000000000 s-
b11111111101111110111011111111111 A$
b11111111101111110111011111111111 v-
b11111111101111110111011111111111 B$
b11111111101111110111011111111111 y-
b10000001000100000000000 C$
b10000001000100000000000 |-
0K%
1T%
0o%
1x%
0P&
1Y&
0V(
1_(
0z(
1%)
0[)
1d)
0j+
1s+
00,
19,
0o,
1x,
b10000100001000000100000 &.
0L%
1U%
0p%
1y%
0Q&
1Z&
0W(
1`(
0{(
1&)
0\)
1e)
0k+
1t+
01,
1:,
0p,
1y,
b10000001000100000000000 E"
b10000001000100000000000 ;
b10000001000100000000000 r
b10000001000100000000000 `#
b10000001000100000000000 *$
b10000001000100000000000 G$
b10000001000100000000000 R'
b10000001000100000000000 ]*
b10000001000100000000000 `*
b10000001000100000000000 f*
b10000001000100000000000 q-
b10000001000100000000000 t-
b10000001000100000000000 w-
b10000001000100000000000 z-
b10000001000100000000000 %.
b10000001000100000000000 <
b10000001000100000000000 s
b10000001000100000000000 $$
b10000001000100000000000 '$
b10000001000100000000000 +.
b10000001000100000000000 )$
b10000001000100000000000 +
b10000001000100000000000 +$
b10000001000100000000000 H$
b10000001000100000000000 S'
b10000001000100000000000 ^*
b10000001000100000000000 a*
b10000001000100000000000 g*
b10000001000100000000000 r-
b10000001000100000000000 u-
b10000001000100000000000 x-
b10000001000100000000000 {-
b10000001000100000000000 '"
b10000001000100000000000 L#
b10000001000100000000000 n#
11.
12.
1%
1D
#820000
01.
02.
0%
0D
#830000
b10 &$
b10 J
b10 ($
0k(
0!,
0c(
0w+
1d(
0^(
1x+
0r+
0b(
0v+
0Z(
0n+
1[(
0U(
1o+
0i+
0Y(
0m+
0Q(
0e+
1R(
0L(
1f+
0`+
0P(
0d+
0H(
0\+
1I(
0C(
1]+
0W+
0G(
0[+
0?(
0S+
1@(
0:(
1T+
0N+
0>(
0R+
06(
0J+
17(
01(
1K+
0E+
05(
0I+
0-(
0A+
1.(
0((
1B+
0<+
0,(
0@+
0$(
08+
1%(
0}'
19+
03+
0#(
07+
0y'
0/+
1z'
0t'
10+
0*+
0o'
0x'
0%+
0.+
0g'
0p'
b11111111111111111111000000000001 U'
0{*
0&+
b11111111111111111111000000000001 i*
1]$
1f$
1h'
0b'
0q'
0k'
0m(
0g(
13)
0-)
1r)
b100000010000111111111010 E$
b100000010000111111111010 W'
0l)
1|*
0v*
0'+
0!+
0#,
0{+
1G,
0A,
1(-
b100000010000111111111010 e*
b100000010000111111111010 k*
0"-
1V$
1_$
1[%
1!&
1`&
0a'
0j'
0f(
1e(
0,)
1+)
0k)
1j)
0u*
0~*
0z+
1y+
0@,
1?,
0!-
1~,
1Z$
1c$
0e'
0n'
b100000010001000000000110 F$
b100000010001000000000110 _*
0y*
0$+
0D"
1>"
1Y$
1b$
1d'
1m'
1x*
1#+
b10001010000000000000010 h
b10001010000000000000010 $.
b10001010000000000000010 E
b10001010000000000000010 (.
b10001010000000000000010 1
b10 g
b10 .
b10 %$
b0 j
b0 :
b0 m
b0 n
b0 I
b0 o
b0 q
b1 x
b1 <"
b0 A
b0 w
b0 ;"
b101 k
b101 ?
b101 l
b101 e
b101 '
b101 u
b101 a#
b10 d
b10 f
b10 -
b10 O
b101 i
b101 5
b101 P
b100 `
b110 ".
b100 F
b100 !.
b100 #.
b100 H
b100 '.
b100 ).
b100 8
b100 ^
b11 _
b10100010001010000000000000010 /
b10100010001010000000000000010 b
b10100010001010000000000000010 c
b11 6
b11 a
14.
10.
b0 3.
1]
1L
b0 \
b1111111111111111111111111111111 ~-
b100000010001000000000110 )
b100000010001000000000110 >$
b100000010001000000000110 }-
b100000010001000000000110 *.
b100000010001000000000110 -.
b100000010001000000000110 /.
b100000010001000000000110 @
b100000010001000000000110 v
b100000010001000000000110 ="
b100000010001000000000110 @"
b100000010001000000000110 C"
b100000010001000000000110 F"
b100000010001000000000110 I"
b100000010001000000000110 L"
b100000010001000000000110 O"
b100000010001000000000110 R"
b100000010001000000000110 U"
b100000010001000000000110 X"
b100000010001000000000110 ["
b100000010001000000000110 ^"
b100000010001000000000110 a"
b100000010001000000000110 d"
b100000010001000000000110 g"
b100000010001000000000110 j"
b100000010001000000000110 m"
b100000010001000000000110 p"
b100000010001000000000110 s"
b100000010001000000000110 v"
b100000010001000000000110 y"
b100000010001000000000110 |"
b100000010001000000000110 !#
b100000010001000000000110 $#
b100000010001000000000110 '#
b100000010001000000000110 *#
b100000010001000000000110 -#
b100000010001000000000110 0#
b100000010001000000000110 3#
b100000010001000000000110 6#
b100000010001000000000110 9#
b100000010001000000000110 <#
b100000010001000000000110 3$
1b%
0k%
1(&
01&
1g&
0p&
b100000010001000000000110 ?$
b100000010001000000000110 L$
0`%
0i%
0&&
0/&
0e&
0n&
0X%
0a%
0|%
0'&
0]&
0f&
b0 J$
0Q%
0Z%
0u%
0~%
0V&
0_&
0V%
0_%
0z%
0%&
0[&
0d&
1a(
1j(
1')
10)
1f)
1o)
1u+
1~+
1;,
1D,
1z,
1%-
b0 @$
b0 s-
b11111111111111111111111111111111 A$
b11111111111111111111111111111111 v-
b11111111011111101110111111111001 B$
b11111111011111101110111111111001 y-
b100000010001000000000110 C$
b100000010001000000000110 |-
0T%
1]%
0x%
1#&
0Y&
1b&
0_(
1h(
0%)
1.)
0d)
1m)
0s+
1|+
09,
1B,
0x,
1#-
b10001010000000000000010 &.
0U%
0^%
0y%
0$&
0Z&
0c&
0`(
0i(
0&)
0/)
0e)
0n)
0t+
0}+
0:,
0C,
0y,
0$-
b100000010001000000000000 E"
b100000010001000000000000 ;
b100000010001000000000000 r
b100000010001000000000000 `#
b100000010001000000000000 *$
b100000010001000000000000 G$
b100000010001000000000000 R'
b100000010001000000000000 ]*
b100000010001000000000000 `*
b100000010001000000000000 f*
b100000010001000000000000 q-
b100000010001000000000000 t-
b100000010001000000000000 w-
b100000010001000000000000 z-
b100000010001000000000000 %.
b110 <
b110 s
b110 $$
b110 '$
b110 +.
b110 )$
b110 +
b110 +$
b110 H$
b110 S'
b110 ^*
b110 a*
b110 g*
b110 r-
b110 u-
b110 x-
b110 {-
b100000010001000000000000 '"
b100000010001000000000000 L#
b100000010001000000000000 n#
11.
12.
1%
1D
#840000
01.
02.
0%
0D
#850000
b100000010000111111111010 )
b100000010000111111111010 >$
b100000010000111111111010 }-
b100000010000111111111010 *.
b100000010000111111111010 -.
b100000010000111111111010 /.
b100000010000111111111010 @
b100000010000111111111010 v
b100000010000111111111010 ="
b100000010000111111111010 @"
b100000010000111111111010 C"
b100000010000111111111010 F"
b100000010000111111111010 I"
b100000010000111111111010 L"
b100000010000111111111010 O"
b100000010000111111111010 R"
b100000010000111111111010 U"
b100000010000111111111010 X"
b100000010000111111111010 ["
b100000010000111111111010 ^"
b100000010000111111111010 a"
b100000010000111111111010 d"
b100000010000111111111010 g"
b100000010000111111111010 j"
b100000010000111111111010 m"
b100000010000111111111010 p"
b100000010000111111111010 s"
b100000010000111111111010 v"
b100000010000111111111010 y"
b100000010000111111111010 |"
b100000010000111111111010 !#
b100000010000111111111010 $#
b100000010000111111111010 '#
b100000010000111111111010 *#
b100000010000111111111010 -#
b100000010000111111111010 0#
b100000010000111111111010 3#
b100000010000111111111010 6#
b100000010000111111111010 9#
b100000010000111111111010 <#
1C
b0 3$
b100000010000111111111010 4$
00$
b10 -$
0>"
b101 n
b101 I
b101 o
b101 q
b101 A
b101 w
b101 ;"
b1 3.
0Z
b0 x
b0 <"
0>
b1 Q
b1 (
b1 /$
1S
1B
0Y
0=
b1 \
11.
12.
1%
1D
#860000
01.
02.
0%
0D
#870000
b10 3.
b10 \
11.
12.
1%
1D
#880000
01.
02.
0%
0D
#890000
b11 3.
b11 \
11.
12.
1%
1D
#900000
01.
02.
0%
0D
#910000
b100 3.
b100 \
11.
12.
1%
1D
#920000
01.
02.
0%
0D
#930000
b101 3.
b101 \
11.
12.
1%
1D
#940000
01.
02.
0%
0D
#950000
04.
00.
b0 3.
0]
0L
b0 \
11.
12.
1%
1D
#960000
01.
02.
0%
0D
#970000
b1 3.
b1 \
11.
12.
1%
1D
#980000
01.
02.
0%
0D
#990000
b10 3.
b10 \
11.
12.
1%
1D
#1000000
01.
02.
0%
0D
#1010000
b11 3.
b11 \
11.
12.
1%
1D
#1020000
01.
02.
0%
0D
#1030000
b100 3.
b100 \
11.
12.
1%
1D
#1040000
01.
02.
0%
0D
#1050000
b101 3.
b101 \
11.
12.
1%
1D
#1060000
01.
02.
0%
0D
#1070000
b110 )$
b1100000100010 &$
b1100000100010 J
b1100000100010 ($
b101 n
b10001010001100000100010 h
b10001010001100000100010 $.
b10001010001100000100010 &.
b10001010001100000100010 E
b10001010001100000100010 (.
b10001010001100000100010 1
b1100000100010 g
b1100000100010 .
b1100000100010 %$
b11 j
b11 :
b11 m
b101 k
b101 e
b10 d
b100010 f
b100010 -
b100010 O
b0 i
b0 5
b0 P
b101 `
b1100000100111 ".
b101 F
b101 !.
b101 #.
b101 H
b101 '.
b101 ).
b101 8
b101 ^
b100 _
b10001010001100000100010 /
b10001010001100000100010 b
b10001010001100000100010 c
b100 6
b100 a
14.
10.
b0 3.
1]
1L
b0 \
11.
12.
1%
1D
#1080000
01.
02.
0%
0D
#1090000
1G"
b11 n
b11 I
b11 o
b11 q
b11 A
b11 w
b11 ;"
b1 3.
1Z
b1000 x
b1000 <"
1>
0S
0B
1Y
1=
b1 \
11.
12.
1%
1D
#1100000
01.
02.
0%
0D
#1110000
b10 3.
b10 \
b100000010000111111111010 H"
b100000010000111111111010 2"
b100000010000111111111010 W#
b100000010000111111111010 y#
11.
12.
1%
1D
#1120000
01.
02.
0%
0D
#1130000
b11 3.
b11 \
11.
12.
1%
1D
#1140000
01.
02.
0%
0D
#1150000
b100 3.
b100 \
11.
12.
1%
1D
#1160000
01.
02.
0%
0D
#1170000
b101 3.
b101 \
11.
12.
1%
1D
#1180000
01.
02.
0%
0D
#1190000
04.
00.
b0 3.
0]
0L
b0 \
11.
12.
1%
1D
#1200000
01.
02.
0%
0D
#1210000
b1 3.
b1 \
11.
12.
1%
1D
#1220000
01.
02.
0%
0D
#1230000
b10 3.
b10 \
11.
12.
1%
1D
#1240000
01.
02.
0%
0D
#1250000
b11 3.
b11 \
11.
12.
1%
1D
#1260000
01.
02.
0%
0D
#1270000
b100 3.
b100 \
11.
12.
1%
1D
#1280000
01.
02.
0%
0D
#1290000
b101 3.
b101 \
11.
12.
1%
1D
#1300000
01.
02.
0%
0D
#1310000
b10000 &$
b10000 J
b10000 ($
0C
1`%
b0 -$
0N
1X%
0.$
0b*
1S%
b1 D$
b1 d*
1W%
0[*
b0 <$
0o-
1O%
1\*
0V*
0=$
1p-
0j-
0c*
1J%
0Z*
0n-
1N%
0R*
0f-
1F%
1S*
0M*
1g-
0a-
1A%
0p)
0Q*
0&-
0e-
1E%
0h)
0I*
0|,
0]-
1=%
1i)
0c)
1J*
0D*
1},
0w,
1^-
0X-
18%
0g)
0H*
0{,
0\-
1<%
0_)
0@*
0s,
0T-
14%
1`)
0Z)
1A*
0;*
1t,
0n,
1U-
0O-
1/%
0^)
0?*
0r,
0S-
13%
0V)
07*
0j,
0K-
1+%
1W)
0Q)
18*
02*
1k,
0e,
1L-
0F-
1&%
01)
0U)
06*
0E,
0i,
0J-
1*%
0))
0M)
0.*
0=,
0a,
0B-
1"%
1*)
0$)
1N)
0H)
1/*
0)*
1>,
08,
1b,
0\,
1C-
0=-
1{$
b1111111111111111111111111111110 ~-
0()
0L)
0-*
0<,
0`,
0A-
1!%
0~(
0D)
0%*
04,
0X,
09-
1w$
1!)
0y(
1E)
0?)
b11111111011111101111000000001100 )
b11111111011111101111000000001100 >$
b11111111011111101111000000001100 }-
b11111111011111101111000000001100 *.
b11111111011111101111000000001100 -.
b11111111011111101111000000001100 /.
b11111111011111101111000000001100 @
b11111111011111101111000000001100 v
b11111111011111101111000000001100 ="
b11111111011111101111000000001100 @"
b11111111011111101111000000001100 C"
b11111111011111101111000000001100 F"
b11111111011111101111000000001100 I"
b11111111011111101111000000001100 L"
b11111111011111101111000000001100 O"
b11111111011111101111000000001100 R"
b11111111011111101111000000001100 U"
b11111111011111101111000000001100 X"
b11111111011111101111000000001100 ["
b11111111011111101111000000001100 ^"
b11111111011111101111000000001100 a"
b11111111011111101111000000001100 d"
b11111111011111101111000000001100 g"
b11111111011111101111000000001100 j"
b11111111011111101111000000001100 m"
b11111111011111101111000000001100 p"
b11111111011111101111000000001100 s"
b11111111011111101111000000001100 v"
b11111111011111101111000000001100 y"
b11111111011111101111000000001100 |"
b11111111011111101111000000001100 !#
b11111111011111101111000000001100 $#
b11111111011111101111000000001100 '#
b11111111011111101111000000001100 *#
b11111111011111101111000000001100 -#
b11111111011111101111000000001100 0#
b11111111011111101111000000001100 3#
b11111111011111101111000000001100 6#
b11111111011111101111000000001100 9#
b11111111011111101111000000001100 <#
1&*
0~)
15,
0/,
1Y,
0S,
1:-
04-
1r$
0}(
0C)
0$*
03,
0W,
08-
0o$
1v$
0u(
0;)
0z)
0+,
0O,
00-
1n$
1x'
1.+
1o'
1v(
0p(
1<)
06)
b11111111011111101111000000001100 4$
1{)
0u)
1%+
1,,
0&,
1P,
0J,
11-
0+-
1`$
1i$
0x$
0#%
0,%
05%
0>%
0G%
0P%
0Y%
1p'
1z'
0%(
0.(
07(
0@(
0I(
0R(
0[(
0d(
1&+
10+
09+
0B+
0K+
0T+
0]+
0f+
0o+
0x+
1d$
1m$
1g'
0t(
0:)
0y)
1{*
0*,
0N,
0/-
1h$
1q$
1z$
1%%
1.%
17%
1@%
1I%
1R%
1i'
0s'
0|'
0'(
00(
09(
0B(
0K(
0T(
0](
1}*
0)+
02+
0;+
0D+
0M+
0V+
0_+
0h+
0q+
0]$
1\$
0f$
1e$
b111111111110 J$
1b%
1(&
1g&
b100000010001000000000000 ?$
b100000010001000000000000 L$
0h'
1b'
1q'
1m(
0l(
03)
0-)
02)
0r)
b11111111011111101111000000001100 E$
b11111111011111101111000000001100 W'
0l)
0q)
b111 U'
0|*
1v*
1'+
1#,
0",
0G,
0A,
0F,
0(-
b11111111011111101111000000001100 e*
b11111111011111101111000000001100 k*
0"-
0'-
b111 i*
0c$
1l$
1u$
1~$
1)%
12%
1;%
1D%
1M%
1V%
1%&
1d&
1n'
0w'
0"(
0+(
04(
0=(
0F(
0O(
0X(
0a(
00)
0o)
1$+
0-+
06+
0?+
0H+
0Q+
0Z+
0c+
0l+
0u+
0D,
0%-
0V$
1U$
1_$
0^$
0[%
1!&
1`&
1a'
0j'
1f(
0e(
0,)
0+)
0k)
0j)
b100000010000111111111100 F$
b100000010000111111111100 _*
1u*
0~*
1z+
0y+
0@,
0?,
0!-
0~,
b10 @$
b10 s-
b11111111111111111111111111111101 A$
b11111111111111111111111111111101 v-
b11111111011111101111000000000001 B$
b11111111011111101111000000000001 y-
b100000010000111111111110 C$
b100000010000111111111110 |-
0G"
1>"
0b$
1k$
1t$
1}$
1(%
11%
1:%
1C%
1L%
1U%
1$&
1c&
0m'
1v'
1!(
1*(
13(
1<(
1E(
1N(
1W(
1`(
1/)
1n)
0#+
1,+
15+
1>+
1G+
1P+
1Y+
1b+
1k+
1t+
1C,
1$-
1X$
1a$
0]%
0#&
0b&
1c'
1l'
0h(
0.)
0m)
1w*
1"+
0|+
0B,
0#-
b101000110000000000010000 h
b101000110000000000010000 $.
b101000110000000000010000 &.
b101000110000000000010000 E
b101000110000000000010000 (.
b101000110000000000010000 1
b10000 g
b10000 .
b10000 %$
b0 j
b0 :
b0 m
b0 n
b0 I
b0 o
b0 q
b1 x
b1 <"
b0 A
b0 w
b0 ;"
b11 k
b11 ?
b11 l
b11 e
b100000010000111111111010 <
b100000010000111111111010 s
b100000010000111111111010 $$
b100000010000111111111010 '$
b100000010000111111111010 +.
b100000010000111111111010 )$
b100000010000111111111010 +
b100000010000111111111010 +$
b100000010000111111111010 H$
b100000010000111111111010 S'
b100000010000111111111010 ^*
b100000010000111111111010 a*
b100000010000111111111010 g*
b100000010000111111111010 r-
b100000010000111111111010 u-
b100000010000111111111010 x-
b100000010000111111111010 {-
b11 '
b11 u
b11 a#
b101 d
b110 ;
b110 r
b110 `#
b110 *$
b110 G$
b110 R'
b110 ]*
b110 `*
b110 f*
b110 q-
b110 t-
b110 w-
b110 z-
b110 %.
b101 &
b101 t
b101 ?#
b10000 f
b10000 -
b10000 O
b101011 i
b101011 5
b101011 P
b110 `
b10110 ".
b110 F
b110 !.
b110 #.
b110 H
b110 '.
b110 ).
b110 8
b110 ^
b101 _
b10101100101000110000000000010000 /
b10101100101000110000000000010000 b
b10101100101000110000000000010000 c
b101 6
b101 a
14.
10.
b0 3.
1]
1L
b0 \
11.
12.
1%
1D
#1320000
01.
02.
0%
0D
#1330000
b100000010000111111111010 ,
b100000010000111111111010 ,.
b100000010000111111111010 ..
0!%
0m$
0w$
0e$
1x$
0r$
0b%
1%(
19+
1f$
0`$
0v$
0*%
03%
0<%
0E%
0N%
0W%
0`%
1#(
17+
b1111111111111111111111111111111 ~-
0d$
0n$
0"%
0+%
04%
0=%
0F%
0O%
0X%
1y'
b1111 U'
1/+
b1111 i*
1]$
0\$
b0 J$
0o$
0i$
0#%
0{$
0,%
0&%
05%
0/%
0>%
08%
0G%
0A%
0P%
0J%
0Y%
0S%
0(&
0g&
b10110 ?$
b10110 L$
1h'
0b'
0z'
1t'
1.(
17(
1@(
1I(
1R(
1[(
1d(
13)
1r)
b11111111111111111111111111110110 E$
b11111111111111111111111111110110 W'
1|*
0v*
00+
1*+
1B+
1K+
1T+
1]+
1f+
1o+
1x+
1G,
1(-
b11111111111111111111111111110110 e*
b11111111111111111111111111110110 k*
b10110 )
b10110 >$
b10110 }-
b10110 *.
b10110 -.
b10110 /.
b10110 @
b10110 v
b10110 ="
b10110 @"
b10110 C"
b10110 F"
b10110 I"
b10110 L"
b10110 O"
b10110 R"
b10110 U"
b10110 X"
b10110 ["
b10110 ^"
b10110 a"
b10110 d"
b10110 g"
b10110 j"
b10110 m"
b10110 p"
b10110 s"
b10110 v"
b10110 y"
b10110 |"
b10110 !#
b10110 $#
b10110 '#
b10110 *#
b10110 -#
b10110 0#
b10110 3#
b10110 6#
b10110 9#
b10110 <#
1V$
0U$
0h$
0z$
0%%
0.%
07%
0@%
0I%
0R%
0!&
0`&
0a'
1`'
1s'
1'(
10(
19(
1B(
1K(
1T(
1](
1,)
1k)
0u*
1t*
1)+
1;+
1D+
1M+
1V+
1_+
1h+
1q+
1@,
1!-
0Z$
0l$
0~$
0)%
02%
0;%
0D%
0M%
0V%
0%&
0d&
1e'
1w'
1+(
14(
1=(
1F(
1O(
1X(
1a(
10)
1o)
b10110 F$
b10110 _*
1y*
1-+
1?+
1H+
1Q+
1Z+
1c+
1l+
1u+
1D,
1%-
b0 @$
b0 s-
b11111111111111111111111111111111 A$
b11111111111111111111111111111111 v-
b11111111111111111111111111101001 B$
b11111111111111111111111111101001 y-
b10110 C$
b10110 |-
b10110 3$
0Y$
0k$
0}$
0(%
01%
0:%
0C%
0L%
0U%
0$&
0c&
0d'
0v'
0*(
03(
0<(
0E(
0N(
0W(
0`(
0/)
0n)
0x*
0,+
0>+
0G+
0P+
0Y+
0b+
0k+
0t+
0C,
0$-
10$
b0 4$
0>"
b10000 )$
b10000 +
b10000 +$
b10000 H$
b10000 S'
b10000 ^*
b10000 a*
b10000 g*
b10000 r-
b10000 u-
b10000 x-
b10000 {-
b11 n
b11 I
b11 o
b11 q
b11 A
b11 w
b11 ;"
b1 3.
0Z
b0 x
b0 <"
0>
1R
1*
1V
13
b0 Q
b0 (
b0 /$
0Y
0=
b1 \
11.
12.
1%
1D
#1340000
01.
02.
0%
0D
#1350000
b10 3.
b10 \
11.
12.
1%
1D
#1360000
01.
02.
0%
0D
#1370000
b11 3.
b11 \
11.
12.
1%
1D
#1380000
01.
02.
0%
0D
#1390000
b100 3.
b100 \
11.
12.
1%
1D
#1400000
01.
02.
0%
0D
#1410000
b101 3.
b101 \
11.
12.
1%
1D
#1420000
01.
02.
0%
0D
#1430000
04.
00.
b0 3.
0]
0L
b0 \
11.
12.
1%
1D
#1440000
01.
02.
0%
0D
#1450000
b1 3.
b1 \
11.
12.
1%
1D
#1460000
01.
02.
0%
0D
#1470000
b10 3.
b10 \
11.
12.
1%
1D
#1480000
01.
02.
0%
0D
#1490000
b11 3.
b11 \
11.
12.
1%
1D
#1500000
01.
02.
0%
0D
#1510000
b100 3.
b100 \
11.
12.
1%
1D
#1520000
01.
02.
0%
0D
#1530000
b101 3.
b101 \
11.
12.
1%
1D
#1540000
01.
02.
0%
0D
#1550000
x`$
xi$
xr$
xW$
xd$
xm$
xv$
x[$
x\$
xe$
xn$
xS$
xU$
x^$
xg$
xy$
x$%
x-%
x6%
x?%
xH%
xQ%
xZ%
xc%
xl%
xu%
x~%
x)&
x2&
x;&
xD&
xM&
xV&
x_&
xh&
xq&
xz&
x%'
x.'
x7'
x@'
xI'
xM$
1Z$
1c$
1l$
1~$
1)%
12%
1;%
1D%
1M%
1V%
1_%
1h%
1q%
1z%
1%&
1.&
17&
1@&
1I&
1R&
1[&
1d&
1m&
1v&
1!'
1*'
13'
1<'
1E'
1N'
1R$
0e'
0n'
0w'
0+(
04(
0=(
0F(
0O(
0X(
0a(
0j(
0s(
0|(
0')
00)
09)
0B)
0K)
0T)
0])
0f)
0o)
0x)
0#*
0,*
05*
0>*
0G*
0P*
0Y*
0]'
0y*
0$+
0-+
0?+
0H+
0Q+
0Z+
0c+
0l+
0u+
0~+
0),
02,
0;,
0D,
0M,
0V,
0_,
0h,
0q,
0z,
0%-
0.-
07-
0@-
0I-
0R-
0[-
0d-
0m-
0q*
1Y$
1b$
1k$
1}$
1(%
11%
1:%
1C%
1L%
1U%
1^%
1g%
1p%
1y%
1$&
1-&
16&
1?&
1H&
1Q&
1Z&
1c&
1l&
1u&
1~&
1)'
12'
1;'
1D'
1M'
1Q$
1d'
1m'
1v'
1*(
13(
1<(
1E(
1N(
1W(
1`(
1i(
1r(
1{(
1&)
1/)
18)
1A)
1J)
1S)
1\)
1e)
1n)
1w)
1"*
1+*
14*
1=*
1F*
1O*
1X*
1\'
1x*
1#+
1,+
1>+
1G+
1P+
1Y+
1b+
1k+
1t+
1}+
1(,
11,
1:,
1C,
1L,
1U,
1^,
1g,
1p,
1y,
1$-
1--
16-
1?-
1H-
1Q-
1Z-
1c-
1l-
1p*
b11111111111111111111111111111111 &$
b11111111111111111111111111111111 J
b11111111111111111111111111111111 ($
b11111111111111111111111111111111 +
b11111111111111111111111111111111 +$
b11111111111111111111111111111111 H$
b11111111111111111111111111111111 S'
b11111111111111111111111111111111 ^*
b11111111111111111111111111111111 a*
b11111111111111111111111111111111 g*
b11111111111111111111111111111111 r-
b11111111111111111111111111111111 u-
b11111111111111111111111111111111 x-
b11111111111111111111111111111111 {-
xC
b0x -$
xN
x,$
xP'
b0x <$
xK'
x;$
xO'
xG'
xB'
xF'
x>'
x9'
x='
x5'
x0'
x4'
x,'
xG
x''
x+'
x#'
x|&
x"'
xx&
xs&
xw&
xo&
xj&
xn&
xf&
xa&
xe&
x]&
xX&
x\&
xT&
xO&
xS&
xK&
xF&
xJ&
xB&
x=&
xA&
x9&
x4&
x8&
x0&
x+&
x/&
x'&
x"&
x&&
x|%
xw%
x{%
xs%
xn%
xr%
xj%
xe%
xi%
xa%
x\%
x`%
xX%
xS%
xW%
xO%
xJ%
xN%
xF%
xA%
xE%
x=%
x8%
x<%
x4%
x/%
x3%
bx ~-
x+%
x&%
bx )
bx >$
bx }-
bx *.
bx -.
bx /.
bx @
bx v
bx ="
bx @"
bx C"
bx F"
bx I"
bx L"
bx O"
bx R"
bx U"
bx X"
bx ["
bx ^"
bx a"
bx d"
bx g"
bx j"
bx m"
bx p"
bx s"
bx v"
bx y"
bx |"
bx !#
bx $#
bx '#
bx *#
bx -#
bx 0#
bx 3#
bx 6#
bx 9#
bx <#
bx ,
bx ,.
bx ..
x*%
x"%
x((
x<+
x{$
bx 3$
x#(
x,(
x1(
x:(
xC(
xL(
xU(
x^(
xg(
xp(
xy(
x$)
x-)
x6)
x?)
xH)
xQ)
xZ)
xc)
xl)
xu)
x~)
x)*
x2*
x;*
xD*
xM*
xV*
x=$
x.$
xf'
x7+
x@+
xE+
xN+
xW+
x`+
xi+
xr+
x{+
x&,
x/,
x8,
xA,
xJ,
xS,
x\,
xe,
xn,
xw,
x"-
x+-
x4-
x=-
xF-
xO-
xX-
xa-
xj-
xc*
b0x D$
b0x d*
xb*
xz*
x!%
xo'
xx'
xy'
x$(
x5(
x>(
xG(
xP(
xY(
xb(
xk(
xt(
x}(
x()
x1)
x:)
xC)
xL)
xU)
x^)
xg)
xp)
xy)
x$*
x-*
x6*
x?*
xH*
xQ*
xZ*
x^'
x%+
x.+
x/+
x8+
xI+
xR+
x[+
xd+
xm+
xv+
x!,
x*,
x3,
x<,
xE,
xN,
xW,
x`,
xi,
xr,
x{,
x&-
x/-
x8-
xA-
xJ-
xS-
x\-
xe-
xn-
xr*
x]$
xf$
xo$
xx$
xw$
bx J$
x#%
x,%
x5%
x>%
xG%
xP%
xY%
xb%
xk%
xt%
x}%
x(&
x1&
x:&
xC&
xL&
xU&
x^&
xg&
xp&
xy&
x$'
x-'
x6'
x?'
xH'
xQ'
xT$
bx ?$
bx L$
xh'
xb'
xg'
xq'
xk'
xp'
xz'
xt'
x%(
x}'
x.(
x-(
x7(
x6(
x@(
x?(
xI(
xH(
xR(
xQ(
x[(
xZ(
xd(
xc(
xm(
xl(
xv(
xu(
x!)
x~(
x*)
x))
x3)
x2)
x<)
x;)
xE)
xD)
xN)
xM)
xW)
xV)
x`)
x_)
xi)
xh)
xr)
xq)
x{)
xz)
x&*
x%*
x/*
x.*
x8*
x7*
xA*
x@*
xJ*
xI*
xS*
xR*
x\*
x[*
bx U'
x_'
bx E$
bx W'
xZ'
x|*
xv*
x{*
x'+
x!+
x&+
x0+
x*+
x9+
x3+
xB+
xA+
xK+
xJ+
xT+
xS+
x]+
x\+
xf+
xe+
xo+
xn+
xx+
xw+
x#,
x",
x,,
x+,
x5,
x4,
x>,
x=,
xG,
xF,
xP,
xO,
xY,
xX,
xb,
xa,
xk,
xj,
xt,
xs,
x},
x|,
x(-
x'-
x1-
x0-
x:-
x9-
xC-
xB-
xL-
xK-
xU-
xT-
x^-
x]-
xg-
xf-
xp-
xo-
bx i*
xs*
bx e*
bx k*
xn*
xV$
x_$
xh$
xq$
xp$
xz$
x%%
x.%
x7%
x@%
xI%
xR%
x[%
xd%
xm%
xv%
x!&
x*&
x3&
x<&
xE&
xN&
xW&
x`&
xi&
xr&
x{&
x&'
x/'
x8'
xA'
xJ'
xN$
xa'
0`'
xj'
0i'
xs'
0r'
x|'
x'(
0&(
x0(
0/(
x9(
08(
xB(
0A(
xK(
0J(
xT(
0S(
x](
0\(
xf(
0e(
xo(
0n(
xx(
0w(
x#)
0")
x,)
0+)
x5)
04)
x>)
0=)
xG)
0F)
xP)
0O)
xY)
0X)
xb)
0a)
xk)
0j)
xt)
0s)
x})
0|)
x(*
0'*
x1*
00*
x:*
09*
xC*
0B*
xL*
0K*
xU*
0T*
xY'
0X'
bx F$
bx _*
xu*
0t*
x~*
0}*
x)+
0(+
x2+
x;+
0:+
xD+
0C+
xM+
0L+
xV+
0U+
x_+
0^+
xh+
0g+
xq+
0p+
xz+
0y+
x%,
0$,
x.,
0-,
x7,
06,
x@,
0?,
xI,
0H,
xR,
0Q,
x[,
0Z,
xd,
0c,
xm,
0l,
xv,
0u,
x!-
0~,
x*-
0)-
x3-
02-
x<-
0;-
xE-
0D-
xN-
0M-
xW-
0V-
x`-
0_-
xi-
0h-
xm*
0l*
bx @$
bx s-
bx A$
bx v-
b0 B$
b0 y-
b11111111111111111111111111111111 C$
b11111111111111111111111111111111 |-
b11111111111111111111111111111111 )$
xX$
xa$
xj$
xs$
x|$
x'%
x0%
x9%
xB%
xK%
xT%
x]%
xf%
xo%
xx%
x#&
x,&
x5&
x>&
xG&
xP&
xY&
xb&
xk&
xt&
x}&
x('
x1'
x:'
xC'
xL'
xP$
xc'
xl'
xu'
x~'
x)(
x2(
x;(
xD(
xM(
xV(
x_(
xh(
xq(
xz(
x%)
x.)
x7)
x@)
xI)
xR)
x[)
xd)
xm)
xv)
x!*
x**
x3*
x<*
xE*
xN*
xW*
x['
xw*
x"+
x++
x4+
x=+
xF+
xO+
xX+
xa+
xj+
xs+
x|+
x',
x0,
x9,
xB,
xK,
xT,
x],
xf,
xo,
xx,
x#-
x,-
x5-
x>-
xG-
xP-
xY-
xb-
xk-
xo*
b11111111111111111111111111 h
b11111111111111111111111111 $.
b11111111111111111111111111 &.
b11111111111111111111111111 E
b11111111111111111111111111 (.
b11111111111111111111111111 1
b1111111111111111 g
b1111111111111111 .
b1111111111111111 %$
b11111 j
b11111 :
b11111 m
b11111 k
b11111 ?
b11111 l
b11111 n
b11111 I
b11111 o
b11111 q
b11111 A
b11111 w
b11111 ;"
b11111 e
bx <
bx s
bx $$
bx '$
bx +.
b11111 '
b11111 u
b11111 a#
b11111 d
bx ;
bx r
bx `#
bx *$
bx G$
bx R'
bx ]*
bx `*
bx f*
bx q-
bx t-
bx w-
bx z-
bx %.
b11111 &
b11111 t
b11111 ?#
b111111 f
b111111 -
b111111 O
b111111 i
b111111 5
b111111 P
b111 `
b110 ".
b111 F
b111 !.
b111 #.
b111 H
b111 '.
b111 ).
b111 8
b111 ^
b110 _
b11111111111111111111111111111111 /
b11111111111111111111111111111111 b
b11111111111111111111111111111111 c
b110 6
b110 a
14.
10.
b0 3.
1]
1L
b0 \
11.
12.
1%
1D
#1560000
01.
02.
0%
0D
#1570000
b1 3.
b1 \
11.
12.
1%
1D
