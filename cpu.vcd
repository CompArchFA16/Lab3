$date
	Wed Nov 16 21:46:40 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alucontrol $end
$var wire 2 ! ALUop [1:0] $end
$var wire 6 " instruction [5:0] $end
$var reg 3 # ALUcontrol [2:0] $end
$upscope $end
$scope module cputest $end
$var reg 1 $ clk $end
$scope module test $end
$var wire 32 % ALU_in [31:0] $end
$var wire 3 & ALUop [2:0] $end
$var wire 32 ' ALUresult [31:0] $end
$var wire 1 ( ALUsrc $end
$var wire 1 ) ALUzero $end
$var wire 1 * Branch $end
$var wire 2 + Jump [1:0] $end
$var wire 1 , MemRead $end
$var wire 1 - MemWrite $end
$var wire 2 . MemtoReg [1:0] $end
$var wire 2 / RegDst [1:0] $end
$var wire 1 0 RegWrite $end
$var wire 32 1 SEinst [31:0] $end
$var wire 32 2 addALUres [31:0] $end
$var wire 32 3 branch_out [31:0] $end
$var wire 1 4 clk $end
$var wire 32 5 datamem_readData [31:0] $end
$var wire 32 6 inst [31:0] $end
$var wire 32 7 pc4_out [31:0] $end
$var wire 32 8 pc_in [31:0] $end
$var wire 32 9 pc_out [31:0] $end
$var wire 32 : reg_readData1 [31:0] $end
$var wire 32 ; reg_readData2 [31:0] $end
$var wire 32 < writeData [31:0] $end
$var wire 5 = writeRegister [4:0] $end
$scope module cpuPC $end
$var wire 1 4 clk $end
$var wire 32 > pc_in [31:0] $end
$var reg 32 ? pc_out [31:0] $end
$upscope $end
$scope module cpuIM $end
$var wire 32 @ instruction [31:0] $end
$var wire 32 A read_address [31:0] $end
$upscope $end
$scope module cpuControl $end
$var wire 1 B clk $end
$var wire 6 C instruction [5:0] $end
$var reg 3 D ALUOp [2:0] $end
$var reg 1 E ALUSrc $end
$var reg 1 F Branch $end
$var reg 2 G Jump [1:0] $end
$var reg 1 H MemRead $end
$var reg 1 I MemWrite $end
$var reg 2 J MemtoReg [1:0] $end
$var reg 2 K RegDst [1:0] $end
$var reg 1 L RegWrite $end
$upscope $end
$scope module mux5_inst_reg $end
$var wire 5 M in0 [4:0] $end
$var wire 5 N in1 [4:0] $end
$var wire 5 O in2 [4:0] $end
$var wire 2 P sel [1:0] $end
$var reg 5 Q out [4:0] $end
$scope begin MUX $end
$upscope $end
$upscope $end
$scope module cpuRegister $end
$var wire 1 4 clk $end
$var wire 32 R ra [31:0] $end
$var wire 5 S ra_addr [4:0] $end
$var wire 32 T rb [31:0] $end
$var wire 5 U rb_addr [4:0] $end
$var wire 32 V wd [31:0] $end
$var wire 5 W wd_addr [4:0] $end
$var wire 1 0 wrEn $end
$upscope $end
$scope module cpuSE $end
$var wire 16 X seIn [15:0] $end
$var wire 32 Y seOut [31:0] $end
$scope begin gen1[16] $end
$upscope $end
$scope begin gen1[17] $end
$upscope $end
$scope begin gen1[18] $end
$upscope $end
$scope begin gen1[19] $end
$upscope $end
$scope begin gen1[20] $end
$upscope $end
$scope begin gen1[21] $end
$upscope $end
$scope begin gen1[22] $end
$upscope $end
$scope begin gen1[23] $end
$upscope $end
$scope begin gen1[24] $end
$upscope $end
$scope begin gen1[25] $end
$upscope $end
$scope begin gen1[26] $end
$upscope $end
$scope begin gen1[27] $end
$upscope $end
$scope begin gen1[28] $end
$upscope $end
$scope begin gen1[29] $end
$upscope $end
$scope begin gen1[30] $end
$upscope $end
$scope begin gen1[31] $end
$upscope $end
$upscope $end
$scope module mux_reg_alu $end
$var wire 32 Z in0 [31:0] $end
$var wire 32 [ in1 [31:0] $end
$var wire 32 \ out [31:0] $end
$var wire 1 ( sel $end
$upscope $end
$scope module cpuALU $end
$var wire 32 ] a [31:0] $end
$var wire 32 ^ aluRes [31:0] $end
$var wire 3 _ alucontrol [2:0] $end
$var wire 32 ` b [31:0] $end
$var wire 1 ) zero $end
$var reg 32 a aluRes_reg [31:0] $end
$upscope $end
$scope module cpu_dm $end
$var wire 1 , MemRead $end
$var wire 1 - MemWrite $end
$var wire 32 b address [31:0] $end
$var wire 1 4 clk $end
$var wire 32 c readData [31:0] $end
$var wire 32 d writeData [31:0] $end
$var reg 32 e readData_reg [31:0] $end
$upscope $end
$scope module cpu_add_pc $end
$var wire 32 f in [31:0] $end
$var wire 32 g out [31:0] $end
$upscope $end
$scope module mux_datamem $end
$var wire 32 h in0 [31:0] $end
$var wire 32 i in1 [31:0] $end
$var wire 32 j in2 [31:0] $end
$var wire 2 k sel [1:0] $end
$var reg 32 l out [31:0] $end
$scope begin MUX $end
$upscope $end
$upscope $end
$scope module cpu_add_alu $end
$var wire 32 m in0 [31:0] $end
$var wire 32 n in1 [31:0] $end
$var wire 32 o out [31:0] $end
$upscope $end
$scope module mux_branch $end
$var wire 32 p in0 [31:0] $end
$var wire 32 q in1 [31:0] $end
$var wire 32 r out [31:0] $end
$var wire 1 s sel $end
$upscope $end
$scope module mux_jump $end
$var wire 32 t in0 [31:0] $end
$var wire 32 u in1 [31:0] $end
$var wire 32 v in2 [31:0] $end
$var wire 2 w sel [1:0] $end
$var reg 32 x out [31:0] $end
$scope begin MUX $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100 x
b0 w
b0 v
b11101001111111111110000 u
b100 t
0s
b100 r
b1111111111110100 q
b100 p
b1111111111110100 o
b11111111111100 n
b100 m
b11111111111100 l
b0 k
b100 j
bx i
b11111111111100 h
b100 g
b0 f
bx e
bx d
bx c
b11111111111100 b
b11111111111100 a
b11111111111100 `
b100 _
b11111111111100 ^
b0 ]
b11111111111100 \
b11111111111100 [
bx Z
b11111111111100 Y
b11111111111100 X
b111 W
b11111111111100 V
b11101 U
bx T
b0 S
b0 R
b111 Q
b1 P
b11111 O
b111 N
b11101 M
1L
b1 K
b0 J
0I
0H
b0 G
0F
1E
b100 D
b1110 C
zB
b0 A
b111000000111010011111111111100 @
b0 ?
b100 >
b111 =
b11111111111100 <
bx ;
b0 :
b0 9
b100 8
b100 7
b111000000111010011111111111100 6
bx 5
14
b100 3
b1111111111110100 2
b11111111111100 1
10
b1 /
b0 .
0-
0,
b0 +
0*
0)
1(
b11111111111100 '
b100 &
b11111111111100 %
1$
b0 #
bz "
bz !
$end
#100000
0$
04
#200000
b100 l
b100 <
b100 V
b100 a
b100 '
b100 ^
b100 b
b100 h
b1000 x
b1000 8
b1000 >
b100 %
b100 \
b100 `
b0 Q
b0 =
b0 W
b1000 3
b1000 r
b1000 t
b1000000000000000010000 u
b100 1
b100 Y
b100 [
b100 n
b100 X
b1000 U
b0 N
b1000 M
b11000 2
b11000 o
b11000 q
b1000 7
b1000 g
b1000 j
b1000 m
b1000 p
b100 ?
b111000000010000000000000000100 6
b111000000010000000000000000100 @
b100 9
b100 A
b100 f
1$
14
#300000
0$
04
#400000
b1100 x
b1100 8
b1100 >
b1 %
b1 \
b1 `
b1100 3
b1100 r
b1100 t
b101 l
b101 <
b101 V
b1001000000000000000100 u
b1 1
b1 Y
b1 [
b1 n
b1 X
b1001 U
b1001 M
b10000 2
b10000 o
b10000 q
b1100 7
b1100 g
b1100 j
b1100 m
b1100 p
b101 a
0)
b101 '
b101 ^
b101 b
b101 h
b1000 ?
b111000000010010000000000000001 6
b111000000010010000000000000001 @
b1000 9
b1000 A
b1000 f
b100 :
b100 R
b100 ]
b100 v
1$
14
#500000
0$
04
#600000
x)
b101000000100010 %
b101000000100010 \
b101000000100010 `
b10000 x
b10000 8
b10000 >
b1010 Q
b1010 =
b1010 W
b10000 3
b10000 r
b10000 t
bx l
bx <
bx V
b100001001010100000010001000 u
b101000000100010 1
b101000000100010 Y
b101000000100010 [
b101000000100010 n
b101000000100010 X
b1000 S
b1010 N
b0 C
b10100000010011000 2
b10100000010011000 o
b10100000010011000 q
b10000 7
b10000 g
b10000 j
b10000 m
b10000 p
bx a
bx '
bx ^
bx b
bx h
b1100 ?
b1000010010101000000100010 6
b1000010010101000000100010 @
b1100 9
b1100 A
b1100 f
bx :
bx R
bx ]
bx v
1$
14
#700000
0$
04
#800000
b10100 x
b10100 8
b10100 >
b101100000100000 %
b101100000100000 \
b101100000100000 `
b1011 Q
b1011 =
b1011 W
b10100 3
b10100 r
b10100 t
b100001001010110000010000000 u
b101100000100000 1
b101100000100000 Y
b101100000100000 [
b101100000100000 n
b101100000100000 X
b1011 N
b10110000010010100 2
b10110000010010100 o
b10110000010010100 q
b10100 7
b10100 g
b10100 j
b10100 m
b10100 p
b10000 ?
b1000010010101100000100000 6
b1000010010101100000100000 @
b10000 9
b10000 A
b10000 f
1$
14
#900000
0$
04
#1000000
b11000 x
b11000 8
b11000 >
b110000000101010 %
b110000000101010 \
b110000000101010 `
b1100 Q
b1100 =
b1100 W
b11000 3
b11000 r
b11000 t
b100001001011000000010101000 u
b110000000101010 1
b110000000101010 Y
b110000000101010 [
b110000000101010 n
b110000000101010 X
b1100 N
b11000000011000000 2
b11000000011000000 o
b11000000011000000 q
b11000 7
b11000 g
b11000 j
b11000 m
b11000 p
b10100 ?
b1000010010110000000101010 6
b1000010010110000000101010 @
b10100 9
b10100 A
b10100 f
1$
14
#1100000
0$
04
#1200000
b11100 l
b11100 <
b11100 V
b0 a
1)
b0 '
b0 ^
b0 b
b0 h
b0 D
b0 &
b0 _
b1 G
b1 +
b1 w
b10 J
b10 .
b10 k
0E
0(
b10 K
b10 /
b10 P
b101 %
b101 \
b101 `
b101000 x
b101000 8
b101000 >
b11111 Q
b11111 =
b11111 W
b11100 3
b11100 r
b11100 t
b101000 u
b1010 1
b1010 Y
b1010 [
b1010 n
b1010 X
b0 U
b101 ;
b101 T
b101 Z
b101 d
b0 S
b101 :
b101 R
b101 ]
b101 v
b0 N
b0 M
b11 C
b1000100 2
b1000100 o
b1000100 q
b11100 7
b11100 g
b11100 j
b11100 m
b11100 p
b11000 ?
b1100000000000000000000001010 6
b1100000000000000000000001010 @
b11000 9
b11000 A
b11000 f
1$
14
#1300000
0$
04
#1400000
bx a
x)
bx '
bx ^
bx b
bx h
b1000 Q
b1000 =
b1000 W
b1 D
b1 &
b1 _
b0 G
b0 +
b0 w
b0 J
b0 .
b0 k
1I
1-
1E
1(
0L
00
b0 K
b0 /
b0 P
b0 %
b0 \
b0 `
b101100 x
b101100 8
b101100 >
b101100 3
b101100 r
b101100 t
bx l
bx <
bx V
b1110101000000000000000000000 u
b0 1
b0 Y
b0 [
b0 n
b0 X
b1000 U
bx ;
bx T
bx Z
bx d
b11101 S
bx :
bx R
bx ]
bx v
b1000 M
b101011 C
b101100 2
b101100 o
b101100 q
b101100 7
b101100 g
b101100 j
b101100 m
b101100 p
b101000 ?
b10101111101010000000000000000000 6
b10101111101010000000000000000000 @
b101000 9
b101000 A
b101000 f
1$
14
#1500000
0$
04
#1600000
b110000 x
b110000 8
b110000 >
b100 %
b100 \
b100 `
b1001 Q
b1001 =
b1001 W
b110000 3
b110000 r
b110000 t
b1110101001000000000000010000 u
b100 1
b100 Y
b100 [
b100 n
b100 X
b1001 U
b1001 M
b1000000 2
b1000000 o
b1000000 q
b110000 7
b110000 g
b110000 j
b110000 m
b110000 p
b101100 ?
b10101111101010010000000000000100 6
b10101111101010010000000000000100 @
b101100 9
b101100 A
b101100 f
1$
14
#1700000
0$
04
#1800000
b1 J
b1 .
b1 k
1H
1,
0I
0-
1L
10
b110100 x
b110100 8
b110100 >
b0 %
b0 \
b0 `
b1101 Q
b1101 =
b1101 W
b110100 3
b110100 r
b110100 t
b1110101101000000000000000000 u
b0 1
b0 Y
b0 [
b0 n
b0 X
b1101 U
b1101 M
b100011 C
b110100 2
b110100 o
b110100 q
b110100 7
b110100 g
b110100 j
b110100 m
b110100 p
b110000 ?
b10001111101011010000000000000000 6
b10001111101011010000000000000000 @
b110000 9
b110000 A
b110000 f
1$
14
#1900000
0$
04
#2000000
b111000 x
b111000 8
b111000 >
b100 %
b100 \
b100 `
b1110 Q
b1110 =
b1110 W
b111000 3
b111000 r
b111000 t
b1110101110000000000000010000 u
b100 1
b100 Y
b100 [
b100 n
b100 X
b1110 U
b1110 M
b1001000 2
b1001000 o
b1001000 q
b111000 7
b111000 g
b111000 j
b111000 m
b111000 p
b110100 ?
b10001111101011100000000000000100 6
b10001111101011100000000000000100 @
b110100 9
b110100 A
b110100 f
1$
14
#2100000
0$
04
#2200000
b100100 a
0)
b100100 '
b100100 ^
b100100 b
b100100 h
b1000 %
b1000 \
b1000 `
b111100 x
b111100 8
b111100 >
b0 Q
b0 =
b0 W
b111100 3
b111100 r
b111100 t
b1111100000000000000000100000 u
b1000 1
b1000 Y
b1000 [
b1000 n
b1000 X
b0 U
b101 ;
b101 T
b101 Z
b101 d
b11111 S
b11100 :
b11100 R
b11100 ]
b11100 v
b0 M
b0 C
b1011100 2
b1011100 o
b1011100 q
b111100 7
b111100 g
b111100 j
b111100 m
b111100 p
b111000 ?
b11111000000000000000001000 6
b11111000000000000000001000 @
b111000 9
b111000 A
b111000 f
1$
14
#2300000
0$
04
#2400000
bx a
x)
bx '
bx ^
bx b
bx h
b100000000100010 %
b100000000100010 \
b100000000100010 `
b1000000 x
b1000000 8
b1000000 >
b1001 Q
b1001 =
b1001 W
b1000000 3
b1000000 r
b1000000 t
b100001001010000000010001000 u
b100000000100010 1
b100000000100010 Y
b100000000100010 [
b100000000100010 n
b100000000100010 X
b1001 U
b1000 S
bx :
bx R
bx ]
bx v
b1000 N
b1001 M
b10000000011001000 2
b10000000011001000 o
b10000000011001000 q
b1000000 7
b1000000 g
b1000000 j
b1000000 m
b1000000 p
b111100 ?
b1000010010100000000100010 6
b1000010010100000000100010 @
b111100 9
b111100 A
b111100 f
bx ;
bx T
bx Z
bx d
1$
14
#2500000
0$
04
#2600000
b100100 a
0)
b100100 '
b100100 ^
b100100 b
b100100 h
b1000 %
b1000 \
b1000 `
b1000100 x
b1000100 8
b1000100 >
b0 Q
b0 =
b0 W
b1000100 3
b1000100 r
b1000100 t
b1111100000000000000000100000 u
b1000 1
b1000 Y
b1000 [
b1000 n
b1000 X
b0 U
b11111 S
b11100 :
b11100 R
b11100 ]
b11100 v
b0 N
b0 M
b1100100 2
b1100100 o
b1100100 q
b1000100 7
b1000100 g
b1000100 j
b1000100 m
b1000100 p
b1000000 ?
b11111000000000000000001000 6
b11111000000000000000001000 @
b1000000 9
b1000000 A
b1000000 f
1$
14
#2700000
0$
04
#2800000
b0 l
b0 <
b0 V
b0 a
1)
b0 '
b0 ^
b0 b
b0 h
b0 D
b0 &
b0 _
b1 G
b1 +
b1 w
b0 J
b0 .
b0 k
0H
0,
0E
0(
0L
00
bx %
bx \
bx `
b1000100 x
b1000100 8
b1000100 >
b1001000 3
b1001000 r
b1001000 t
b1000100 u
b10001 1
b10001 Y
b10001 [
b10001 n
b10001 X
b0 S
bx :
bx R
bx ]
bx v
b10 C
b10001100 2
b10001100 o
b10001100 q
b1001000 7
b1001000 g
b1001000 j
b1001000 m
b1001000 p
b1000100 ?
b1000000000000000000000010001 6
b1000000000000000000000010001 @
b1000100 9
b1000100 A
b1000100 f
1$
14
#2900000
0$
04
#3000000
1$
14
#3100000
0$
04
#3200000
1$
14
#3300000
0$
04
#3400000
1$
14
#3500000
0$
04
#3600000
1$
14
#3700000
0$
04
#3800000
1$
14
#3900000
0$
04
#4000000
1$
14
#4100000
0$
04
#4200000
1$
14
#4300000
0$
04
#4400000
1$
14
#4500000
0$
04
#4600000
1$
14
#4700000
0$
04
#4800000
1$
14
#4900000
0$
04
#5000000
1$
14
